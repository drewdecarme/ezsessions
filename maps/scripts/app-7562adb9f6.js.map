{"version":3,"sources":["scripts/app.js"],"names":["angular","module","routerConfig","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","controllerAs","$inject","config","playerInitPlaylist","$timeout","link","scope","element","attrs","triggerHandler","directive","restrict","playerController","angularPlayer","$scope","vm","this","isPlaylistActive","isArtActive","isVisualActive","isMenuActive","toggleMenu","toggleView","_var","songs","id","title","artist","art","window","_undefined","SoundManager","smURL","smID","preferFlashCheck","kind","sm2","preferFlash","hasFlash","ignoreFlash","flash","html5_event","oFn","e","result","s","_s","_a","call","_wD","type","h5","setupOptions","flashVersion","debugMode","debugFlash","useConsole","consoleOnly","waitForWindowLoad","bgColor","useHighPerformance","flashPollingInterval","html5PollingInterval","flashLoadTimeout","wmode","allowScriptAccess","useFlashBlock","useHTML5Audio","html5Test","noSWFCache","idPrefix","defaultOptions","autoLoad","autoPlay","from","loops","onid3","onload","whileloading","onplay","onpause","onresume","whileplaying","onposition","onstop","onfailure","onfinish","multiShot","multiShotEvents","position","pan","stream","to","usePolicyFile","volume","flash9Options","isMovieStar","usePeakData","useWaveformData","useEQData","onbufferchange","ondataerror","movieStarOptions","bufferTime","serverURL","onconnect","duration","audioFormats","mp3","required","mp4","related","ogg","opus","wav","movieID","debugID","debugURLParam","versionNumber","version","movieURL","altURL","swfLoaded","enabled","oMC","sounds","soundIDs","muted","didFlashBlock","filePattern","filePatterns","flash8","flash9","features","buffering","peakData","waveformData","eqData","movieStar","sandbox","types","remote","localWithFile","localWithNetwork","localTrusted","description","noRemote","noLocal","html5","usingFlash","html5Only","SMSound","doNothing","setProperties","init","fV","debugTS","_wDS","initComplete","mixin","assign","extraOptions","addOnEvent","processOnEvents","initUserOnload","delayWaitForEI","waitForEI","rebootIntoHTML5","setVersionInfo","handleFocus","strings","initMovie","preInit","domContentLoaded","winOnLoad","didDCLoaded","getDocument","createMovie","catchError","setPolling","initDebug","disableObject","failSafely","normalizeMovieURL","str","flashBlockHandler","getSWFCSS","swfCSS","toggleDebug","loopFix","policyFix","complain","idCheck","startTimer","stopTimer","timerExecute","parseURL","canIgnoreFlash","featureCheck","html5OK","html5CanPlay","html5Ext","html5Unload","domContentLoadedIE","testHTML5","event","lastGlobalHTML5URL","detectFlash","badSafariFix","html5_events","showSupport","flushMessages","wrapCallback","globalHTML5Audio","sm","smc","ua","navigator","userAgent","wl","location","href","toString","doc","document","on_queue","debugOpen","didAppend","appendSuccess","didInit","disabled","windowLoaded","wdCount","debugLevels","defaultFlashVersion","oRemoved","oRemovedHTML","waitingForEI","initPending","h5TimerCount","h5IntervalTimer","messages","needsFlash","slice","Array","prototype","useGlobalHTML5Audio","idCounter","is_iDevice","match","isAndroid","isIE","isWebkit","isSafari","isOpera","mobileHTML5","isBadSafari","hasConsole","console","log","isFocused","hasFocus","tryInitOnFocus","okToDisable","flashMIME","msecScale","emptyURL","emptyWAV","overHTTP","protocol","http","netStreamMimeTypes","netStreamTypes","netStreamPattern","RegExp","join","mimePattern","useAltURL","swfBox","swfDefault","swfError","swfTimedout","swfUnblocked","sm2Debug","highPerf","flashDebug","hasHTML5","Audio","opera","canPlayType","setup","options","noURL","ok","beginDelayedInit","readyState","setTimeout","supported","getMovie","createSound","oOptions","_url","make","push","cs","cs_string","oSound","undefined","charAt","_setup_html5","_createSound","connected","apply","load","play","destroySound","sID","_bFromSound","i","oS","_iO","stop","unload","length","splice","destruct","onPosition","nPosition","oMethod","oScope","clearOnPosition","overloaded","Object","audioVisualizer","audio","start","setPosition","nMsecOffset","stopAll","hasOwnProperty","pause","pauseAll","resume","resumeAll","togglePause","setPan","nPan","setVolume","nVol","mute","String","muteAll","unmute","unmuteAll","toggleMute","getMemoryUse","ram","parseInt","_getMemoryUse","disable","bNoDisable","remove","canPlayMIME","sMIME","canPlayURL","sURL","canPlayLink","oLink","getSoundById","_suppressDebug","onready","sType","ontimeout","_writeDebug","sText","sTypeOrObject","o","oItem","sDID","createElement","className","appendChild","createTextNode","style","fontWeight","color","insertBefore","firstChild","indexOf","alert","_debug","j","reboot","resetEvents","excludeInit","k","innerHTML","parentNode","removeChild","fired","reset","getMoviePercent","PercentLoaded","resetProperties","add_html5_events","remove_html5_events","stop_html5_timer","start_html5_timer","attachOnPosition","detachOnPosition","applyFromTo","lastHTML5State","urlOmitted","onplay_called","onPositionItems","onPositionFired","lastURL","time","instanceOptions","isHTML5","id3","loaded","playState","_called_load","_html5_canplay","src","autobuffer","preload","_load","fatal","_unload","_bFromSM","_destroySound","_updatePlayState","fN","allowMulti","a","audioClone","onended","oncanplay","startOK","exit","getAutoPlay","setAutoPlay","paused","substr","lastIndexOf","instanceCount","_oncanplay","isNaN","_onfinish","currentTime","err","add","Math","max","min","_start","onplayerror","renderFrame","array","Uint8Array","analyser","frequencyBinCount","getByteFrequencyData","step","round","meterNum","ctx","clearRect","cwidth","cheight","value","capYPositionArray","fillStyle","capStyle","fillRect","meterWidth","capHeight","gradient","requestAnimationFrame","audioSrc","createAudioSrc","audioCtx","createAnalyser","connect","destination","canvas","getElementById","width","height","getContext","createLinearGradient","addColorStop","bAll","originalPosition","_onbufferchange","_resetOnPosition","_onTimer","_stop","_setAutoPlay","position1K","offset","message","_setPosition","_bCallFlash","_pause","bInstanceOnly","_setPan","_bInstanceOnly","_setVolume","hasIO","method","_processOnPosition","item","end","f","t","op","retainPosition","_hasTimer","bytesLoaded","bytesTotal","durationEstimate","buffered","left","right","failures","isBuffering","metadata","bForce","isNew","x","_get_html5_duration","_whileplaying","d","Infinity","_apply_loop","nLoops","loop","sameURL","dURL","decodeURI","oEvt","bCapture","addEventListener","_added_events","removeEventListener","_onload","nSuccess","loadOK","nIsBuffering","_onsuspend","onsuspend","_onfailure","msg","level","code","_onwarning","onwarning","io_onfinish","_whileloading","nBytesLoaded","nBytesTotal","nDuration","nBufferLength","floor","bufferLength","oPeakData","oWaveformDataLeft","oWaveformDataRight","oEQData","eqLeft","leftPeak","rightPeak","split","leftEQ","rightEQ","_oncaptiondata","oData","captiondata","oncaptiondata","_onmetadata","oMDProps","oMDData","onmetadata","_onid3","oID3Props","oID3Data","_onconnect","bSuccess","_ondataerror","sError","body","getElementsByTagName","oMain","oAdd","o2","o1","callback","oParent","hasParent","bonusOptions","Function","getArgs","oArgs","args","len","old","pop","shift","evt","arguments","abort","canplay","ee","canplaythrough","durationchange","ended","error","loadeddata","_loaded","loadedmetadata","loadstart","playing","fromCharCode","progress","progStr","isProgress","ranges","target","total","ratechange","suspend","stalled","timeupdate","waiting","iO","oAudio","_called_unload","fileExt","mime","aF","concat","toLowerCase","cp","m","canPlay","isOK","lookup","support","notReady","notOK","domError","spcWmode","swf404","tryDebug","checkSWF","localFail","waitFocus","waitForever","waitSWF","needFunction","badID","currentObj","waitOnload","docLoaded","onloadOK","secNote","badRemove","shutdown","queue","smError","fbTimeout","fbLoaded","fbHandler","manURL","onURL","badFV","as2loop","noNSLoop","needfl9","mfTimeout","needFlash","gotFocus","policy","setupError","setupUndef","setupLate","sm2Loaded","mobileUA","globalHTML5","sstr","replace","sOpt","sPre","sMsg","warn","oProp","urlParams","Date","getTime","isDebug","bPolling","bHighPerformance","_setPolling","test","oD","oDebug","oTarget","oToggle","tmp","bottom","lineHeight","margin","textAlign","border","cursor","background","zIndex","onclick","display","e2","Error","errorLevel","oT","sEventType","sMessage","sm2Debugger","handleEvent","css","name","p","ignoreInit","status","success","srcQueue","canRetry","obj","hasPlugin","n","nP","plugins","AX","ActiveXObject","mimeTypes","enabledPlugin","flashNeeded","formats","isSpecial","urlResult","setInterval","clearInterval","onerror","_setSandboxType","sandboxType","sb","_externalInterfaceOK","swfVersion","initMsg","delimiter","param","oEmbed","oMovie","movieHTML","oEl","sClass","remoteURL","localURL","swfTitle","extraClass","isRTL","html","dir","platform","quality","bgcolor","pluginspage","hasPriority","FlashVars","setAttribute","overflow","top","abs","oninitmovie","loadIncomplete","cleanup","tests","wasTimeout","_externalInterfaceTest","_disableDebug","a2","b","b2","l","detachEvent","attachEvent","soundManager","webkitAudioContext","AudioContext","createMediaElementSource","crossOrigin","SM2_DEFER","exports","define","amd","ngSoundManager","$logProvider","debugEnabled","filter","input","pad","sec","factory","$rootScope","$log","currentTrack","repeat","isPlaying","trackProgress","playlist","trackLoaded","$broadcast","elem","querySelector","injector","get","nextTrack","debug","isSupported","isInArray","getIndexByValue","asyncLoop","functionToLoop","setCurrentTrack","key","getCurrentTrack","currentTrackData","trackId","currentKey","getPlaylist","addToPlaylist","track","isTrackValid","addTrack","inArrayKey","removeSong","song","index","initPlayTrack","isResume","trackToPlay","resetProgress","playTrack","currentTrackKey","nextTrackKey","prevTrack","prevTrackKey","getMuteStatus","repeatToggle","getRepeatStatus","getVolume","adjustVolume","increase","changeVolume","mySound","adjustVolumeSlider","clearPlaylist","smIdsLength","isPlayingStatus","$filter","$on","data","$apply","currentPlaying","currentPostion","currentDuration","musicPlayer","bind","sound","getXOffset","offsetLeft","offsetTop","scrollLeft","offsetParent","clientX","offsetX","clientWidth","mainController","runBlock","html5Config","$locationProvider","html5Mode","run","$templateCache","put"],"mappings":"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","file":"scripts/app-7562adb9f6.js","sourcesContent":["(function() {\n\t'use strict';\n\n\tangular\n\t\t.module('app', \n\t\t\t['ngAnimate',\n\t\t\t'ngCookies', \n\t\t\t'ngTouch', \n\t\t\t'ngSanitize', \n\t\t\t'ngMessages', \n\t\t\t'ngAria', \n\t\t\t'restangular', \n\t\t\t'ui.router', \n\t\t\t'toastr',\n\t\t\t'angularSoundManager']);\n\n})();\n\n(function(){\n\t'use strict';\n\n\tangular\n\t\t.module('app')\n\t\t.config(routerConfig)\n\n\tfunction routerConfig($stateProvider, $urlRouterProvider){\n\t\t$stateProvider\n\t\t\t.state('player', {\n\t\t\t\turl: '/player',\n\t\t\t\ttemplateUrl: 'app/player/player.html',\n\t\t\t\tcontroller: 'playerController',\n\t\t\t\tcontrollerAs: 'vm'\n\t\t\t})\n\t\t\t// .state('player.art', {\n\t\t\t// \ttemplateUrl: '/app/player/player.songArt.html',\n\t\t\t// \tcontroller: 'playerSongArtController',\n\t\t\t// \tcontrollerAs: 'vm'\n\t\t\t// })\n\t\t\t// .state('player.playlist', {\n\t\t\t// \ttemplateUrl: '/app/player/player.songArt.html',\n\t\t\t// \tcontroller: 'playerSongArtController',\n\t\t\t// \tcontrollerAs: 'vm'\n\t\t\t// })\n\n\t\t// $urlRouterProvider.otherwise('/');\n\t}\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .directive('playerInitPlaylist', ['$timeout', playerInitPlaylist]);\n\n    function playerInitPlaylist($timeout){\n    \tvar directive = {\n            restrict: 'A',\n            link: link,\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n        \t$timeout(function(){\n        \t\telement.triggerHandler('click');\n        \t})\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('playerController', ['angularPlayer', '$scope', playerController]);\n\n    function playerController(angularPlayer, $scope){\n    \tvar vm = this;\n\n    \tvm.isPlaylistActive = true;\n    \tvm.isArtActive = false;\n    \tvm.isVisualActive = false;\n    \tvm.isMenuActive = false;\n\n    \tvm.toggleMenu = function(){\n    \t\tvm.isMenuActive = (vm.isMenuActive) ? false : true;\n    \t}\n\n    \tvm.toggleView = function(_var){\n    \t\tvm.isPlaylistActive = false;\n\t    \tvm.isArtActive = false;\n    \t\tvm.isVisualActive = false;\n\t    \tvm[_var] = true;\n\t    \tvm.isMenuActive = false;\n    \t}\n\n    \t// $scope.$watch(function(){\n    \t// \treturn angularPlayer.currentTrackData()\n    \t// }, function(newValue, oldValue){\n    \t// \t// vm.getCurrentTrack = newValue;\n    \t// \tconsole.log(newValue);\n    \t// })\n\n    \tvm.songs = [\n    \t\t{\n    \t\t\tid: '1',\n    \t\t\ttitle: 'Sessions 1.0',\n    \t\t\tartist: 'Mezcobar',\n    \t\t\turl: '/content/music/sessions_1.mp3',\n    \t\t\tart: '/content/images/icon-headphones.svg'\n    \t\t},\n    \t\t{\n    \t\t\tid: '2',\n    \t\t\ttitle: 'Sessions 2.0',\n    \t\t\tartist: 'Mezcobar',\n    \t\t\turl: '/content/music/sessions_2.mp3',\n    \t\t\tart: '/content/images/icon-play.svg'\n    \t\t},\n    \t\t{\n    \t\t\tid: '3',\n    \t\t\ttitle: 'Sessions 3.0',\n    \t\t\tartist: 'Mezcobar',\n    \t\t\turl: '/content/music/sessions_3.wav',\n    \t\t\tart: '/content/images/icon-play-button.svg'\n    \t\t},\n    \t\t{\n    \t\t\tid: '4',\n    \t\t\ttitle: 'Sessions 4.0',\n    \t\t\tartist: 'Mezcobar',\n    \t\t\turl: '/content/music/sessions_4.mp3',\n    \t\t\tart: '/content/images/icon-pause.svg'\n    \t\t},\n            {\n                id: '5',\n                title: 'Sessions 5.0',\n                artist: 'Mezcobar',\n                url: '/content/music/sessions_5.wav',\n                art: '/content/images/icon-pause.svg'\n            },\n            {\n                id: '6',\n                title: 'Sessions 6.0',\n                artist: 'Mezcobar',\n                url: '/content/music/sessions_6.mp3',\n                art: '/content/images/icon-pause.svg'\n            },\n    \t]\n    }\n})();\n/** @license\n *\n * SoundManager 2: JavaScript Sound for the Web\n * ----------------------------------------------\n * http://schillmania.com/projects/soundmanager2/\n *\n * Copyright (c) 2007, Scott Schiller. All rights reserved.\n * Code provided under the BSD License:\n * http://schillmania.com/projects/soundmanager2/license.txt\n *\n * V2.97a.20140901\n */\n/*global window, SM2_DEFER, sm2Debugger, console, document, navigator, setTimeout, setInterval, clearInterval, Audio, opera, module, define */\n/*jslint regexp: true, sloppy: true, white: true, nomen: true, plusplus: true, todo: true */\n/**\n * About this file\n * -------------------------------------------------------------------------------------\n * This is the fully-commented source version of the SoundManager 2 API,\n * recommended for use during development and testing.\n *\n * See soundmanager2-nodebug-jsmin.js for an optimized build (~11KB with gzip.)\n * http://schillmania.com/projects/soundmanager2/doc/getstarted/#basic-inclusion\n * Alternately, serve this file with gzip for 75% compression savings (~30KB over HTTP.)\n *\n * You may notice <d> and </d> comments in this source; these are delimiters for\n * debug blocks which are removed in the -nodebug builds, further optimizing code size.\n *\n * Also, as you may note: Whoa, reliable cross-platform/device audio support is hard! ;)\n */\n(function(window, _undefined) {\n    \"use strict\";\n    if(!window || !window.document) {\n        // Don't cross the [environment] streams. SM2 expects to be running in a browser, not under node.js etc.\n        // Additionally, if a browser somehow manages to fail this test, as Egon said: \"It would be bad.\"\n        throw new Error('SoundManager requires a browser with window and document objects.');\n    }\n    var soundManager = null;\n    var audioCtx = function(){\n        if('webkitAudioContext' in window) {\n            return new webkitAudioContext();\n        }else{\n            return new AudioContext();\n        }\n    }()\n    var audioSrc = null;\n    var createAudioSrc = function(audio){\n        audioSrc = audioCtx.createMediaElementSource(audio);\n        audioSrc.crossOrigin = 'anonymous';\n    };\n    \n\n\n    /**\n     * The SoundManager constructor.\n     *\n     * @constructor\n     * @param {string} smURL Optional: Path to SWF files\n     * @param {string} smID Optional: The ID to use for the SWF container element\n     * @this {SoundManager}\n     * @return {SoundManager} The new SoundManager instance\n     */\n\n    function SoundManager(smURL, smID) {\n        var that = this;\n        /**\n         * soundManager configuration options list\n         * defines top-level configuration properties to be applied to the soundManager instance (eg. soundManager.flashVersion)\n         * to set these properties, use the setup() method - eg., soundManager.setup({url: '/swf/', flashVersion: 9})\n         */\n        this.setupOptions = {\n            'url': (smURL || null), // path (directory) where SoundManager 2 SWFs exist, eg., /path/to/swfs/\n            'flashVersion': 8, // flash build to use (8 or 9.) Some API features require 9.\n            'debugMode': true, // enable debugging output (console.log() with HTML fallback)\n            'debugFlash': false, // enable debugging output inside SWF, troubleshoot Flash/browser issues\n            'useConsole': true, // use console.log() if available (otherwise, writes to #soundmanager-debug element)\n            'consoleOnly': true, // if console is being used, do not create/write to #soundmanager-debug\n            'waitForWindowLoad': false, // force SM2 to wait for window.onload() before trying to call soundManager.onload()\n            'bgColor': '#ffffff', // SWF background color. N/A when wmode = 'transparent'\n            'useHighPerformance': false, // position:fixed flash movie can help increase js/flash speed, minimize lag\n            'flashPollingInterval': null, // msec affecting whileplaying/loading callback frequency. If null, default of 50 msec is used.\n            'html5PollingInterval': null, // msec affecting whileplaying() for HTML5 audio, excluding mobile devices. If null, native HTML5 update events are used.\n            'flashLoadTimeout': 1000, // msec to wait for flash movie to load before failing (0 = infinity)\n            'wmode': null, // flash rendering mode - null, 'transparent', or 'opaque' (last two allow z-index to work)\n            'allowScriptAccess': 'always', // for scripting the SWF (object/embed property), 'always' or 'sameDomain'\n            'useFlashBlock': false, // *requires flashblock.css, see demos* - allow recovery from flash blockers. Wait indefinitely and apply timeout CSS to SWF, if applicable.\n            'useHTML5Audio': true, // use HTML5 Audio() where API is supported (most Safari, Chrome versions), Firefox (no MP3/MP4.) Ideally, transparent vs. Flash API where possible.\n            'html5Test': /^(probably|maybe)$/i, // HTML5 Audio() format support test. Use /^probably$/i; if you want to be more conservative.\n            'preferFlash': false, // overrides useHTML5audio, will use Flash for MP3/MP4/AAC if present. Potential option if HTML5 playback with these formats is quirky.\n            'noSWFCache': false, // if true, appends ?ts={date} to break aggressive SWF caching.\n            'idPrefix': 'sound' // if an id is not provided to createSound(), this prefix is used for generated IDs - 'sound0', 'sound1' etc.\n        };\n        this.defaultOptions = {\n            /**\n             * the default configuration for sound objects made with createSound() and related methods\n             * eg., volume, auto-load behaviour and so forth\n             */\n            'autoLoad': false, // enable automatic loading (otherwise .load() will be called on demand with .play(), the latter being nicer on bandwidth - if you want to .load yourself, you also can)\n            'autoPlay': false, // enable playing of file as soon as possible (much faster if \"stream\" is true)\n            'from': null, // position to start playback within a sound (msec), default = beginning\n            'loops': 1, // how many times to repeat the sound (position will wrap around to 0, setPosition() will break out of loop when >0)\n            'onid3': null, // callback function for \"ID3 data is added/available\"\n            'onload': null, // callback function for \"load finished\"\n            'whileloading': null, // callback function for \"download progress update\" (X of Y bytes received)\n            'onplay': null, // callback for \"play\" start\n            'onpause': null, // callback for \"pause\"\n            'onresume': null, // callback for \"resume\" (pause toggle)\n            'whileplaying': null, // callback during play (position update)\n            'onposition': null, // object containing times and function callbacks for positions of interest\n            'onstop': null, // callback for \"user stop\"\n            'onfailure': null, // callback function for when playing fails\n            'onfinish': null, // callback function for \"sound finished playing\"\n            'multiShot': true, // let sounds \"restart\" or layer on top of each other when played multiple times, rather than one-shot/one at a time\n            'multiShotEvents': false, // fire multiple sound events (currently onfinish() only) when multiShot is enabled\n            'position': null, // offset (milliseconds) to seek to within loaded sound data.\n            'pan': 0, // \"pan\" settings, left-to-right, -100 to 100\n            'stream': true, // allows playing before entire file has loaded (recommended)\n            'to': null, // position to end playback within a sound (msec), default = end\n            'type': null, // MIME-like hint for file pattern / canPlay() tests, eg. audio/mp3\n            'usePolicyFile': false, // enable crossdomain.xml request for audio on remote domains (for ID3/waveform access)\n            'volume': 100 // self-explanatory. 0-100, the latter being the max.\n        };\n        this.flash9Options = {\n            /**\n             * flash 9-only options,\n             * merged into defaultOptions if flash 9 is being used\n             */\n            'isMovieStar': null, // \"MovieStar\" MPEG4 audio mode. Null (default) = auto detect MP4, AAC etc. based on URL. true = force on, ignore URL\n            'usePeakData': false, // enable left/right channel peak (level) data\n            'useWaveformData': false, // enable sound spectrum (raw waveform data) - NOTE: May increase CPU load.\n            'useEQData': false, // enable sound EQ (frequency spectrum data) - NOTE: May increase CPU load.\n            'onbufferchange': null, // callback for \"isBuffering\" property change\n            'ondataerror': null // callback for waveform/eq data access error (flash playing audio in other tabs/domains)\n        };\n        this.movieStarOptions = {\n            /**\n             * flash 9.0r115+ MPEG4 audio options,\n             * merged into defaultOptions if flash 9+movieStar mode is enabled\n             */\n            'bufferTime': 3, // seconds of data to buffer before playback begins (null = flash default of 0.1 seconds - if AAC playback is gappy, try increasing.)\n            'serverURL': null, // rtmp: FMS or FMIS server to connect to, required when requesting media via RTMP or one of its variants\n            'onconnect': null, // rtmp: callback for connection to flash media server\n            'duration': null // rtmp: song duration (msec)\n        };\n        this.audioFormats = {\n            /**\n             * determines HTML5 support + flash requirements.\n             * if no support (via flash and/or HTML5) for a \"required\" format, SM2 will fail to start.\n             * flash fallback is used for MP3 or MP4 if HTML5 can't play it (or if preferFlash = true)\n             */\n            'mp3': {\n                'type': ['audio/mpeg; codecs=\"mp3\"', 'audio/mpeg', 'audio/mp3', 'audio/MPA', 'audio/mpa-robust'],\n                'required': true\n            },\n            'mp4': {\n                'related': ['aac', 'm4a', 'm4b'], // additional formats under the MP4 container\n                'type': ['audio/mp4; codecs=\"mp4a.40.2\"', 'audio/aac', 'audio/x-m4a', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],\n                'required': false\n            },\n            'ogg': {\n                'type': ['audio/ogg; codecs=vorbis'],\n                'required': false\n            },\n            'opus': {\n                'type': ['audio/ogg; codecs=opus', 'audio/opus'],\n                'required': false\n            },\n            'wav': {\n                'type': ['audio/wav; codecs=\"1\"', 'audio/wav', 'audio/wave', 'audio/x-wav'],\n                'required': false\n            }\n        };\n        // HTML attributes (id + class names) for the SWF container\n        this.movieID = 'sm2-container';\n        this.id = (smID || 'sm2movie');\n        this.debugID = 'soundmanager-debug';\n        this.debugURLParam = /([#?&])debug=1/i;\n        // dynamic attributes\n        this.versionNumber = 'V2.97a.20140901';\n        this.version = null;\n        this.movieURL = null;\n        this.altURL = null;\n        this.swfLoaded = false;\n        this.enabled = false;\n        this.oMC = null;\n        this.sounds = {};\n        this.soundIDs = [];\n        this.muted = false;\n        this.didFlashBlock = false;\n        this.filePattern = null;\n        this.filePatterns = {\n            'flash8': /\\.mp3(\\?.*)?$/i,\n            'flash9': /\\.mp3(\\?.*)?$/i\n        };\n        // support indicators, set at init\n        this.features = {\n            'buffering': false,\n            'peakData': false,\n            'waveformData': false,\n            'eqData': false,\n            'movieStar': false\n        };\n        // flash sandbox info, used primarily in troubleshooting\n        this.sandbox = {\n            // <d>\n            'type': null,\n            'types': {\n                'remote': 'remote (domain-based) rules',\n                'localWithFile': 'local with file access (no internet access)',\n                'localWithNetwork': 'local with network (internet access only, no local access)',\n                'localTrusted': 'local, trusted (local+internet access)'\n            },\n            'description': null,\n            'noRemote': null,\n            'noLocal': null\n            // </d>\n        };\n        /**\n         * format support (html5/flash)\n         * stores canPlayType() results based on audioFormats.\n         * eg. { mp3: boolean, mp4: boolean }\n         * treat as read-only.\n         */\n        this.html5 = {\n            'usingFlash': null // set if/when flash fallback is needed\n        };\n        // file type support hash\n        this.flash = {};\n        // determined at init time\n        this.html5Only = false;\n        // used for special cases (eg. iPad/iPhone/palm OS?)\n        this.ignoreFlash = false;\n        /**\n         * a few private internals (OK, a lot. :D)\n         */\n        var SMSound,\n            sm2 = this,\n            globalHTML5Audio = null,\n            flash = null,\n            sm = 'soundManager',\n            smc = sm + ': ',\n            h5 = 'HTML5::',\n            id, ua = navigator.userAgent,\n            wl = window.location.href.toString(),\n            doc = document,\n            doNothing, setProperties, init, fV, on_queue = [],\n            debugOpen = true,\n            debugTS, didAppend = false,\n            appendSuccess = false,\n            didInit = false,\n            disabled = false,\n            windowLoaded = false,\n            _wDS, wdCount = 0,\n            initComplete, mixin, assign, extraOptions, addOnEvent, processOnEvents, initUserOnload, delayWaitForEI, waitForEI, rebootIntoHTML5, setVersionInfo, handleFocus, strings, initMovie, preInit, domContentLoaded, winOnLoad, didDCLoaded, getDocument, createMovie, catchError, setPolling, initDebug, debugLevels = ['log', 'info', 'warn', 'error'],\n            defaultFlashVersion = 8,\n            disableObject, failSafely, normalizeMovieURL, oRemoved = null,\n            oRemovedHTML = null,\n            str, flashBlockHandler, getSWFCSS, swfCSS, toggleDebug, loopFix, policyFix, complain, idCheck, waitingForEI = false,\n            initPending = false,\n            startTimer, stopTimer, timerExecute, h5TimerCount = 0,\n            h5IntervalTimer = null,\n            parseURL, messages = [],\n            canIgnoreFlash, needsFlash = null,\n            featureCheck, html5OK, html5CanPlay, html5Ext, html5Unload, domContentLoadedIE, testHTML5, event, slice = Array.prototype.slice,\n            useGlobalHTML5Audio = false,\n            lastGlobalHTML5URL, hasFlash, detectFlash, badSafariFix, html5_events, showSupport, flushMessages, wrapCallback, idCounter = 0,\n            is_iDevice = ua.match(/(ipad|iphone|ipod)/i),\n            isAndroid = ua.match(/android/i),\n            isIE = ua.match(/msie/i),\n            isWebkit = ua.match(/webkit/i),\n            isSafari = (ua.match(/safari/i) && !ua.match(/chrome/i)),\n            isOpera = (ua.match(/opera/i)),\n            mobileHTML5 = (ua.match(/(mobile|pre\\/|xoom)/i) || is_iDevice || isAndroid),\n            isBadSafari = (!wl.match(/usehtml5audio/i) && !wl.match(/sm2\\-ignorebadua/i) && isSafari && !ua.match(/silk/i) && ua.match(/OS X 10_6_([3-7])/i)), // Safari 4 and 5 (excluding Kindle Fire, \"Silk\") occasionally fail to load/play HTML5 audio on Snow Leopard 10.6.3 through 10.6.7 due to bug(s) in QuickTime X and/or other underlying frameworks. :/ Confirmed bug. https://bugs.webkit.org/show_bug.cgi?id=32159\n            hasConsole = (window.console !== _undefined && console.log !== _undefined),\n            isFocused = (doc.hasFocus !== _undefined ? doc.hasFocus() : null),\n            tryInitOnFocus = (isSafari && (doc.hasFocus === _undefined || !doc.hasFocus())),\n            okToDisable = !tryInitOnFocus,\n            flashMIME = /(mp3|mp4|mpa|m4a|m4b)/i,\n            msecScale = 1000,\n            emptyURL = 'about:blank', // safe URL to unload, or load nothing from (flash 8 + most HTML5 UAs)\n            emptyWAV = 'data:audio/wave;base64,/UklGRiYAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQIAAAD//w==', // tiny WAV for HTML5 unloading\n            overHTTP = (doc.location ? doc.location.protocol.match(/http/i) : null),\n            http = (!overHTTP ? 'http:/' + '/' : ''),\n            // mp3, mp4, aac etc.\n            netStreamMimeTypes = /^\\s*audio\\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4||m4v|m4a|m4b|mp4v|3gp|3g2)\\s*(?:$|;)/i,\n            // Flash v9.0r115+ \"moviestar\" formats\n            netStreamTypes = ['mpeg4', 'aac', 'flv', 'mov', 'mp4', 'm4v', 'f4v', 'm4a', 'm4b', 'mp4v', '3gp', '3g2'],\n            netStreamPattern = new RegExp('\\\\.(' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\n        this.mimePattern = /^\\s*audio\\/(?:x-)?(?:mp(?:eg|3))\\s*(?:$|;)/i; // default mp3 set\n        // use altURL if not \"online\"\n        this.useAltURL = !overHTTP;\n        swfCSS = {\n            'swfBox': 'sm2-object-box',\n            'swfDefault': 'movieContainer',\n            'swfError': 'swf_error', // SWF loaded, but SM2 couldn't start (other error)\n            'swfTimedout': 'swf_timedout',\n            'swfLoaded': 'swf_loaded',\n            'swfUnblocked': 'swf_unblocked', // or loaded OK\n            'sm2Debug': 'sm2_debug',\n            'highPerf': 'high_performance',\n            'flashDebug': 'flash_debug'\n        };\n        /**\n         * basic HTML5 Audio() support test\n         * try...catch because of IE 9 \"not implemented\" nonsense\n         * https://github.com/Modernizr/Modernizr/issues/224\n         */\n        this.hasHTML5 = (function() {\n            try {\n                // new Audio(null) for stupid Opera 9.64 case, which throws not_enough_arguments exception otherwise.\n                return(Audio !== _undefined && (isOpera && opera !== _undefined && opera.version() < 10 ? new Audio(null) : new Audio()).canPlayType !== _undefined);\n            } catch(e) {\n                return false;\n            }\n        }());\n        /**\n         * Public SoundManager API\n         * -----------------------\n         */\n        /**\n         * Configures top-level soundManager properties.\n         *\n         * @param {object} options Option parameters, eg. { flashVersion: 9, url: '/path/to/swfs/' }\n         * onready and ontimeout are also accepted parameters. call soundManager.setup() to see the full list.\n         */\n        this.setup = function(options) {\n            var noURL = (!sm2.url);\n            // warn if flash options have already been applied\n            if(options !== _undefined && didInit && needsFlash && sm2.ok() && (options.flashVersion !== _undefined || options.url !== _undefined || options.html5Test !== _undefined)) {\n                complain(str('setupLate'));\n            }\n            // TODO: defer: true?\n            assign(options);\n            // special case 1: \"Late setup\". SM2 loaded normally, but user didn't assign flash URL eg., setup({url:...}) before SM2 init. Treat as delayed init.\n            if(options) {\n                if(noURL && didDCLoaded && options.url !== _undefined) {\n                    sm2.beginDelayedInit();\n                }\n                // special case 2: If lazy-loading SM2 (DOMContentLoaded has already happened) and user calls setup() with url: parameter, try to init ASAP.\n                if(!didDCLoaded && options.url !== _undefined && doc.readyState === 'complete') {\n                    setTimeout(domContentLoaded, 1);\n                }\n            }\n\n\n\n            return sm2;\n        };\n        this.ok = function() {\n            return(needsFlash ? (didInit && !disabled) : (sm2.useHTML5Audio && sm2.hasHTML5));\n        };\n        this.supported = this.ok; // legacy\n        this.getMovie = function(smID) {\n            // safety net: some old browsers differ on SWF references, possibly related to ExternalInterface / flash version\n            return id(smID) || doc[smID] || window[smID];\n        };\n        /**\n         * Creates a SMSound sound object instance.\n         *\n         * @param {object} oOptions Sound options (at minimum, id and url parameters are required.)\n         * @return {object} SMSound The new SMSound object.\n         */\n        this.createSound = function(oOptions, _url) {\n            var cs, cs_string, options, oSound = null;\n            // <d>\n            cs = sm + '.createSound(): ';\n            cs_string = cs + str(!didInit ? 'notReady' : 'notOK');\n            // </d>\n            if(!didInit || !sm2.ok()) {\n                complain(cs_string);\n                return false;\n            }\n            if(_url !== _undefined) {\n                // function overloading in JS! :) ..assume simple createSound(id, url) use case\n                oOptions = {\n                    'id': oOptions,\n                    'url': _url\n                };\n            }\n            // inherit from defaultOptions\n            options = mixin(oOptions);\n            options.url = parseURL(options.url);\n            // generate an id, if needed.\n            if(options.id === undefined) {\n                options.id = sm2.setupOptions.idPrefix + (idCounter++);\n            }\n            // <d>\n            if(options.id.toString().charAt(0).match(/^[0-9]$/)) {\n                sm2._wD(cs + str('badID', options.id), 2);\n            }\n            sm2._wD(cs + options.id + (options.url ? ' (' + options.url + ')' : ''), 1);\n            // </d>\n            if(idCheck(options.id, true)) {\n                sm2._wD(cs + options.id + ' exists', 1);\n                return sm2.sounds[options.id];\n            }\n\n            function make() {\n                options = loopFix(options);\n                sm2.sounds[options.id] = new SMSound(options);\n                sm2.soundIDs.push(options.id);\n                return sm2.sounds[options.id];\n            }\n            if(html5OK(options)) {\n                oSound = make();\n                sm2._wD(options.id + ': Using HTML5');\n                oSound._setup_html5(options);\n            } else {\n                if(sm2.html5Only) {\n                    sm2._wD(options.id + ': No HTML5 support for this sound, and no Flash. Exiting.');\n                    return make();\n                }\n                // TODO: Move HTML5/flash checks into generic URL parsing/handling function.\n                if(sm2.html5.usingFlash && options.url && options.url.match(/data\\:/i)) {\n                    // data: URIs not supported by Flash, either.\n                    sm2._wD(options.id + ': data: URIs not supported via Flash. Exiting.');\n                    return make();\n                }\n                if(fV > 8) {\n                    if(options.isMovieStar === null) {\n                        // attempt to detect MPEG-4 formats\n                        options.isMovieStar = !! (options.serverURL || (options.type ? options.type.match(netStreamMimeTypes) : false) || (options.url && options.url.match(netStreamPattern)));\n                    }\n                    // <d>\n                    if(options.isMovieStar) {\n                        sm2._wD(cs + 'using MovieStar handling');\n                        if(options.loops > 1) {\n                            _wDS('noNSLoop');\n                        }\n                    }\n                    // </d>\n                }\n                options = policyFix(options, cs);\n                oSound = make();\n                if(fV === 8) {\n                    flash._createSound(options.id, options.loops || 1, options.usePolicyFile);\n                } else {\n                    flash._createSound(options.id, options.url, options.usePeakData, options.useWaveformData, options.useEQData, options.isMovieStar, (options.isMovieStar ? options.bufferTime : false), options.loops || 1, options.serverURL, options.duration || null, options.autoPlay, true, options.autoLoad, options.usePolicyFile);\n                    if(!options.serverURL) {\n                        // We are connected immediately\n                        oSound.connected = true;\n                        if(options.onconnect) {\n                            options.onconnect.apply(oSound);\n                        }\n                    }\n                }\n                if(!options.serverURL && (options.autoLoad || options.autoPlay)) {\n                    // call load for non-rtmp streams\n                    oSound.load(options);\n                }\n            }\n            // rtmp will play in onconnect\n            if(!options.serverURL && options.autoPlay) {\n                oSound.play();\n            }\n            return oSound;\n        };\n        /**\n         * Destroys a SMSound sound object instance.\n         *\n         * @param {string} sID The ID of the sound to destroy\n         */\n        this.destroySound = function(sID, _bFromSound) {\n            // explicitly destroy a sound before normal page unload, etc.\n            if(!idCheck(sID)) {\n                return false;\n            }\n            var oS = sm2.sounds[sID],\n                i;\n            // Disable all callbacks while the sound is being destroyed\n            oS._iO = {};\n            oS.stop();\n            oS.unload();\n            for(i = 0; i < sm2.soundIDs.length; i++) {\n                if(sm2.soundIDs[i] === sID) {\n                    sm2.soundIDs.splice(i, 1);\n                    break;\n                }\n            }\n            if(!_bFromSound) {\n                // ignore if being called from SMSound instance\n                oS.destruct(true);\n            }\n            oS = null;\n            delete sm2.sounds[sID];\n            return true;\n        };\n        /**\n         * Calls the load() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @param {object} oOptions Optional: Sound options\n         */\n        this.load = function(sID, oOptions) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].load(oOptions);\n        };\n        /**\n         * Calls the unload() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         */\n        this.unload = function(sID) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].unload();\n        };\n        /**\n         * Calls the onPosition() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @param {number} nPosition The position to watch for\n         * @param {function} oMethod The relevant callback to fire\n         * @param {object} oScope Optional: The scope to apply the callback to\n         * @return {SMSound} The SMSound object\n         */\n        this.onPosition = function(sID, nPosition, oMethod, oScope) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].onposition(nPosition, oMethod, oScope);\n        };\n        // legacy/backwards-compability: lower-case method name\n        this.onposition = this.onPosition;\n        /**\n         * Calls the clearOnPosition() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @param {number} nPosition The position to watch for\n         * @param {function} oMethod Optional: The relevant callback to fire\n         * @return {SMSound} The SMSound object\n         */\n        this.clearOnPosition = function(sID, nPosition, oMethod) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].clearOnPosition(nPosition, oMethod);\n        };\n        /**\n         * Calls the play() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @param {object} oOptions Optional: Sound options\n         * @return {SMSound} The SMSound object\n         */\n        this.play = function(sID, oOptions) {\n            var result = null,\n                // legacy function-overloading use case: play('mySound', '/path/to/some.mp3');\n                overloaded = (oOptions && !(oOptions instanceof Object));\n            if(!didInit || !sm2.ok()) {\n                complain(sm + '.play(): ' + str(!didInit ? 'notReady' : 'notOK'));\n                return false;\n            }\n            if(!idCheck(sID, overloaded)) {\n                if(!overloaded) {\n                    // no sound found for the given ID. Bail.\n                    return false;\n                }\n                if(overloaded) {\n                    oOptions = {\n                        url: oOptions\n                    };\n                }\n                if(oOptions && oOptions.url) {\n                    // overloading use case, create+play: .play('someID', {url:'/path/to.mp3'});\n                    sm2._wD(sm + '.play(): Attempting to create \"' + sID + '\"', 1);\n                    oOptions.id = sID;\n                    result = sm2.createSound(oOptions).play();\n                }\n            } else if(overloaded) {\n                // existing sound object case\n                oOptions = {\n                    url: oOptions\n                };\n            }\n            if(result === null) {\n                // default case\n                result = sm2.sounds[sID].play(oOptions);\n            }\n            sm2.audioVisualizer(result);\n            return result;\n        };\n        this.audioVisualizer = function(audio){\n        };\n        this.start = this.play; // just for convenience\n        /**\n         * Calls the setPosition() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @param {number} nMsecOffset Position (milliseconds)\n         * @return {SMSound} The SMSound object\n         */\n        this.setPosition = function(sID, nMsecOffset) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].setPosition(nMsecOffset);\n        };\n        /**\n         * Calls the stop() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @return {SMSound} The SMSound object\n         */\n        this.stop = function(sID) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            sm2._wD(sm + '.stop(' + sID + ')', 1);\n            return sm2.sounds[sID].stop();\n        };\n        /**\n         * Stops all currently-playing sounds.\n         */\n        this.stopAll = function() {\n            var oSound;\n            sm2._wD(sm + '.stopAll()', 1);\n            for(oSound in sm2.sounds) {\n                if(sm2.sounds.hasOwnProperty(oSound)) {\n                    // apply only to sound objects\n                    sm2.sounds[oSound].stop();\n                }\n            }\n        };\n        /**\n         * Calls the pause() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @return {SMSound} The SMSound object\n         */\n        this.pause = function(sID) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].pause();\n        };\n        /**\n         * Pauses all currently-playing sounds.\n         */\n        this.pauseAll = function() {\n            var i;\n            for(i = sm2.soundIDs.length - 1; i >= 0; i--) {\n                sm2.sounds[sm2.soundIDs[i]].pause();\n            }\n        };\n        /**\n         * Calls the resume() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @return {SMSound} The SMSound object\n         */\n        this.resume = function(sID) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].resume();\n        };\n        /**\n         * Resumes all currently-paused sounds.\n         */\n        this.resumeAll = function() {\n            var i;\n            for(i = sm2.soundIDs.length - 1; i >= 0; i--) {\n                sm2.sounds[sm2.soundIDs[i]].resume();\n            }\n        };\n        /**\n         * Calls the togglePause() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @return {SMSound} The SMSound object\n         */\n        this.togglePause = function(sID) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].togglePause();\n        };\n        /**\n         * Calls the setPan() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @param {number} nPan The pan value (-100 to 100)\n         * @return {SMSound} The SMSound object\n         */\n        this.setPan = function(sID, nPan) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].setPan(nPan);\n        };\n        /**\n         * Calls the setVolume() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @param {number} nVol The volume value (0 to 100)\n         * @return {SMSound} The SMSound object\n         */\n        this.setVolume = function(sID, nVol) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].setVolume(nVol);\n        };\n        /**\n         * Calls the mute() method of either a single SMSound object by ID, or all sound objects.\n         *\n         * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\n         */\n        this.mute = function(sID) {\n            var i = 0;\n            if(sID instanceof String) {\n                sID = null;\n            }\n            if(!sID) {\n                sm2._wD(sm + '.mute(): Muting all sounds');\n                for(i = sm2.soundIDs.length - 1; i >= 0; i--) {\n                    sm2.sounds[sm2.soundIDs[i]].mute();\n                }\n                sm2.muted = true;\n            } else {\n                if(!idCheck(sID)) {\n                    return false;\n                }\n                sm2._wD(sm + '.mute(): Muting \"' + sID + '\"');\n                return sm2.sounds[sID].mute();\n            }\n            return true;\n        };\n        /**\n         * Mutes all sounds.\n         */\n        this.muteAll = function() {\n            sm2.mute();\n        };\n        /**\n         * Calls the unmute() method of either a single SMSound object by ID, or all sound objects.\n         *\n         * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\n         */\n        this.unmute = function(sID) {\n            var i;\n            if(sID instanceof String) {\n                sID = null;\n            }\n            if(!sID) {\n                sm2._wD(sm + '.unmute(): Unmuting all sounds');\n                for(i = sm2.soundIDs.length - 1; i >= 0; i--) {\n                    sm2.sounds[sm2.soundIDs[i]].unmute();\n                }\n                sm2.muted = false;\n            } else {\n                if(!idCheck(sID)) {\n                    return false;\n                }\n                sm2._wD(sm + '.unmute(): Unmuting \"' + sID + '\"');\n                return sm2.sounds[sID].unmute();\n            }\n            return true;\n        };\n        /**\n         * Unmutes all sounds.\n         */\n        this.unmuteAll = function() {\n            sm2.unmute();\n        };\n        /**\n         * Calls the toggleMute() method of a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @return {SMSound} The SMSound object\n         */\n        this.toggleMute = function(sID) {\n            if(!idCheck(sID)) {\n                return false;\n            }\n            return sm2.sounds[sID].toggleMute();\n        };\n        /**\n         * Retrieves the memory used by the flash plugin.\n         *\n         * @return {number} The amount of memory in use\n         */\n        this.getMemoryUse = function() {\n            // flash-only\n            var ram = 0;\n            if(flash && fV !== 8) {\n                ram = parseInt(flash._getMemoryUse(), 10);\n            }\n            return ram;\n        };\n        /**\n         * Undocumented: NOPs soundManager and all SMSound objects.\n         */\n        this.disable = function(bNoDisable) {\n            // destroy all functions\n            var i;\n            if(bNoDisable === _undefined) {\n                bNoDisable = false;\n            }\n            if(disabled) {\n                return false;\n            }\n            disabled = true;\n            _wDS('shutdown', 1);\n            for(i = sm2.soundIDs.length - 1; i >= 0; i--) {\n                disableObject(sm2.sounds[sm2.soundIDs[i]]);\n            }\n            // fire \"complete\", despite fail\n            initComplete(bNoDisable);\n            event.remove(window, 'load', initUserOnload);\n            return true;\n        };\n        /**\n         * Determines playability of a MIME type, eg. 'audio/mp3'.\n         */\n        this.canPlayMIME = function(sMIME) {\n            var result;\n            if(sm2.hasHTML5) {\n                result = html5CanPlay({\n                    type: sMIME\n                });\n            }\n            if(!result && needsFlash) {\n                // if flash 9, test netStream (movieStar) types as well.\n                result = (sMIME && sm2.ok() ? !! ((fV > 8 ? sMIME.match(netStreamMimeTypes) : null) || sMIME.match(sm2.mimePattern)) : null); // TODO: make less \"weird\" (per JSLint)\n            }\n            return result;\n        };\n        /**\n         * Determines playability of a URL based on audio support.\n         *\n         * @param {string} sURL The URL to test\n         * @return {boolean} URL playability\n         */\n        this.canPlayURL = function(sURL) {\n            var result;\n            if(sm2.hasHTML5) {\n                result = html5CanPlay({\n                    url: sURL\n                });\n            }\n            if(!result && needsFlash) {\n                result = (sURL && sm2.ok() ? !! (sURL.match(sm2.filePattern)) : null);\n            }\n            return result;\n        };\n        /**\n         * Determines playability of an HTML DOM &lt;a&gt; object (or similar object literal) based on audio support.\n         *\n         * @param {object} oLink an HTML DOM &lt;a&gt; object or object literal including href and/or type attributes\n         * @return {boolean} URL playability\n         */\n        this.canPlayLink = function(oLink) {\n            if(oLink.type !== _undefined && oLink.type) {\n                if(sm2.canPlayMIME(oLink.type)) {\n                    return true;\n                }\n            }\n            return sm2.canPlayURL(oLink.href);\n        };\n        /**\n         * Retrieves a SMSound object by ID.\n         *\n         * @param {string} sID The ID of the sound\n         * @return {SMSound} The SMSound object\n         */\n        this.getSoundById = function(sID, _suppressDebug) {\n            if(!sID) {\n                return null;\n            }\n            var result = sm2.sounds[sID];\n            // <d>\n            if(!result && !_suppressDebug) {\n                sm2._wD(sm + '.getSoundById(): Sound \"' + sID + '\" not found.', 2);\n            }\n            // </d>\n            return result;\n        };\n        /**\n         * Queues a callback for execution when SoundManager has successfully initialized.\n         *\n         * @param {function} oMethod The callback method to fire\n         * @param {object} oScope Optional: The scope to apply to the callback\n         */\n        this.onready = function(oMethod, oScope) {\n            var sType = 'onready',\n                result = false;\n            if(typeof oMethod === 'function') {\n                // <d>\n                if(didInit) {\n                    sm2._wD(str('queue', sType));\n                }\n                // </d>\n                if(!oScope) {\n                    oScope = window;\n                }\n                addOnEvent(sType, oMethod, oScope);\n                processOnEvents();\n                result = true;\n            } else {\n                throw str('needFunction', sType);\n            }\n            return result;\n        };\n        /**\n         * Queues a callback for execution when SoundManager has failed to initialize.\n         *\n         * @param {function} oMethod The callback method to fire\n         * @param {object} oScope Optional: The scope to apply to the callback\n         */\n        this.ontimeout = function(oMethod, oScope) {\n            var sType = 'ontimeout',\n                result = false;\n            if(typeof oMethod === 'function') {\n                // <d>\n                if(didInit) {\n                    sm2._wD(str('queue', sType));\n                }\n                // </d>\n                if(!oScope) {\n                    oScope = window;\n                }\n                addOnEvent(sType, oMethod, oScope);\n                processOnEvents({\n                    type: sType\n                });\n                result = true;\n            } else {\n                throw str('needFunction', sType);\n            }\n            return result;\n        };\n        /**\n         * Writes console.log()-style debug output to a console or in-browser element.\n         * Applies when debugMode = true\n         *\n         * @param {string} sText The console message\n         * @param {object} nType Optional log level (number), or object. Number case: Log type/style where 0 = 'info', 1 = 'warn', 2 = 'error'. Object case: Object to be dumped.\n         */\n        this._writeDebug = function(sText, sTypeOrObject) {\n            // pseudo-private console.log()-style output\n            // <d>\n            var sDID = 'soundmanager-debug',\n                o, oItem;\n            if(!sm2.debugMode) {\n                return false;\n            }\n            if(hasConsole && sm2.useConsole) {\n                if(sTypeOrObject && typeof sTypeOrObject === 'object') {\n                    // object passed; dump to console.\n                    console.log(sText, sTypeOrObject);\n                } else if(debugLevels[sTypeOrObject] !== _undefined) {\n                    console[debugLevels[sTypeOrObject]](sText);\n                } else {\n                    console.log(sText);\n                }\n                if(sm2.consoleOnly) {\n                    return true;\n                }\n            }\n            o = id(sDID);\n            if(!o) {\n                return false;\n            }\n            oItem = doc.createElement('div');\n            if(++wdCount % 2 === 0) {\n                oItem.className = 'sm2-alt';\n            }\n            if(sTypeOrObject === _undefined) {\n                sTypeOrObject = 0;\n            } else {\n                sTypeOrObject = parseInt(sTypeOrObject, 10);\n            }\n            oItem.appendChild(doc.createTextNode(sText));\n            if(sTypeOrObject) {\n                if(sTypeOrObject >= 2) {\n                    oItem.style.fontWeight = 'bold';\n                }\n                if(sTypeOrObject === 3) {\n                    oItem.style.color = '#ff3333';\n                }\n            }\n            // top-to-bottom\n            // o.appendChild(oItem);\n            // bottom-to-top\n            o.insertBefore(oItem, o.firstChild);\n            o = null;\n            // </d>\n            return true;\n        };\n        // <d>\n        // last-resort debugging option\n        if(wl.indexOf('sm2-debug=alert') !== -1) {\n            this._writeDebug = function(sText) {\n                window.alert(sText);\n            };\n        }\n        // </d>\n        // alias\n        this._wD = this._writeDebug;\n        /**\n         * Provides debug / state information on all SMSound objects.\n         */\n        this._debug = function() {\n            // <d>\n            var i, j;\n            _wDS('currentObj', 1);\n            for(i = 0, j = sm2.soundIDs.length; i < j; i++) {\n                sm2.sounds[sm2.soundIDs[i]]._debug();\n            }\n            // </d>\n        };\n        /**\n         * Restarts and re-initializes the SoundManager instance.\n         *\n         * @param {boolean} resetEvents Optional: When true, removes all registered onready and ontimeout event callbacks.\n         * @param {boolean} excludeInit Options: When true, does not call beginDelayedInit() (which would restart SM2).\n         * @return {object} soundManager The soundManager instance.\n         */\n        this.reboot = function(resetEvents, excludeInit) {\n            // reset some (or all) state, and re-init unless otherwise specified.\n            // <d>\n            if(sm2.soundIDs.length) {\n                sm2._wD('Destroying ' + sm2.soundIDs.length + ' SMSound object' + (sm2.soundIDs.length !== 1 ? 's' : '') + '...');\n            }\n            // </d>\n            var i, j, k;\n            for(i = sm2.soundIDs.length - 1; i >= 0; i--) {\n                sm2.sounds[sm2.soundIDs[i]].destruct();\n            }\n            // trash ze flash (remove from the DOM)\n            if(flash) {\n                try {\n                    if(isIE) {\n                        oRemovedHTML = flash.innerHTML;\n                    }\n                    oRemoved = flash.parentNode.removeChild(flash);\n                } catch(e) {\n                    // Remove failed? May be due to flash blockers silently removing the SWF object/embed node from the DOM. Warn and continue.\n                    _wDS('badRemove', 2);\n                }\n            }\n            // actually, force recreate of movie.\n            oRemovedHTML = oRemoved = needsFlash = flash = null;\n            sm2.enabled = didDCLoaded = didInit = waitingForEI = initPending = didAppend = appendSuccess = disabled = useGlobalHTML5Audio = sm2.swfLoaded = false;\n            sm2.soundIDs = [];\n            sm2.sounds = {};\n            idCounter = 0;\n            if(!resetEvents) {\n                // reset callbacks for onready, ontimeout etc. so that they will fire again on re-init\n                for(i in on_queue) {\n                    if(on_queue.hasOwnProperty(i)) {\n                        for(j = 0, k = on_queue[i].length; j < k; j++) {\n                            on_queue[i][j].fired = false;\n                        }\n                    }\n                }\n            } else {\n                // remove all callbacks entirely\n                on_queue = [];\n            }\n            // <d>\n            if(!excludeInit) {\n                sm2._wD(sm + ': Rebooting...');\n            }\n            // </d>\n            // reset HTML5 and flash canPlay test results\n            sm2.html5 = {\n                'usingFlash': null\n            };\n            sm2.flash = {};\n            // reset device-specific HTML/flash mode switches\n            sm2.html5Only = false;\n            sm2.ignoreFlash = false;\n            window.setTimeout(function() {\n                preInit();\n                // by default, re-init\n                if(!excludeInit) {\n                    sm2.beginDelayedInit();\n                }\n            }, 20);\n            return sm2;\n        };\n        this.reset = function() {\n            /**\n             * Shuts down and restores the SoundManager instance to its original loaded state, without an explicit reboot. All onready/ontimeout handlers are removed.\n             * After this call, SM2 may be re-initialized via soundManager.beginDelayedInit().\n             * @return {object} soundManager The soundManager instance.\n             */\n            _wDS('reset');\n            return sm2.reboot(true, true);\n        };\n        /**\n         * Undocumented: Determines the SM2 flash movie's load progress.\n         *\n         * @return {number or null} Percent loaded, or if invalid/unsupported, null.\n         */\n        this.getMoviePercent = function() {\n            /**\n             * Interesting syntax notes...\n             * Flash/ExternalInterface (ActiveX/NPAPI) bridge methods are not typeof \"function\" nor instanceof Function, but are still valid.\n             * Additionally, JSLint dislikes ('PercentLoaded' in flash)-style syntax and recommends hasOwnProperty(), which does not work in this case.\n             * Furthermore, using (flash && flash.PercentLoaded) causes IE to throw \"object doesn't support this property or method\".\n             * Thus, 'in' syntax must be used.\n             */\n            return(flash && 'PercentLoaded' in flash ? flash.PercentLoaded() : null); // Yes, JSLint. See nearby comment in source for explanation.\n        };\n        /**\n         * Additional helper for manually invoking SM2's init process after DOM Ready / window.onload().\n         */\n        this.beginDelayedInit = function() {\n            windowLoaded = true;\n            domContentLoaded();\n            setTimeout(function() {\n                if(initPending) {\n                    return false;\n                }\n                createMovie();\n                initMovie();\n                initPending = true;\n                return true;\n            }, 20);\n            delayWaitForEI();\n        };\n        /**\n         * Destroys the SoundManager instance and all SMSound instances.\n         */\n        this.destruct = function() {\n            sm2._wD(sm + '.destruct()');\n            sm2.disable(true);\n        };\n        /**\n         * SMSound() (sound object) constructor\n         * ------------------------------------\n         *\n         * @param {object} oOptions Sound options (id and url are required attributes)\n         * @return {SMSound} The new SMSound object\n         */\n        SMSound = function(oOptions) {\n            var s = this,\n                resetProperties, add_html5_events, remove_html5_events, stop_html5_timer, start_html5_timer, attachOnPosition, onplay_called = false,\n                onPositionItems = [],\n                onPositionFired = 0,\n                detachOnPosition, applyFromTo, lastURL = null,\n                lastHTML5State, urlOmitted;\n            lastHTML5State = {\n                // tracks duration + position (time)\n                duration: null,\n                time: null\n            };\n            this.id = oOptions.id;\n            // legacy\n            this.sID = this.id;\n            this.url = oOptions.url;\n            this.options = mixin(oOptions);\n            // per-play-instance-specific options\n            this.instanceOptions = this.options;\n            // short alias\n            this._iO = this.instanceOptions;\n            // assign property defaults\n            this.pan = this.options.pan;\n            this.volume = this.options.volume;\n            // whether or not this object is using HTML5\n            this.isHTML5 = false;\n            // internal HTML5 Audio() object reference\n            this._a = null;\n            // for flash 8 special-case createSound() without url, followed by load/play with url case\n            urlOmitted = (this.url ? false : true);\n            /**\n             * SMSound() public methods\n             * ------------------------\n             */\n            this.id3 = {};\n            /**\n             * Writes SMSound object parameters to debug console\n             */\n            this._debug = function() {\n                // <d>\n                sm2._wD(s.id + ': Merged options:', s.options);\n                // </d>\n            };\n            /**\n             * Begins loading a sound per its *url*.\n             *\n             * @param {object} oOptions Optional: Sound options\n             * @return {SMSound} The SMSound object\n             */\n            this.load = function(oOptions) {\n                var oSound = null,\n                    instanceOptions;\n                if(oOptions !== _undefined) {\n                    s._iO = mixin(oOptions, s.options);\n                } else {\n                    oOptions = s.options;\n                    s._iO = oOptions;\n                    if(lastURL && lastURL !== s.url) {\n                        _wDS('manURL');\n                        s._iO.url = s.url;\n                        s.url = null;\n                    }\n                }\n                if(!s._iO.url) {\n                    s._iO.url = s.url;\n                }\n                s._iO.url = parseURL(s._iO.url);\n                // ensure we're in sync\n                s.instanceOptions = s._iO;\n                // local shortcut\n                instanceOptions = s._iO;\n                sm2._wD(s.id + ': load (' + instanceOptions.url + ')');\n                if(!instanceOptions.url && !s.url) {\n                    sm2._wD(s.id + ': load(): url is unassigned. Exiting.', 2);\n                    return s;\n                }\n                // <d>\n                if(!s.isHTML5 && fV === 8 && !s.url && !instanceOptions.autoPlay) {\n                    // flash 8 load() -> play() won't work before onload has fired.\n                    sm2._wD(s.id + ': Flash 8 load() limitation: Wait for onload() before calling play().', 1);\n                }\n                // </d>\n                if(instanceOptions.url === s.url && s.readyState !== 0 && s.readyState !== 2) {\n                    _wDS('onURL', 1);\n                    // if loaded and an onload() exists, fire immediately.\n                    if(s.readyState === 3 && instanceOptions.onload) {\n                        // assume success based on truthy duration.\n                        wrapCallback(s, function() {\n                            instanceOptions.onload.apply(s, [( !! s.duration)]);\n                        });\n                    }\n                    return s;\n                }\n                // reset a few state properties\n                s.loaded = false;\n                s.readyState = 1;\n                s.playState = 0;\n                s.id3 = {};\n                // TODO: If switching from HTML5 -> flash (or vice versa), stop currently-playing audio.\n                if(html5OK(instanceOptions)) {\n                    oSound = s._setup_html5(instanceOptions);\n                    if(!oSound._called_load) {\n                        s._html5_canplay = false;\n                        // TODO: review called_load / html5_canplay logic\n                        // if url provided directly to load(), assign it here.\n                        if(s.url !== instanceOptions.url) {\n                            sm2._wD(_wDS('manURL') + ': ' + instanceOptions.url);\n                            s._a.src = instanceOptions.url;\n                            // TODO: review / re-apply all relevant options (volume, loop, onposition etc.)\n                            // reset position for new URL\n                            s.setPosition(0);\n                        }\n                        // given explicit load call, try to preload.\n                        // early HTML5 implementation (non-standard)\n                        s._a.autobuffer = 'auto';\n                        // standard property, values: none / metadata / auto\n                        // reference: http://msdn.microsoft.com/en-us/library/ie/ff974759%28v=vs.85%29.aspx\n                        s._a.preload = 'auto';\n                        s._a._called_load = true;\n                    } else {\n                        sm2._wD(s.id + ': Ignoring request to load again');\n                    }\n                } else {\n                    if(sm2.html5Only) {\n                        sm2._wD(s.id + ': No flash support. Exiting.');\n                        return s;\n                    }\n                    if(s._iO.url && s._iO.url.match(/data\\:/i)) {\n                        // data: URIs not supported by Flash, either.\n                        sm2._wD(s.id + ': data: URIs not supported via Flash. Exiting.');\n                        return s;\n                    }\n                    try {\n                        s.isHTML5 = false;\n                        s._iO = policyFix(loopFix(instanceOptions));\n                        // if we have \"position\", disable auto-play as we'll be seeking to that position at onload().\n                        if(s._iO.autoPlay && (s._iO.position || s._iO.from)) {\n                            sm2._wD(s.id + ': Disabling autoPlay because of non-zero offset case');\n                            s._iO.autoPlay = false;\n                        }\n                        // re-assign local shortcut\n                        instanceOptions = s._iO;\n                        if(fV === 8) {\n                            flash._load(s.id, instanceOptions.url, instanceOptions.stream, instanceOptions.autoPlay, instanceOptions.usePolicyFile);\n                        } else {\n                            flash._load(s.id, instanceOptions.url, !! (instanceOptions.stream), !! (instanceOptions.autoPlay), instanceOptions.loops || 1, !! (instanceOptions.autoLoad), instanceOptions.usePolicyFile);\n                        }\n                    } catch(e) {\n                        _wDS('smError', 2);\n                        debugTS('onload', false);\n                        catchError({\n                            type: 'SMSOUND_LOAD_JS_EXCEPTION',\n                            fatal: true\n                        });\n                    }\n                }\n                // after all of this, ensure sound url is up to date.\n                s.url = instanceOptions.url;\n                return s;\n            };\n            /**\n             * Unloads a sound, canceling any open HTTP requests.\n             *\n             * @return {SMSound} The SMSound object\n             */\n            this.unload = function() {\n                // Flash 8/AS2 can't \"close\" a stream - fake it by loading an empty URL\n                // Flash 9/AS3: Close stream, preventing further load\n                // HTML5: Most UAs will use empty URL\n                if(s.readyState !== 0) {\n                    sm2._wD(s.id + ': unload()');\n                    if(!s.isHTML5) {\n                        if(fV === 8) {\n                            flash._unload(s.id, emptyURL);\n                        } else {\n                            flash._unload(s.id);\n                        }\n                    } else {\n                        stop_html5_timer();\n                        if(s._a) {\n                            s._a.pause();\n                            // update empty URL, too\n                            lastURL = html5Unload(s._a);\n                        }\n                    }\n                    // reset load/status flags\n                    resetProperties();\n                }\n                return s;\n            };\n            /**\n             * Unloads and destroys a sound.\n             */\n            this.destruct = function(_bFromSM) {\n                sm2._wD(s.id + ': Destruct');\n                if(!s.isHTML5) {\n                    // kill sound within Flash\n                    // Disable the onfailure handler\n                    s._iO.onfailure = null;\n                    flash._destroySound(s.id);\n                } else {\n                    stop_html5_timer();\n                    if(s._a) {\n                        s._a.pause();\n                        html5Unload(s._a);\n                        if(!useGlobalHTML5Audio) {\n                            remove_html5_events();\n                        }\n                        // break obvious circular reference\n                        s._a._s = null;\n                        s._a = null;\n                    }\n                }\n                if(!_bFromSM) {\n                    // ensure deletion from controller\n                    sm2.destroySound(s.id, true);\n                }\n            };\n            /**\n             * Begins playing a sound.\n             *\n             * @param {object} oOptions Optional: Sound options\n             * @return {SMSound} The SMSound object\n             */\n            this.play = function(oOptions, _updatePlayState) {\n                var fN, allowMulti, a, onready,\n                    audioClone, onended, oncanplay,\n                    startOK = true,\n                    exit = null;\n                // <d>\n                // debugger;\n                fN = s.id + ': play(): ';\n                // </d>\n                // default to true\n                _updatePlayState = (_updatePlayState === _undefined ? true : _updatePlayState);\n                if(!oOptions) {\n                    oOptions = {};\n                }\n                // first, use local URL (if specified)\n                if(s.url) {\n                    s._iO.url = s.url;\n                }\n                // mix in any options defined at createSound()\n                s._iO = mixin(s._iO, s.options);\n                // mix in any options specific to this method\n                s._iO = mixin(oOptions, s._iO);\n                s._iO.url = parseURL(s._iO.url);\n                s.instanceOptions = s._iO;\n                // RTMP-only\n                if(!s.isHTML5 && s._iO.serverURL && !s.connected) {\n                    if(!s.getAutoPlay()) {\n                        sm2._wD(fN + ' Netstream not connected yet - setting autoPlay');\n                        s.setAutoPlay(true);\n                    }\n                    // play will be called in onconnect()\n                    return s;\n                }\n                if(html5OK(s._iO)) {\n                    s._setup_html5(s._iO);\n                    start_html5_timer();\n                }\n                if(s.playState === 1 && !s.paused) {\n                    allowMulti = s._iO.multiShot;\n                    if(!allowMulti) {\n                        sm2._wD(fN + 'Already playing (one-shot)', 1);\n                        if(s.isHTML5) {\n                            // go back to original position.\n                            s.setPosition(s._iO.position);\n                        }\n                        exit = s;\n                    } else {\n                        sm2._wD(fN + 'Already playing (multi-shot)', 1);\n                    }\n                }\n                if(exit !== null) {\n                    return exit;\n                }\n                // edge case: play() with explicit URL parameter\n                if(oOptions.url && oOptions.url !== s.url) {\n                    // special case for createSound() followed by load() / play() with url; avoid double-load case.\n                    if(!s.readyState && !s.isHTML5 && fV === 8 && urlOmitted) {\n                        urlOmitted = false;\n                    } else {\n                        // load using merged options\n                        s.load(s._iO);\n                    }\n                }\n                if(!s.loaded) {\n                    if(s.readyState === 0) {\n                        sm2._wD(fN + 'Attempting to load');\n                        // try to get this sound playing ASAP\n                        if(!s.isHTML5 && !sm2.html5Only) {\n                            // flash: assign directly because setAutoPlay() increments the instanceCount\n                            s._iO.autoPlay = true;\n                            s.load(s._iO);\n                        } else if(s.isHTML5) {\n                            // iOS needs this when recycling sounds, loading a new URL on an existing object.\n                            s.load(s._iO);\n                        } else {\n                            sm2._wD(fN + 'Unsupported type. Exiting.');\n                            exit = s;\n                        }\n                        // HTML5 hack - re-set instanceOptions?\n                        s.instanceOptions = s._iO;\n                    } else if(s.readyState === 2) {\n                        sm2._wD(fN + 'Could not load - exiting', 2);\n                        exit = s;\n                    } else {\n                        sm2._wD(fN + 'Loading - attempting to play...');\n                    }\n                } else {\n                    // \"play()\"\n                    sm2._wD(fN.substr(0, fN.lastIndexOf(':')));\n                }\n                if(exit !== null) {\n                    return exit;\n                }\n                if(!s.isHTML5 && fV === 9 && s.position > 0 && s.position === s.duration) {\n                    // flash 9 needs a position reset if play() is called while at the end of a sound.\n                    sm2._wD(fN + 'Sound at end, resetting to position:0');\n                    oOptions.position = 0;\n                }\n                /**\n                 * Streams will pause when their buffer is full if they are being loaded.\n                 * In this case paused is true, but the song hasn't started playing yet.\n                 * If we just call resume() the onplay() callback will never be called.\n                 * So only call resume() if the position is > 0.\n                 * Another reason is because options like volume won't have been applied yet.\n                 * For normal sounds, just resume.\n                 */\n                if(s.paused && s.position >= 0 && (!s._iO.serverURL || s.position > 0)) {\n                    // https://gist.github.com/37b17df75cc4d7a90bf6\n                    sm2._wD(fN + 'Resuming from paused state', 1);\n                    s.resume();\n                } else {\n                    s._iO = mixin(oOptions, s._iO);\n                    /**\n                     * Preload in the event of play() with position under Flash,\n                     * or from/to parameters and non-RTMP case\n                     */\n                    if(((!s.isHTML5 && s._iO.position !== null && s._iO.position > 0) || (s._iO.from !== null && s._iO.from > 0) || s._iO.to !== null) && s.instanceCount === 0 && s.playState === 0 && !s._iO.serverURL) {\n                        onready = function() {\n                            // sound \"canplay\" or onload()\n                            // re-apply position/from/to to instance options, and start playback\n                            s._iO = mixin(oOptions, s._iO);\n                            s.play(s._iO);\n                        };\n                        // HTML5 needs to at least have \"canplay\" fired before seeking.\n                        if(s.isHTML5 && !s._html5_canplay) {\n                            // this hasn't been loaded yet. load it first, and then do this again.\n                            sm2._wD(fN + 'Beginning load for non-zero offset case');\n                            s.load({\n                                // note: custom HTML5-only event added for from/to implementation.\n                                _oncanplay: onready\n                            });\n                            exit = false;\n                        } else if(!s.isHTML5 && !s.loaded && (!s.readyState || s.readyState !== 2)) {\n                            // to be safe, preload the whole thing in Flash.\n                            sm2._wD(fN + 'Preloading for non-zero offset case');\n                            s.load({\n                                onload: onready\n                            });\n                            exit = false;\n                        }\n                        if(exit !== null) {\n                            return exit;\n                        }\n                        // otherwise, we're ready to go. re-apply local options, and continue\n                        s._iO = applyFromTo();\n                    }\n                    // sm2._wD(fN + 'Starting to play');\n                    // increment instance counter, where enabled + supported\n                    if(!s.instanceCount || s._iO.multiShotEvents || (s.isHTML5 && s._iO.multiShot && !useGlobalHTML5Audio) || (!s.isHTML5 && fV > 8 && !s.getAutoPlay())) {\n                        s.instanceCount++;\n                    }\n                    // if first play and onposition parameters exist, apply them now\n                    if(s._iO.onposition && s.playState === 0) {\n                        attachOnPosition(s);\n                    }\n                    s.playState = 1;\n                    s.paused = false;\n                    s.position = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position : 0);\n                    if(!s.isHTML5) {\n                        s._iO = policyFix(loopFix(s._iO));\n                    }\n                    if(s._iO.onplay && _updatePlayState) {\n                        s._iO.onplay.apply(s);\n                        onplay_called = true;\n                    }\n                    s.setVolume(s._iO.volume, true);\n                    s.setPan(s._iO.pan, true);\n                    if(!s.isHTML5) {\n                        startOK = flash._start(s.id, s._iO.loops || 1, (fV === 9 ? s.position : s.position / msecScale), s._iO.multiShot || false);\n                        if(fV === 9 && !startOK) {\n                            // edge case: no sound hardware, or 32-channel flash ceiling hit.\n                            // applies only to Flash 9, non-NetStream/MovieStar sounds.\n                            // http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/Sound.html#play%28%29\n                            sm2._wD(fN + 'No sound hardware, or 32-sound ceiling hit', 2);\n                            if(s._iO.onplayerror) {\n                                s._iO.onplayerror.apply(s);\n                            }\n                        }\n                    } else {\n                        if(s.instanceCount < 2) {\n                            // HTML5 single-instance case\n                            start_html5_timer();\n                            a = s._setup_html5();\n                            s.setPosition(s._iO.position);\n                            s.audioVisualizer(a)\n                            a.play();\n                        } else {\n                            // HTML5 multi-shot case\n                            sm2._wD(s.id + ': Cloning Audio() for instance #' + s.instanceCount + '...');\n                            audioClone = new Audio(s._iO.url);\n                            onended = function() {\n                                event.remove(audioClone, 'ended', onended);\n                                s._onfinish(s);\n                                // cleanup\n                                html5Unload(audioClone);\n                                audioClone = null;\n                            };\n                            oncanplay = function() {\n                                event.remove(audioClone, 'canplay', oncanplay);\n                                try {\n                                    audioClone.currentTime = s._iO.position / msecScale;\n                                } catch(err) {\n                                    complain(s.id + ': multiShot play() failed to apply position of ' + (s._iO.position / msecScale));\n                                }\n                                audioClone.play();\n                            };\n                            event.add(audioClone, 'ended', onended);\n                            // apply volume to clones, too\n                            if(s._iO.volume !== undefined) {\n                                audioClone.volume = Math.max(0, Math.min(1, s._iO.volume / 100));\n                            }\n                            // playing multiple muted sounds? if you do this, you're weird ;) - but let's cover it.\n                            if(s.muted) {\n                                audioClone.muted = true;\n                            }\n                            if(s._iO.position) {\n                                // HTML5 audio can't seek before onplay() event has fired.\n                                // wait for canplay, then seek to position and start playback.\n                                event.add(audioClone, 'canplay', oncanplay);\n                            } else {\n                                // begin playback at currentTime: 0\n                                audioClone.play();\n                            }\n                        }\n                    }\n                }\n                return s;\n            };\n            this.audioVisualizer = function(audio){\n                // window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext;\n\n                if (!audioSrc){\n                    createAudioSrc(audio);\n                }\n                var analyser = audioCtx.createAnalyser();\n\n                // we have to connect the MediaElementSource with the analyser \n                audioSrc.connect(analyser);\n                analyser.connect(audioCtx.destination);\n                // we could configure the analyser: e.g. analyser.fftSize (for further infos read the spec)\n                // analyser.fftSize = 64;\n                // frequencyBinCount tells you how many values you'll receive from the analyser\n                var frequencyData = new Uint8Array(analyser.frequencyBinCount);\n\n                // we're ready to receive some data!\n                var canvas = document.getElementById('visual'),\n                    cwidth = canvas.width,\n                    cheight = canvas.height,\n                    meterWidth = 10, //width of the meters in the spectrum\n                    gap = 2, //gap between meters\n                    capHeight = 2,\n                    capStyle = 'transparent',\n                    meterNum = 800 / (10 + 2), //count of the meters\n                    gradient,\n                    capYPositionArray = []; ////store the vertical position of hte caps for the preivous frame\n                var ctx = canvas.getContext('2d'),\n                    gradient = ctx.createLinearGradient(0, 0, 0, 200);\n                    gradient.addColorStop(1, '#0f0');\n                    gradient.addColorStop(0.5, '#5879e1');\n                    gradient.addColorStop(0, '#f00');\n\n                function renderFrame() {\n                    var array = new Uint8Array(analyser.frequencyBinCount);\n                    analyser.getByteFrequencyData(array);\n                    var step = Math.round(array.length / meterNum); //sample limited data from the total array\n                    ctx.clearRect(0, 0, cwidth, cheight);\n                    for (var i = 0; i < meterNum; i++) {\n                        var value = array[i * step];\n                        if (capYPositionArray.length < Math.round(meterNum)) {\n                            capYPositionArray.push(value);\n                        };\n                        ctx.fillStyle = capStyle;\n                        //draw the cap, with transition effect\n                        if (value < capYPositionArray[i]) {\n                            ctx.fillRect(i * 12, cheight - (--capYPositionArray[i]), meterWidth, capHeight);\n                        } else {\n                            ctx.fillRect(i * 12, cheight - value, meterWidth, capHeight);\n                            capYPositionArray[i] = value;\n                        };\n                        ctx.fillStyle = gradient; //set the filllStyle to gradient for a better look\n                        ctx.fillRect(i * 12 /*meterWidth+gap*/ , cheight - value + capHeight, meterWidth, cheight); //the meter\n                    }\n                    requestAnimationFrame(renderFrame);\n                }\n                renderFrame();\n                // audio.play();\n            };\n            // just for convenience\n            this.start = this.play;\n            /**\n             * Stops playing a sound (and optionally, all sounds)\n             *\n             * @param {boolean} bAll Optional: Whether to stop all sounds\n             * @return {SMSound} The SMSound object\n             */\n            this.stop = function(bAll) {\n                var instanceOptions = s._iO,\n                    originalPosition;\n                if(s.playState === 1) {\n                    sm2._wD(s.id + ': stop()');\n                    s._onbufferchange(0);\n                    s._resetOnPosition(0);\n                    s.paused = false;\n                    if(!s.isHTML5) {\n                        s.playState = 0;\n                    }\n                    // remove onPosition listeners, if any\n                    detachOnPosition();\n                    // and \"to\" position, if set\n                    if(instanceOptions.to) {\n                        s.clearOnPosition(instanceOptions.to);\n                    }\n                    if(!s.isHTML5) {\n                        flash._stop(s.id, bAll);\n                        // hack for netStream: just unload\n                        if(instanceOptions.serverURL) {\n                            s.unload();\n                        }\n                    } else {\n                        if(s._a) {\n                            originalPosition = s.position;\n                            // act like Flash, though\n                            s.setPosition(0);\n                            // hack: reflect old position for onstop() (also like Flash)\n                            s.position = originalPosition;\n                            // html5 has no stop()\n                            // NOTE: pausing means iOS requires interaction to resume.\n                            s._a.pause();\n                            s.playState = 0;\n                            // and update UI\n                            s._onTimer();\n                            stop_html5_timer();\n                        }\n                    }\n                    s.instanceCount = 0;\n                    s._iO = {};\n                    if(instanceOptions.onstop) {\n                        instanceOptions.onstop.apply(s);\n                    }\n                }\n                return s;\n            };\n            /**\n             * Undocumented/internal: Sets autoPlay for RTMP.\n             *\n             * @param {boolean} autoPlay state\n             */\n            this.setAutoPlay = function(autoPlay) {\n                sm2._wD(s.id + ': Autoplay turned ' + (autoPlay ? 'on' : 'off'));\n                s._iO.autoPlay = autoPlay;\n                if(!s.isHTML5) {\n                    flash._setAutoPlay(s.id, autoPlay);\n                    if(autoPlay) {\n                        // only increment the instanceCount if the sound isn't loaded (TODO: verify RTMP)\n                        if(!s.instanceCount && s.readyState === 1) {\n                            s.instanceCount++;\n                            sm2._wD(s.id + ': Incremented instance count to ' + s.instanceCount);\n                        }\n                    }\n                }\n            };\n            /**\n             * Undocumented/internal: Returns the autoPlay boolean.\n             *\n             * @return {boolean} The current autoPlay value\n             */\n            this.getAutoPlay = function() {\n                return s._iO.autoPlay;\n            };\n            /**\n             * Sets the position of a sound.\n             *\n             * @param {number} nMsecOffset Position (milliseconds)\n             * @return {SMSound} The SMSound object\n             */\n            this.setPosition = function(nMsecOffset) {\n                if(nMsecOffset === _undefined) {\n                    nMsecOffset = 0;\n                }\n                var position, position1K,\n                    // Use the duration from the instance options, if we don't have a track duration yet.\n                    // position >= 0 and <= current available (loaded) duration\n                    offset = (s.isHTML5 ? Math.max(nMsecOffset, 0) : Math.min(s.duration || s._iO.duration, Math.max(nMsecOffset, 0)));\n                s.position = offset;\n                position1K = s.position / msecScale;\n                s._resetOnPosition(s.position);\n                s._iO.position = offset;\n                if(!s.isHTML5) {\n                    position = (fV === 9 ? s.position : position1K);\n                    if(s.readyState && s.readyState !== 2) {\n                        // if paused or not playing, will not resume (by playing)\n                        flash._setPosition(s.id, position, (s.paused || !s.playState), s._iO.multiShot);\n                    }\n                } else if(s._a) {\n                    // Set the position in the canplay handler if the sound is not ready yet\n                    if(s._html5_canplay) {\n                        if(s._a.currentTime !== position1K) {\n                            /**\n                             * DOM/JS errors/exceptions to watch out for:\n                             * if seek is beyond (loaded?) position, \"DOM exception 11\"\n                             * \"INDEX_SIZE_ERR\": DOM exception 1\n                             */\n                            sm2._wD(s.id + ': setPosition(' + position1K + ')');\n                            try {\n                                s._a.currentTime = position1K;\n                                if(s.playState === 0 || s.paused) {\n                                    // allow seek without auto-play/resume\n                                    s._a.pause();\n                                }\n                            } catch(e) {\n                                sm2._wD(s.id + ': setPosition(' + position1K + ') failed: ' + e.message, 2);\n                            }\n                        }\n                    } else if(position1K) {\n                        // warn on non-zero seek attempts\n                        sm2._wD(s.id + ': setPosition(' + position1K + '): Cannot seek yet, sound not ready', 2);\n                        return s;\n                    }\n                    if(s.paused) {\n                        // if paused, refresh UI right away\n                        // force update\n                        s._onTimer(true);\n                    }\n                }\n                return s;\n            };\n            /**\n             * Pauses sound playback.\n             *\n             * @return {SMSound} The SMSound object\n             */\n            this.pause = function(_bCallFlash) {\n                if(s.paused || (s.playState === 0 && s.readyState !== 1)) {\n                    return s;\n                }\n                sm2._wD(s.id + ': pause()');\n                s.paused = true;\n                if(!s.isHTML5) {\n                    if(_bCallFlash || _bCallFlash === _undefined) {\n                        flash._pause(s.id, s._iO.multiShot);\n                    }\n                } else {\n                    s._setup_html5().pause();\n                    stop_html5_timer();\n                }\n                if(s._iO.onpause) {\n                    s._iO.onpause.apply(s);\n                }\n                return s;\n            };\n            /**\n             * Resumes sound playback.\n             *\n             * @return {SMSound} The SMSound object\n             */\n            /**\n             * When auto-loaded streams pause on buffer full they have a playState of 0.\n             * We need to make sure that the playState is set to 1 when these streams \"resume\".\n             * When a paused stream is resumed, we need to trigger the onplay() callback if it\n             * hasn't been called already. In this case since the sound is being played for the\n             * first time, I think it's more appropriate to call onplay() rather than onresume().\n             */\n            this.resume = function() {\n                var instanceOptions = s._iO;\n                if(!s.paused) {\n                    return s;\n                }\n                sm2._wD(s.id + ': resume()');\n                s.paused = false;\n                s.playState = 1;\n                if(!s.isHTML5) {\n                    if(instanceOptions.isMovieStar && !instanceOptions.serverURL) {\n                        // Bizarre Webkit bug (Chrome reported via 8tracks.com dudes): AAC content paused for 30+ seconds(?) will not resume without a reposition.\n                        s.setPosition(s.position);\n                    }\n                    // flash method is toggle-based (pause/resume)\n                    flash._pause(s.id, instanceOptions.multiShot);\n                } else {\n                    s._setup_html5().play();\n                    start_html5_timer();\n                }\n                if(!onplay_called && instanceOptions.onplay) {\n                    instanceOptions.onplay.apply(s);\n                    onplay_called = true;\n                } else if(instanceOptions.onresume) {\n                    instanceOptions.onresume.apply(s);\n                }\n                return s;\n            };\n            /**\n             * Toggles sound playback.\n             *\n             * @return {SMSound} The SMSound object\n             */\n            this.togglePause = function() {\n                sm2._wD(s.id + ': togglePause()');\n                if(s.playState === 0) {\n                    s.play({\n                        position: (fV === 9 && !s.isHTML5 ? s.position : s.position / msecScale)\n                    });\n                    return s;\n                }\n                if(s.paused) {\n                    s.resume();\n                } else {\n                    s.pause();\n                }\n                return s;\n            };\n            /**\n             * Sets the panning (L-R) effect.\n             *\n             * @param {number} nPan The pan value (-100 to 100)\n             * @return {SMSound} The SMSound object\n             */\n            this.setPan = function(nPan, bInstanceOnly) {\n                if(nPan === _undefined) {\n                    nPan = 0;\n                }\n                if(bInstanceOnly === _undefined) {\n                    bInstanceOnly = false;\n                }\n                if(!s.isHTML5) {\n                    flash._setPan(s.id, nPan);\n                } // else { no HTML5 pan? }\n                s._iO.pan = nPan;\n                if(!bInstanceOnly) {\n                    s.pan = nPan;\n                    s.options.pan = nPan;\n                }\n                return s;\n            };\n            /**\n             * Sets the volume.\n             *\n             * @param {number} nVol The volume value (0 to 100)\n             * @return {SMSound} The SMSound object\n             */\n            this.setVolume = function(nVol, _bInstanceOnly) {\n                /**\n                 * Note: Setting volume has no effect on iOS \"special snowflake\" devices.\n                 * Hardware volume control overrides software, and volume\n                 * will always return 1 per Apple docs. (iOS 4 + 5.)\n                 * http://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/AddingSoundtoCanvasAnimations/AddingSoundtoCanvasAnimations.html\n                 */\n                if(nVol === _undefined) {\n                    nVol = 100;\n                }\n                if(_bInstanceOnly === _undefined) {\n                    _bInstanceOnly = false;\n                }\n                if(!s.isHTML5) {\n                    flash._setVolume(s.id, (sm2.muted && !s.muted) || s.muted ? 0 : nVol);\n                } else if(s._a) {\n                    if(sm2.muted && !s.muted) {\n                        s.muted = true;\n                        s._a.muted = true;\n                    }\n                    // valid range: 0-1\n                    s._a.volume = Math.max(0, Math.min(1, nVol / 100));\n                }\n                s._iO.volume = nVol;\n                if(!_bInstanceOnly) {\n                    s.volume = nVol;\n                    s.options.volume = nVol;\n                }\n                return s;\n            };\n            /**\n             * Mutes the sound.\n             *\n             * @return {SMSound} The SMSound object\n             */\n            this.mute = function() {\n                s.muted = true;\n                if(!s.isHTML5) {\n                    flash._setVolume(s.id, 0);\n                } else if(s._a) {\n                    s._a.muted = true;\n                }\n                return s;\n            };\n            /**\n             * Unmutes the sound.\n             *\n             * @return {SMSound} The SMSound object\n             */\n            this.unmute = function() {\n                s.muted = false;\n                var hasIO = (s._iO.volume !== _undefined);\n                if(!s.isHTML5) {\n                    flash._setVolume(s.id, hasIO ? s._iO.volume : s.options.volume);\n                } else if(s._a) {\n                    s._a.muted = false;\n                }\n                return s;\n            };\n            /**\n             * Toggles the muted state of a sound.\n             *\n             * @return {SMSound} The SMSound object\n             */\n            this.toggleMute = function() {\n                return(s.muted ? s.unmute() : s.mute());\n            };\n            /**\n             * Registers a callback to be fired when a sound reaches a given position during playback.\n             *\n             * @param {number} nPosition The position to watch for\n             * @param {function} oMethod The relevant callback to fire\n             * @param {object} oScope Optional: The scope to apply the callback to\n             * @return {SMSound} The SMSound object\n             */\n            this.onPosition = function(nPosition, oMethod, oScope) {\n                // TODO: basic dupe checking?\n                onPositionItems.push({\n                    position: parseInt(nPosition, 10),\n                    method: oMethod,\n                    scope: (oScope !== _undefined ? oScope : s),\n                    fired: false\n                });\n                return s;\n            };\n            // legacy/backwards-compability: lower-case method name\n            this.onposition = this.onPosition;\n            /**\n             * Removes registered callback(s) from a sound, by position and/or callback.\n             *\n             * @param {number} nPosition The position to clear callback(s) for\n             * @param {function} oMethod Optional: Identify one callback to be removed when multiple listeners exist for one position\n             * @return {SMSound} The SMSound object\n             */\n            this.clearOnPosition = function(nPosition, oMethod) {\n                var i;\n                nPosition = parseInt(nPosition, 10);\n                if(isNaN(nPosition)) {\n                    // safety check\n                    return false;\n                }\n                for(i = 0; i < onPositionItems.length; i++) {\n                    if(nPosition === onPositionItems[i].position) {\n                        // remove this item if no method was specified, or, if the method matches\n                        if(!oMethod || (oMethod === onPositionItems[i].method)) {\n                            if(onPositionItems[i].fired) {\n                                // decrement \"fired\" counter, too\n                                onPositionFired--;\n                            }\n                            onPositionItems.splice(i, 1);\n                        }\n                    }\n                }\n            };\n            this._processOnPosition = function() {\n                var i, item, j = onPositionItems.length;\n                if(!j || !s.playState || onPositionFired >= j) {\n                    return false;\n                }\n                for(i = j - 1; i >= 0; i--) {\n                    item = onPositionItems[i];\n                    if(!item.fired && s.position >= item.position) {\n                        item.fired = true;\n                        onPositionFired++;\n                        item.method.apply(item.scope, [item.position]);\n                        j = onPositionItems.length; //  reset j -- onPositionItems.length can be changed in the item callback above... occasionally breaking the loop.\n                    }\n                }\n                return true;\n            };\n            this._resetOnPosition = function(nPosition) {\n                // reset \"fired\" for items interested in this position\n                var i, item, j = onPositionItems.length;\n                if(!j) {\n                    return false;\n                }\n                for(i = j - 1; i >= 0; i--) {\n                    item = onPositionItems[i];\n                    if(item.fired && nPosition <= item.position) {\n                        item.fired = false;\n                        onPositionFired--;\n                    }\n                }\n                return true;\n            };\n            /**\n             * SMSound() private internals\n             * --------------------------------\n             */\n            applyFromTo = function() {\n                var instanceOptions = s._iO,\n                    f = instanceOptions.from,\n                    t = instanceOptions.to,\n                    start, end;\n                end = function() {\n                    // end has been reached.\n                    sm2._wD(s.id + ': \"To\" time of ' + t + ' reached.');\n                    // detach listener\n                    s.clearOnPosition(t, end);\n                    // stop should clear this, too\n                    s.stop();\n                };\n                start = function() {\n                    sm2._wD(s.id + ': Playing \"from\" ' + f);\n                    // add listener for end\n                    if(t !== null && !isNaN(t)) {\n                        s.onPosition(t, end);\n                    }\n                };\n                if(f !== null && !isNaN(f)) {\n                    // apply to instance options, guaranteeing correct start position.\n                    instanceOptions.position = f;\n                    // multiShot timing can't be tracked, so prevent that.\n                    instanceOptions.multiShot = false;\n                    start();\n                }\n                // return updated instanceOptions including starting position\n                return instanceOptions;\n            };\n            attachOnPosition = function() {\n                var item,\n                    op = s._iO.onposition;\n                // attach onposition things, if any, now.\n                if(op) {\n                    for(item in op) {\n                        if(op.hasOwnProperty(item)) {\n                            s.onPosition(parseInt(item, 10), op[item]);\n                        }\n                    }\n                }\n            };\n            detachOnPosition = function() {\n                var item,\n                    op = s._iO.onposition;\n                // detach any onposition()-style listeners.\n                if(op) {\n                    for(item in op) {\n                        if(op.hasOwnProperty(item)) {\n                            s.clearOnPosition(parseInt(item, 10));\n                        }\n                    }\n                }\n            };\n            start_html5_timer = function() {\n                if(s.isHTML5) {\n                    startTimer(s);\n                }\n            };\n            stop_html5_timer = function() {\n                if(s.isHTML5) {\n                    stopTimer(s);\n                }\n            };\n            resetProperties = function(retainPosition) {\n                if(!retainPosition) {\n                    onPositionItems = [];\n                    onPositionFired = 0;\n                }\n                onplay_called = false;\n                s._hasTimer = null;\n                s._a = null;\n                s._html5_canplay = false;\n                s.bytesLoaded = null;\n                s.bytesTotal = null;\n                s.duration = (s._iO && s._iO.duration ? s._iO.duration : null);\n                s.durationEstimate = null;\n                s.buffered = [];\n                // legacy: 1D array\n                s.eqData = [];\n                s.eqData.left = [];\n                s.eqData.right = [];\n                s.failures = 0;\n                s.isBuffering = false;\n                s.instanceOptions = {};\n                s.instanceCount = 0;\n                s.loaded = false;\n                s.metadata = {};\n                // 0 = uninitialised, 1 = loading, 2 = failed/error, 3 = loaded/success\n                s.readyState = 0;\n                s.muted = false;\n                s.paused = false;\n                s.peakData = {\n                    left: 0,\n                    right: 0\n                };\n                s.waveformData = {\n                    left: [],\n                    right: []\n                };\n                s.playState = 0;\n                s.position = null;\n                s.id3 = {};\n            };\n            resetProperties();\n            /**\n             * Pseudo-private SMSound internals\n             * --------------------------------\n             */\n            this._onTimer = function(bForce) {\n                /**\n                 * HTML5-only _whileplaying() etc.\n                 * called from both HTML5 native events, and polling/interval-based timers\n                 * mimics flash and fires only when time/duration change, so as to be polling-friendly\n                 */\n                var duration, isNew = false,\n                    time, x = {};\n                if(s._hasTimer || bForce) {\n                    // TODO: May not need to track readyState (1 = loading)\n                    if(s._a && (bForce || ((s.playState > 0 || s.readyState === 1) && !s.paused))) {\n                        duration = s._get_html5_duration();\n                        if(duration !== lastHTML5State.duration) {\n                            lastHTML5State.duration = duration;\n                            s.duration = duration;\n                            isNew = true;\n                        }\n                        // TODO: investigate why this goes wack if not set/re-set each time.\n                        s.durationEstimate = s.duration;\n                        time = (s._a.currentTime * msecScale || 0);\n                        if(time !== lastHTML5State.time) {\n                            lastHTML5State.time = time;\n                            isNew = true;\n                        }\n                        if(isNew || bForce) {\n                            s._whileplaying(time, x, x, x, x);\n                        }\n                    }\n                    /* else {\n\n          // sm2._wD('_onTimer: Warn for \"'+s.id+'\": '+(!s._a?'Could not find element. ':'')+(s.playState === 0?'playState bad, 0?':'playState = '+s.playState+', OK'));\n\n          return false;\n\n        }*/\n                    return isNew;\n                }\n            };\n            this._get_html5_duration = function() {\n                var instanceOptions = s._iO,\n                    // if audio object exists, use its duration - else, instance option duration (if provided - it's a hack, really, and should be retired) OR null\n                    d = (s._a && s._a.duration ? s._a.duration * msecScale : (instanceOptions && instanceOptions.duration ? instanceOptions.duration : null)),\n                    result = (d && !isNaN(d) && d !== Infinity ? d : null);\n                return result;\n            };\n            this._apply_loop = function(a, nLoops) {\n                /**\n                 * boolean instead of \"loop\", for webkit? - spec says string. http://www.w3.org/TR/html-markup/audio.html#audio.attrs.loop\n                 * note that loop is either off or infinite under HTML5, unlike Flash which allows arbitrary loop counts to be specified.\n                 */\n                // <d>\n                if(!a.loop && nLoops > 1) {\n                    sm2._wD('Note: Native HTML5 looping is infinite.', 1);\n                }\n                // </d>\n                a.loop = (nLoops > 1 ? 'loop' : '');\n            };\n            this._setup_html5 = function(oOptions) {\n                var instanceOptions = mixin(s._iO, oOptions),\n                    a = useGlobalHTML5Audio ? globalHTML5Audio : s._a,\n                    dURL = decodeURI(instanceOptions.url),\n                    sameURL;\n                /**\n                 * \"First things first, I, Poppa...\" (reset the previous state of the old sound, if playing)\n                 * Fixes case with devices that can only play one sound at a time\n                 * Otherwise, other sounds in mid-play will be terminated without warning and in a stuck state\n                 */\n                if(useGlobalHTML5Audio) {\n                    if(dURL === decodeURI(lastGlobalHTML5URL)) {\n                        // global HTML5 audio: re-use of URL\n                        sameURL = true;\n                    }\n                } else if(dURL === decodeURI(lastURL)) {\n                    // options URL is the same as the \"last\" URL, and we used (loaded) it\n                    sameURL = true;\n                }\n                if(a) {\n                    if(a._s) {\n                        if(useGlobalHTML5Audio) {\n                            if(a._s && a._s.playState && !sameURL) {\n                                // global HTML5 audio case, and loading a new URL. stop the currently-playing one.\n                                a._s.stop();\n                            }\n                        } else if(!useGlobalHTML5Audio && dURL === decodeURI(lastURL)) {\n                            // non-global HTML5 reuse case: same url, ignore request\n                            s._apply_loop(a, instanceOptions.loops);\n                            return a;\n                        }\n                    }\n                    if(!sameURL) {\n                        // don't retain onPosition() stuff with new URLs.\n                        if(lastURL) {\n                            resetProperties(false);\n                        }\n                        // assign new HTML5 URL\n                        a.src = instanceOptions.url;\n                        s.url = instanceOptions.url;\n                        lastURL = instanceOptions.url;\n                        lastGlobalHTML5URL = instanceOptions.url;\n                        a._called_load = false;\n                    }\n                } else {\n                    if(instanceOptions.autoLoad || instanceOptions.autoPlay) {\n                        s._a = new Audio(instanceOptions.url);\n                        s._a.load();\n                    } else {\n                        // null for stupid Opera 9.64 case\n                        s._a = (isOpera && opera.version() < 10 ? new Audio(null) : new Audio());\n                    }\n                    // assign local reference\n                    a = s._a;\n                    a._called_load = false;\n                    if(useGlobalHTML5Audio) {\n                        globalHTML5Audio = a;\n                    }\n                }\n                s.isHTML5 = true;\n                // store a ref on the track\n                s._a = a;\n                // store a ref on the audio\n                a._s = s;\n                add_html5_events();\n                s._apply_loop(a, instanceOptions.loops);\n                if(instanceOptions.autoLoad || instanceOptions.autoPlay) {\n                    s.load();\n                } else {\n                    // early HTML5 implementation (non-standard)\n                    a.autobuffer = false;\n                    // standard ('none' is also an option.)\n                    a.preload = 'auto';\n                }\n                return a;\n            };\n            add_html5_events = function() {\n                if(s._a._added_events) {\n                    return false;\n                }\n                var f;\n\n                function add(oEvt, oFn, bCapture) {\n                    return s._a ? s._a.addEventListener(oEvt, oFn, bCapture || false) : null;\n                }\n                s._a._added_events = true;\n                for(f in html5_events) {\n                    if(html5_events.hasOwnProperty(f)) {\n                        add(f, html5_events[f]);\n                    }\n                }\n                return true;\n            };\n            remove_html5_events = function() {\n                // Remove event listeners\n                var f;\n\n                function remove(oEvt, oFn, bCapture) {\n                    return(s._a ? s._a.removeEventListener(oEvt, oFn, bCapture || false) : null);\n                }\n                sm2._wD(s.id + ': Removing event listeners');\n                s._a._added_events = false;\n                for(f in html5_events) {\n                    if(html5_events.hasOwnProperty(f)) {\n                        remove(f, html5_events[f]);\n                    }\n                }\n            };\n            /**\n             * Pseudo-private event internals\n             * ------------------------------\n             */\n            this._onload = function(nSuccess) {\n                var fN,\n                    // check for duration to prevent false positives from flash 8 when loading from cache.\n                    loadOK = !! nSuccess || (!s.isHTML5 && fV === 8 && s.duration);\n                // <d>\n                fN = s.id + ': ';\n                sm2._wD(fN + (loadOK ? 'onload()' : 'Failed to load / invalid sound?' + (!s.duration ? ' Zero-length duration reported.' : ' -') + ' (' + s.url + ')'), (loadOK ? 1 : 2));\n                if(!loadOK && !s.isHTML5) {\n                    if(sm2.sandbox.noRemote === true) {\n                        sm2._wD(fN + str('noNet'), 1);\n                    }\n                    if(sm2.sandbox.noLocal === true) {\n                        sm2._wD(fN + str('noLocal'), 1);\n                    }\n                }\n                // </d>\n                s.loaded = loadOK;\n                s.readyState = loadOK ? 3 : 2;\n                s._onbufferchange(0);\n                if(s._iO.onload) {\n                    wrapCallback(s, function() {\n                        s._iO.onload.apply(s, [loadOK]);\n                    });\n                }\n                return true;\n            };\n            this._onbufferchange = function(nIsBuffering) {\n                if(s.playState === 0) {\n                    // ignore if not playing\n                    return false;\n                }\n                if((nIsBuffering && s.isBuffering) || (!nIsBuffering && !s.isBuffering)) {\n                    return false;\n                }\n                s.isBuffering = (nIsBuffering === 1);\n                if(s._iO.onbufferchange) {\n                    sm2._wD(s.id + ': Buffer state change: ' + nIsBuffering);\n                    s._iO.onbufferchange.apply(s, [nIsBuffering]);\n                }\n                return true;\n            };\n            /**\n             * Playback may have stopped due to buffering, or related reason.\n             * This state can be encountered on iOS < 6 when auto-play is blocked.\n             */\n            this._onsuspend = function() {\n                if(s._iO.onsuspend) {\n                    sm2._wD(s.id + ': Playback suspended');\n                    s._iO.onsuspend.apply(s);\n                }\n                return true;\n            };\n            /**\n             * flash 9/movieStar + RTMP-only method, should fire only once at most\n             * at this point we just recreate failed sounds rather than trying to reconnect\n             */\n            this._onfailure = function(msg, level, code) {\n                s.failures++;\n                sm2._wD(s.id + ': Failure (' + s.failures + '): ' + msg);\n                if(s._iO.onfailure && s.failures === 1) {\n                    s._iO.onfailure(msg, level, code);\n                } else {\n                    sm2._wD(s.id + ': Ignoring failure');\n                }\n            };\n            /**\n             * flash 9/movieStar + RTMP-only method for unhandled warnings/exceptions from Flash\n             * e.g., RTMP \"method missing\" warning (non-fatal) for getStreamLength on server\n             */\n            this._onwarning = function(msg, level, code) {\n                if(s._iO.onwarning) {\n                    s._iO.onwarning(msg, level, code);\n                }\n            };\n            this._onfinish = function() {\n                // store local copy before it gets trashed...\n                var io_onfinish = s._iO.onfinish;\n                s._onbufferchange(0);\n                s._resetOnPosition(0);\n                // reset some state items\n                if(s.instanceCount) {\n                    s.instanceCount--;\n                    if(!s.instanceCount) {\n                        // remove onPosition listeners, if any\n                        detachOnPosition();\n                        // reset instance options\n                        s.playState = 0;\n                        s.paused = false;\n                        s.instanceCount = 0;\n                        s.instanceOptions = {};\n                        s._iO = {};\n                        stop_html5_timer();\n                        // reset position, too\n                        if(s.isHTML5) {\n                            s.position = 0;\n                        }\n                    }\n                    if(!s.instanceCount || s._iO.multiShotEvents) {\n                        // fire onfinish for last, or every instance\n                        if(io_onfinish) {\n                            sm2._wD(s.id + ': onfinish()');\n                            wrapCallback(s, function() {\n                                io_onfinish.apply(s);\n                            });\n                        }\n                    }\n                }\n            };\n            this._whileloading = function(nBytesLoaded, nBytesTotal, nDuration, nBufferLength) {\n                var instanceOptions = s._iO;\n                s.bytesLoaded = nBytesLoaded;\n                s.bytesTotal = nBytesTotal;\n                s.duration = Math.floor(nDuration);\n                s.bufferLength = nBufferLength;\n                if(!s.isHTML5 && !instanceOptions.isMovieStar) {\n                    if(instanceOptions.duration) {\n                        // use duration from options, if specified and larger. nobody should be specifying duration in options, actually, and it should be retired.\n                        s.durationEstimate = (s.duration > instanceOptions.duration) ? s.duration : instanceOptions.duration;\n                    } else {\n                        s.durationEstimate = parseInt((s.bytesTotal / s.bytesLoaded) * s.duration, 10);\n                    }\n                } else {\n                    s.durationEstimate = s.duration;\n                }\n                // for flash, reflect sequential-load-style buffering\n                if(!s.isHTML5) {\n                    s.buffered = [{\n                        'start': 0,\n                        'end': s.duration\n                    }];\n                }\n                // allow whileloading to fire even if \"load\" fired under HTML5, due to HTTP range/partials\n                if((s.readyState !== 3 || s.isHTML5) && instanceOptions.whileloading) {\n                    instanceOptions.whileloading.apply(s);\n                }\n            };\n            this._whileplaying = function(nPosition, oPeakData, oWaveformDataLeft, oWaveformDataRight, oEQData) {\n                var instanceOptions = s._iO,\n                    eqLeft;\n                if(isNaN(nPosition) || nPosition === null) {\n                    // flash safety net\n                    return false;\n                }\n                // Safari HTML5 play() may return small -ve values when starting from position: 0, eg. -50.120396875. Unexpected/invalid per W3, I think. Normalize to 0.\n                s.position = Math.max(0, nPosition);\n                s._processOnPosition();\n                if(!s.isHTML5 && fV > 8) {\n                    if(instanceOptions.usePeakData && oPeakData !== _undefined && oPeakData) {\n                        s.peakData = {\n                            left: oPeakData.leftPeak,\n                            right: oPeakData.rightPeak\n                        };\n                    }\n                    if(instanceOptions.useWaveformData && oWaveformDataLeft !== _undefined && oWaveformDataLeft) {\n                        s.waveformData = {\n                            left: oWaveformDataLeft.split(','),\n                            right: oWaveformDataRight.split(',')\n                        };\n                    }\n                    if(instanceOptions.useEQData) {\n                        if(oEQData !== _undefined && oEQData && oEQData.leftEQ) {\n                            eqLeft = oEQData.leftEQ.split(',');\n                            s.eqData = eqLeft;\n                            s.eqData.left = eqLeft;\n                            if(oEQData.rightEQ !== _undefined && oEQData.rightEQ) {\n                                s.eqData.right = oEQData.rightEQ.split(',');\n                            }\n                        }\n                    }\n                }\n                if(s.playState === 1) {\n                    // special case/hack: ensure buffering is false if loading from cache (and not yet started)\n                    if(!s.isHTML5 && fV === 8 && !s.position && s.isBuffering) {\n                        s._onbufferchange(0);\n                    }\n                    if(instanceOptions.whileplaying) {\n                        // flash may call after actual finish\n                        instanceOptions.whileplaying.apply(s);\n                    }\n                }\n                return true;\n            };\n            this._oncaptiondata = function(oData) {\n                /**\n                 * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\n                 *\n                 * @param {object} oData\n                 */\n                sm2._wD(s.id + ': Caption data received.');\n                s.captiondata = oData;\n                if(s._iO.oncaptiondata) {\n                    s._iO.oncaptiondata.apply(s, [oData]);\n                }\n            };\n            this._onmetadata = function(oMDProps, oMDData) {\n                /**\n                 * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\n                 * RTMP may include song title, MovieStar content may include encoding info\n                 *\n                 * @param {array} oMDProps (names)\n                 * @param {array} oMDData (values)\n                 */\n                sm2._wD(s.id + ': Metadata received.');\n                var oData = {}, i, j;\n                for(i = 0, j = oMDProps.length; i < j; i++) {\n                    oData[oMDProps[i]] = oMDData[i];\n                }\n                s.metadata = oData;\n                console.log('updated metadata', s.metadata);\n                if(s._iO.onmetadata) {\n                    s._iO.onmetadata.call(s, s.metadata);\n                }\n            };\n            this._onid3 = function(oID3Props, oID3Data) {\n                /**\n                 * internal: flash 8 + flash 9 ID3 feature\n                 * may include artist, song title etc.\n                 *\n                 * @param {array} oID3Props (names)\n                 * @param {array} oID3Data (values)\n                 */\n                sm2._wD(s.id + ': ID3 data received.');\n                var oData = [],\n                    i, j;\n                for(i = 0, j = oID3Props.length; i < j; i++) {\n                    oData[oID3Props[i]] = oID3Data[i];\n                }\n                s.id3 = mixin(s.id3, oData);\n                if(s._iO.onid3) {\n                    s._iO.onid3.apply(s);\n                }\n            };\n            // flash/RTMP-only\n            this._onconnect = function(bSuccess) {\n                bSuccess = (bSuccess === 1);\n                sm2._wD(s.id + ': ' + (bSuccess ? 'Connected.' : 'Failed to connect? - ' + s.url), (bSuccess ? 1 : 2));\n                s.connected = bSuccess;\n                if(bSuccess) {\n                    s.failures = 0;\n                    if(idCheck(s.id)) {\n                        if(s.getAutoPlay()) {\n                            // only update the play state if auto playing\n                            s.play(_undefined, s.getAutoPlay());\n                        } else if(s._iO.autoLoad) {\n                            s.load();\n                        }\n                    }\n                    if(s._iO.onconnect) {\n                        s._iO.onconnect.apply(s, [bSuccess]);\n                    }\n                }\n            };\n            this._ondataerror = function(sError) {\n                // flash 9 wave/eq data handler\n                // hack: called at start, and end from flash at/after onfinish()\n                if(s.playState > 0) {\n                    sm2._wD(s.id + ': Data error: ' + sError);\n                    if(s._iO.ondataerror) {\n                        s._iO.ondataerror.apply(s);\n                    }\n                }\n            };\n            // <d>\n            this._debug();\n            // </d>\n        }; // SMSound()\n        /**\n         * Private SoundManager internals\n         * ------------------------------\n         */\n        getDocument = function() {\n            return(doc.body || doc.getElementsByTagName('div')[0]);\n        };\n        id = function(sID) {\n            return doc.getElementById(sID);\n        };\n        mixin = function(oMain, oAdd) {\n            // non-destructive merge\n            var o1 = (oMain || {}),\n                o2, o;\n            // if unspecified, o2 is the default options object\n            o2 = (oAdd === _undefined ? sm2.defaultOptions : oAdd);\n            for(o in o2) {\n                if(o2.hasOwnProperty(o) && o1[o] === _undefined) {\n                    if(typeof o2[o] !== 'object' || o2[o] === null) {\n                        // assign directly\n                        o1[o] = o2[o];\n                    } else {\n                        // recurse through o2\n                        o1[o] = mixin(o1[o], o2[o]);\n                    }\n                }\n            }\n            return o1;\n        };\n        wrapCallback = function(oSound, callback) {\n            /**\n             * 03/03/2013: Fix for Flash Player 11.6.602.171 + Flash 8 (flashVersion = 8) SWF issue\n             * setTimeout() fix for certain SMSound callbacks like onload() and onfinish(), where subsequent calls like play() and load() fail when Flash Player 11.6.602.171 is installed, and using soundManager with flashVersion = 8 (which is the default).\n             * Not sure of exact cause. Suspect race condition and/or invalid (NaN-style) position argument trickling down to the next JS -> Flash _start() call, in the play() case.\n             * Fix: setTimeout() to yield, plus safer null / NaN checking on position argument provided to Flash.\n             * https://getsatisfaction.com/schillmania/topics/recent_chrome_update_seems_to_have_broken_my_sm2_audio_player\n             */\n            if(!oSound.isHTML5 && fV === 8) {\n                window.setTimeout(callback, 0);\n            } else {\n                callback();\n            }\n        };\n        // additional soundManager properties that soundManager.setup() will accept\n        extraOptions = {\n            'onready': 1,\n            'ontimeout': 1,\n            'defaultOptions': 1,\n            'flash9Options': 1,\n            'movieStarOptions': 1\n        };\n        assign = function(o, oParent) {\n            /**\n             * recursive assignment of properties, soundManager.setup() helper\n             * allows property assignment based on whitelist\n             */\n            var i,\n                result = true,\n                hasParent = (oParent !== _undefined),\n                setupOptions = sm2.setupOptions,\n                bonusOptions = extraOptions;\n            // <d>\n            // if soundManager.setup() called, show accepted parameters.\n            if(o === _undefined) {\n                result = [];\n                for(i in setupOptions) {\n                    if(setupOptions.hasOwnProperty(i)) {\n                        result.push(i);\n                    }\n                }\n                for(i in bonusOptions) {\n                    if(bonusOptions.hasOwnProperty(i)) {\n                        if(typeof sm2[i] === 'object') {\n                            result.push(i + ': {...}');\n                        } else if(sm2[i] instanceof Function) {\n                            result.push(i + ': function() {...}');\n                        } else {\n                            result.push(i);\n                        }\n                    }\n                }\n                sm2._wD(str('setup', result.join(', ')));\n                return false;\n            }\n            // </d>\n            for(i in o) {\n                if(o.hasOwnProperty(i)) {\n                    // if not an {object} we want to recurse through...\n                    if(typeof o[i] !== 'object' || o[i] === null || o[i] instanceof Array || o[i] instanceof RegExp) {\n                        // check \"allowed\" options\n                        if(hasParent && bonusOptions[oParent] !== _undefined) {\n                            // valid recursive / nested object option, eg., { defaultOptions: { volume: 50 } }\n                            sm2[oParent][i] = o[i];\n                        } else if(setupOptions[i] !== _undefined) {\n                            // special case: assign to setupOptions object, which soundManager property references\n                            sm2.setupOptions[i] = o[i];\n                            // assign directly to soundManager, too\n                            sm2[i] = o[i];\n                        } else if(bonusOptions[i] === _undefined) {\n                            // invalid or disallowed parameter. complain.\n                            complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\n                            result = false;\n                        } else {\n                            /**\n                             * valid extraOptions (bonusOptions) parameter.\n                             * is it a method, like onready/ontimeout? call it.\n                             * multiple parameters should be in an array, eg. soundManager.setup({onready: [myHandler, myScope]});\n                             */\n                            if(sm2[i] instanceof Function) {\n                                sm2[i].apply(sm2, (o[i] instanceof Array ? o[i] : [o[i]]));\n                            } else {\n                                // good old-fashioned direct assignment\n                                sm2[i] = o[i];\n                            }\n                        }\n                    } else {\n                        // recursion case, eg., { defaultOptions: { ... } }\n                        if(bonusOptions[i] === _undefined) {\n                            // invalid or disallowed parameter. complain.\n                            complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\n                            result = false;\n                        } else {\n                            // recurse through object\n                            return assign(o[i], i);\n                        }\n                    }\n                }\n            }\n            return result;\n        };\n\n        function preferFlashCheck(kind) {\n            // whether flash should play a given type\n            return(sm2.preferFlash && hasFlash && !sm2.ignoreFlash && (sm2.flash[kind] !== _undefined && sm2.flash[kind]));\n        }\n        /**\n         * Internal DOM2-level event helpers\n         * ---------------------------------\n         */\n        event = (function() {\n            // normalize event methods\n            var old = (window.attachEvent),\n                evt = {\n                    add: (old ? 'attachEvent' : 'addEventListener'),\n                    remove: (old ? 'detachEvent' : 'removeEventListener')\n                };\n            // normalize \"on\" event prefix, optional capture argument\n\n            function getArgs(oArgs) {\n                var args = slice.call(oArgs),\n                    len = args.length;\n                if(old) {\n                    // prefix\n                    args[1] = 'on' + args[1];\n                    if(len > 3) {\n                        // no capture\n                        args.pop();\n                    }\n                } else if(len === 3) {\n                    args.push(false);\n                }\n                return args;\n            }\n\n            function apply(args, sType) {\n                // normalize and call the event method, with the proper arguments\n                var element = args.shift(),\n                    method = [evt[sType]];\n                if(old) {\n                    // old IE can't do apply().\n                    element[method](args[0], args[1]);\n                } else {\n                    element[method].apply(element, args);\n                }\n            }\n\n            function add() {\n                apply(getArgs(arguments), 'add');\n            }\n\n            function remove() {\n                apply(getArgs(arguments), 'remove');\n            }\n            return {\n                'add': add,\n                'remove': remove\n            };\n        }());\n        /**\n         * Internal HTML5 event handling\n         * -----------------------------\n         */\n\n        function html5_event(oFn) {\n            // wrap html5 event handlers so we don't call them on destroyed and/or unloaded sounds\n            return function(e) {\n                var s = this._s,\n                    result;\n                if(!s || !s._a) {\n                    // <d>\n                    if(s && s.id) {\n                        sm2._wD(s.id + ': Ignoring ' + e.type);\n                    } else {\n                        sm2._wD(h5 + 'Ignoring ' + e.type);\n                    }\n                    // </d>\n                    result = null;\n                } else {\n                    result = oFn.call(this, e);\n                }\n                return result;\n            };\n        }\n        html5_events = {\n            // HTML5 event-name-to-handler map\n            abort: html5_event(function() {\n                sm2._wD(this._s.id + ': abort');\n            }),\n            // enough has loaded to play\n            canplay: html5_event(function() {\n                var s = this._s,\n                    position1K;\n                if(s._html5_canplay) {\n                    // this event has already fired. ignore.\n                    return true;\n                }\n                s._html5_canplay = true;\n                sm2._wD(s.id + ': canplay');\n                s._onbufferchange(0);\n                // position according to instance options\n                position1K = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position / msecScale : null);\n                // set the position if position was provided before the sound loaded\n                if(this.currentTime !== position1K) {\n                    sm2._wD(s.id + ': canplay: Setting position to ' + position1K);\n                    try {\n                        this.currentTime = position1K;\n                    } catch(ee) {\n                        sm2._wD(s.id + ': canplay: Setting position of ' + position1K + ' failed: ' + ee.message, 2);\n                    }\n                }\n                // hack for HTML5 from/to case\n                if(s._iO._oncanplay) {\n                    s._iO._oncanplay();\n                }\n            }),\n            canplaythrough: html5_event(function() {\n                var s = this._s;\n                if(!s.loaded) {\n                    s._onbufferchange(0);\n                    s._whileloading(s.bytesLoaded, s.bytesTotal, s._get_html5_duration());\n                    s._onload(true);\n                }\n            }),\n            durationchange: html5_event(function() {\n                // durationchange may fire at various times, probably the safest way to capture accurate/final duration.\n                var s = this._s,\n                    duration;\n                duration = s._get_html5_duration();\n                if(!isNaN(duration) && duration !== s.duration) {\n                    sm2._wD(this._s.id + ': durationchange (' + duration + ')' + (s.duration ? ', previously ' + s.duration : ''));\n                    s.durationEstimate = s.duration = duration;\n                }\n            }),\n            // TODO: Reserved for potential use\n            /*\n    emptied: html5_event(function() {\n\n      sm2._wD(this._s.id + ': emptied');\n\n    }),\n    */\n            ended: html5_event(function() {\n                var s = this._s;\n                sm2._wD(s.id + ': ended');\n                s._onfinish();\n            }),\n            error: html5_event(function() {\n                sm2._wD(this._s.id + ': HTML5 error, code ' + this.error.code);\n                /**\n                 * HTML5 error codes, per W3C\n                 * Error 1: Client aborted download at user's request.\n                 * Error 2: Network error after load started.\n                 * Error 3: Decoding issue.\n                 * Error 4: Media (audio file) not supported.\n                 * Reference: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#error-codes\n                 */\n                // call load with error state?\n                this._s._onload(false);\n            }),\n            loadeddata: html5_event(function() {\n                var s = this._s;\n                sm2._wD(s.id + ': loadeddata');\n                // safari seems to nicely report progress events, eventually totalling 100%\n                if(!s._loaded && !isSafari) {\n                    s.duration = s._get_html5_duration();\n                }\n            }),\n            loadedmetadata: html5_event(function() {\n                sm2._wD(this._s.id + ': loadedmetadata');\n            }),\n            loadstart: html5_event(function() {\n                sm2._wD(this._s.id + ': loadstart');\n                // assume buffering at first\n                this._s._onbufferchange(1);\n            }),\n            play: html5_event(function() {\n                // sm2._wD(this._s.id + ': play()');\n                // once play starts, no buffering\n                this._s._onbufferchange(0);\n            }),\n            playing: html5_event(function() {\n                sm2._wD(this._s.id + ': playing ' + String.fromCharCode(9835));\n                // once play starts, no buffering\n                this._s._onbufferchange(0);\n            }),\n            progress: html5_event(function(e) {\n                // note: can fire repeatedly after \"loaded\" event, due to use of HTTP range/partials\n                var s = this._s,\n                    i, j, progStr, buffered = 0,\n                    isProgress = (e.type === 'progress'),\n                    ranges = e.target.buffered,\n                    // firefox 3.6 implements e.loaded/total (bytes)\n                    loaded = (e.loaded || 0),\n                    total = (e.total || 1);\n                // reset the \"buffered\" (loaded byte ranges) array\n                s.buffered = [];\n                if(ranges && ranges.length) {\n                    // if loaded is 0, try TimeRanges implementation as % of load\n                    // https://developer.mozilla.org/en/DOM/TimeRanges\n                    // re-build \"buffered\" array\n                    // HTML5 returns seconds. SM2 API uses msec for setPosition() etc., whether Flash or HTML5.\n                    for(i = 0, j = ranges.length; i < j; i++) {\n                        s.buffered.push({\n                            'start': ranges.start(i) * msecScale,\n                            'end': ranges.end(i) * msecScale\n                        });\n                    }\n                    // use the last value locally\n                    buffered = (ranges.end(0) - ranges.start(0)) * msecScale;\n                    // linear case, buffer sum; does not account for seeking and HTTP partials / byte ranges\n                    loaded = Math.min(1, buffered / (e.target.duration * msecScale));\n                    // <d>\n                    if(isProgress && ranges.length > 1) {\n                        progStr = [];\n                        j = ranges.length;\n                        for(i = 0; i < j; i++) {\n                            progStr.push(e.target.buffered.start(i) * msecScale + '-' + e.target.buffered.end(i) * msecScale);\n                        }\n                        sm2._wD(this._s.id + ': progress, timeRanges: ' + progStr.join(', '));\n                    }\n                    if(isProgress && !isNaN(loaded)) {\n                        sm2._wD(this._s.id + ': progress, ' + Math.floor(loaded * 100) + '% loaded');\n                    }\n                    // </d>\n                }\n                if(!isNaN(loaded)) {\n                    // TODO: prevent calls with duplicate values.\n                    s._whileloading(loaded, total, s._get_html5_duration());\n                    if(loaded && total && loaded === total) {\n                        // in case \"onload\" doesn't fire (eg. gecko 1.9.2)\n                        html5_events.canplaythrough.call(this, e);\n                    }\n                }\n            }),\n            ratechange: html5_event(function() {\n                sm2._wD(this._s.id + ': ratechange');\n            }),\n            suspend: html5_event(function(e) {\n                // download paused/stopped, may have finished (eg. onload)\n                var s = this._s;\n                sm2._wD(this._s.id + ': suspend');\n                html5_events.progress.call(this, e);\n                s._onsuspend();\n            }),\n            stalled: html5_event(function() {\n                sm2._wD(this._s.id + ': stalled');\n            }),\n            timeupdate: html5_event(function() {\n                this._s._onTimer();\n            }),\n            waiting: html5_event(function() {\n                var s = this._s;\n                // see also: seeking\n                sm2._wD(this._s.id + ': waiting');\n                // playback faster than download rate, etc.\n                s._onbufferchange(1);\n            })\n        };\n        html5OK = function(iO) {\n            // playability test based on URL or MIME type\n            var result;\n            if(!iO || (!iO.type && !iO.url && !iO.serverURL)) {\n                // nothing to check\n                result = false;\n            } else if(iO.serverURL || (iO.type && preferFlashCheck(iO.type))) {\n                // RTMP, or preferring flash\n                result = false;\n            } else {\n                // Use type, if specified. Pass data: URIs to HTML5. If HTML5-only mode, no other options, so just give 'er\n                result = ((iO.type ? html5CanPlay({\n                    type: iO.type\n                }) : html5CanPlay({\n                    url: iO.url\n                }) || sm2.html5Only || iO.url.match(/data\\:/i)));\n            }\n            return result;\n        };\n        html5Unload = function(oAudio) {\n            /**\n             * Internal method: Unload media, and cancel any current/pending network requests.\n             * Firefox can load an empty URL, which allegedly destroys the decoder and stops the download.\n             * https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox#Stopping_the_download_of_media\n             * However, Firefox has been seen loading a relative URL from '' and thus requesting the hosting page on unload.\n             * Other UA behaviour is unclear, so everyone else gets an about:blank-style URL.\n             */\n            var url;\n            if(oAudio) {\n                // Firefox and Chrome accept short WAVe data: URIs. Chome dislikes audio/wav, but accepts audio/wav for data: MIME.\n                // Desktop Safari complains / fails on data: URI, so it gets about:blank.\n                url = (isSafari ? emptyURL : (sm2.html5.canPlayType('audio/wav') ? emptyWAV : emptyURL));\n                oAudio.src = url;\n                // reset some state, too\n                if(oAudio._called_unload !== undefined) {\n                    oAudio._called_load = false;\n                }\n            }\n            if(useGlobalHTML5Audio) {\n                // ensure URL state is trashed, also\n                lastGlobalHTML5URL = null;\n            }\n            return url;\n        };\n        html5CanPlay = function(o) {\n            /**\n             * Try to find MIME, test and return truthiness\n             * o = {\n             *  url: '/path/to/an.mp3',\n             *  type: 'audio/mp3'\n             * }\n             */\n            if(!sm2.useHTML5Audio || !sm2.hasHTML5) {\n                return false;\n            }\n            var url = (o.url || null),\n                mime = (o.type || null),\n                aF = sm2.audioFormats,\n                result,\n                offset,\n                fileExt,\n                item;\n            // account for known cases like audio/mp3\n            if(mime && sm2.html5[mime] !== _undefined) {\n                return(sm2.html5[mime] && !preferFlashCheck(mime));\n            }\n            if(!html5Ext) {\n                html5Ext = [];\n                for(item in aF) {\n                    if(aF.hasOwnProperty(item)) {\n                        html5Ext.push(item);\n                        if(aF[item].related) {\n                            html5Ext = html5Ext.concat(aF[item].related);\n                        }\n                    }\n                }\n                html5Ext = new RegExp('\\\\.(' + html5Ext.join('|') + ')(\\\\?.*)?$', 'i');\n            }\n            // TODO: Strip URL queries, etc.\n            fileExt = (url ? url.toLowerCase().match(html5Ext) : null);\n            if(!fileExt || !fileExt.length) {\n                if(!mime) {\n                    result = false;\n                } else {\n                    // audio/mp3 -> mp3, result should be known\n                    offset = mime.indexOf(';');\n                    // strip \"audio/X; codecs...\"\n                    fileExt = (offset !== -1 ? mime.substr(0, offset) : mime).substr(6);\n                }\n            } else {\n                // match the raw extension name - \"mp3\", for example\n                fileExt = fileExt[1];\n            }\n            if(fileExt && sm2.html5[fileExt] !== _undefined) {\n                // result known\n                result = (sm2.html5[fileExt] && !preferFlashCheck(fileExt));\n            } else {\n                mime = 'audio/' + fileExt;\n                result = sm2.html5.canPlayType({\n                    type: mime\n                });\n                sm2.html5[fileExt] = result;\n                // sm2._wD('canPlayType, found result: ' + result);\n                result = (result && sm2.html5[mime] && !preferFlashCheck(mime));\n            }\n            return result;\n        };\n        testHTML5 = function() {\n            /**\n             * Internal: Iterates over audioFormats, determining support eg. audio/mp3, audio/mpeg and so on\n             * assigns results to html5[] and flash[].\n             */\n            if(!sm2.useHTML5Audio || !sm2.hasHTML5) {\n                // without HTML5, we need Flash.\n                sm2.html5.usingFlash = true;\n                needsFlash = true;\n                return false;\n            }\n            // double-whammy: Opera 9.64 throws WRONG_ARGUMENTS_ERR if no parameter passed to Audio(), and Webkit + iOS happily tries to load \"null\" as a URL. :/\n            var a = (Audio !== _undefined ? (isOpera && opera.version() < 10 ? new Audio(null) : new Audio()) : null),\n                item, lookup, support = {}, aF, i;\n\n            function cp(m) {\n                var canPlay, j,\n                    result = false,\n                    isOK = false;\n                if(!a || typeof a.canPlayType !== 'function') {\n                    return result;\n                }\n                if(m instanceof Array) {\n                    // iterate through all mime types, return any successes\n                    for(i = 0, j = m.length; i < j; i++) {\n                        if(sm2.html5[m[i]] || a.canPlayType(m[i]).match(sm2.html5Test)) {\n                            isOK = true;\n                            sm2.html5[m[i]] = true;\n                            // note flash support, too\n                            sm2.flash[m[i]] = !! (m[i].match(flashMIME));\n                        }\n                    }\n                    result = isOK;\n                } else {\n                    canPlay = (a && typeof a.canPlayType === 'function' ? a.canPlayType(m) : false);\n                    result = !! (canPlay && (canPlay.match(sm2.html5Test)));\n                }\n                return result;\n            }\n            // test all registered formats + codecs\n            aF = sm2.audioFormats;\n            for(item in aF) {\n                if(aF.hasOwnProperty(item)) {\n                    lookup = 'audio/' + item;\n                    support[item] = cp(aF[item].type);\n                    // write back generic type too, eg. audio/mp3\n                    support[lookup] = support[item];\n                    // assign flash\n                    if(item.match(flashMIME)) {\n                        sm2.flash[item] = true;\n                        sm2.flash[lookup] = true;\n                    } else {\n                        sm2.flash[item] = false;\n                        sm2.flash[lookup] = false;\n                    }\n                    // assign result to related formats, too\n                    if(aF[item] && aF[item].related) {\n                        for(i = aF[item].related.length - 1; i >= 0; i--) {\n                            // eg. audio/m4a\n                            support['audio/' + aF[item].related[i]] = support[item];\n                            sm2.html5[aF[item].related[i]] = support[item];\n                            sm2.flash[aF[item].related[i]] = support[item];\n                        }\n                    }\n                }\n            }\n            support.canPlayType = (a ? cp : null);\n            sm2.html5 = mixin(sm2.html5, support);\n            sm2.html5.usingFlash = featureCheck();\n            needsFlash = sm2.html5.usingFlash;\n            return true;\n        };\n        strings = {\n            // <d>\n            notReady: 'Unavailable - wait until onready() has fired.',\n            notOK: 'Audio support is not available.',\n            domError: sm + 'exception caught while appending SWF to DOM.',\n            spcWmode: 'Removing wmode, preventing known SWF loading issue(s)',\n            swf404: smc + 'Verify that %s is a valid path.',\n            tryDebug: 'Try ' + sm + '.debugFlash = true for more security details (output goes to SWF.)',\n            checkSWF: 'See SWF output for more debug info.',\n            localFail: smc + 'Non-HTTP page (' + doc.location.protocol + ' URL?) Review Flash player security settings for this special case:\\nhttp://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html\\nMay need to add/allow path, eg. c:/sm2/ or /users/me/sm2/',\n            waitFocus: smc + 'Special case: Waiting for SWF to load with window focus...',\n            waitForever: smc + 'Waiting indefinitely for Flash (will recover if unblocked)...',\n            waitSWF: smc + 'Waiting for 100% SWF load...',\n            needFunction: smc + 'Function object expected for %s',\n            badID: 'Sound ID \"%s\" should be a string, starting with a non-numeric character',\n            currentObj: smc + '_debug(): Current sound objects',\n            waitOnload: smc + 'Waiting for window.onload()',\n            docLoaded: smc + 'Document already loaded',\n            onload: smc + 'initComplete(): calling soundManager.onload()',\n            onloadOK: sm + '.onload() complete',\n            didInit: smc + 'init(): Already called?',\n            secNote: 'Flash security note: Network/internet URLs will not load due to security restrictions. Access can be configured via Flash Player Global Security Settings Page: http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html',\n            badRemove: smc + 'Failed to remove Flash node.',\n            shutdown: sm + '.disable(): Shutting down',\n            queue: smc + 'Queueing %s handler',\n            smError: 'SMSound.load(): Exception: JS-Flash communication failed, or JS error.',\n            fbTimeout: 'No flash response, applying .' + swfCSS.swfTimedout + ' CSS...',\n            fbLoaded: 'Flash loaded',\n            fbHandler: smc + 'flashBlockHandler()',\n            manURL: 'SMSound.load(): Using manually-assigned URL',\n            onURL: sm + '.load(): current URL already assigned.',\n            badFV: sm + '.flashVersion must be 8 or 9. \"%s\" is invalid. Reverting to %s.',\n            as2loop: 'Note: Setting stream:false so looping can work (flash 8 limitation)',\n            noNSLoop: 'Note: Looping not implemented for MovieStar formats',\n            needfl9: 'Note: Switching to flash 9, required for MP4 formats.',\n            mfTimeout: 'Setting flashLoadTimeout = 0 (infinite) for off-screen, mobile flash case',\n            needFlash: smc + 'Fatal error: Flash is needed to play some required formats, but is not available.',\n            gotFocus: smc + 'Got window focus.',\n            policy: 'Enabling usePolicyFile for data access',\n            setup: sm + '.setup(): allowed parameters: %s',\n            setupError: sm + '.setup(): \"%s\" cannot be assigned with this method.',\n            setupUndef: sm + '.setup(): Could not find option \"%s\"',\n            setupLate: sm + '.setup(): url, flashVersion and html5Test property changes will not take effect until reboot().',\n            noURL: smc + 'Flash URL required. Call soundManager.setup({url:...}) to get started.',\n            sm2Loaded: 'SoundManager 2: Ready. ' + String.fromCharCode(10003),\n            reset: sm + '.reset(): Removing event callbacks',\n            mobileUA: 'Mobile UA detected, preferring HTML5 by default.',\n            globalHTML5: 'Using singleton HTML5 Audio() pattern for this device.'\n            // </d>\n        };\n        str = function() {\n            // internal string replace helper.\n            // arguments: o [,items to replace]\n            // <d>\n            var args,\n                i, j, o,\n                sstr;\n            // real array, please\n            args = slice.call(arguments);\n            // first argument\n            o = args.shift();\n            sstr = (strings && strings[o] ? strings[o] : '');\n            if(sstr && args && args.length) {\n                for(i = 0, j = args.length; i < j; i++) {\n                    sstr = sstr.replace('%s', args[i]);\n                }\n            }\n            return sstr;\n            // </d>\n        };\n        loopFix = function(sOpt) {\n            // flash 8 requires stream = false for looping to work\n            if(fV === 8 && sOpt.loops > 1 && sOpt.stream) {\n                _wDS('as2loop');\n                sOpt.stream = false;\n            }\n            return sOpt;\n        };\n        policyFix = function(sOpt, sPre) {\n            if(sOpt && !sOpt.usePolicyFile && (sOpt.onid3 || sOpt.usePeakData || sOpt.useWaveformData || sOpt.useEQData)) {\n                sm2._wD((sPre || '') + str('policy'));\n                sOpt.usePolicyFile = true;\n            }\n            return sOpt;\n        };\n        complain = function(sMsg) {\n            // <d>\n            if(hasConsole && console.warn !== _undefined) {\n                console.warn(sMsg);\n            } else {\n                sm2._wD(sMsg);\n            }\n            // </d>\n        };\n        doNothing = function() {\n            return false;\n        };\n        disableObject = function(o) {\n            var oProp;\n            for(oProp in o) {\n                if(o.hasOwnProperty(oProp) && typeof o[oProp] === 'function') {\n                    o[oProp] = doNothing;\n                }\n            }\n            oProp = null;\n        };\n        failSafely = function(bNoDisable) {\n            // general failure exception handler\n            if(bNoDisable === _undefined) {\n                bNoDisable = false;\n            }\n            if(disabled || bNoDisable) {\n                sm2.disable(bNoDisable);\n            }\n        };\n        normalizeMovieURL = function(smURL) {\n            var urlParams = null,\n                url;\n            if(smURL) {\n                if(smURL.match(/\\.swf(\\?.*)?$/i)) {\n                    urlParams = smURL.substr(smURL.toLowerCase().lastIndexOf('.swf?') + 4);\n                    if(urlParams) {\n                        // assume user knows what they're doing\n                        return smURL;\n                    }\n                } else if(smURL.lastIndexOf('/') !== smURL.length - 1) {\n                    // append trailing slash, if needed\n                    smURL += '/';\n                }\n            }\n            url = (smURL && smURL.lastIndexOf('/') !== -1 ? smURL.substr(0, smURL.lastIndexOf('/') + 1) : './') + sm2.movieURL;\n            if(sm2.noSWFCache) {\n                url += ('?ts=' + new Date().getTime());\n            }\n            return url;\n        };\n        setVersionInfo = function() {\n            // short-hand for internal use\n            fV = parseInt(sm2.flashVersion, 10);\n            if(fV !== 8 && fV !== 9) {\n                sm2._wD(str('badFV', fV, defaultFlashVersion));\n                sm2.flashVersion = fV = defaultFlashVersion;\n            }\n            // debug flash movie, if applicable\n            var isDebug = (sm2.debugMode || sm2.debugFlash ? '_debug.swf' : '.swf');\n            if(sm2.useHTML5Audio && !sm2.html5Only && sm2.audioFormats.mp4.required && fV < 9) {\n                sm2._wD(str('needfl9'));\n                sm2.flashVersion = fV = 9;\n            }\n            sm2.version = sm2.versionNumber + (sm2.html5Only ? ' (HTML5-only mode)' : (fV === 9 ? ' (AS3/Flash 9)' : ' (AS2/Flash 8)'));\n            // set up default options\n            if(fV > 8) {\n                // +flash 9 base options\n                sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.flash9Options);\n                sm2.features.buffering = true;\n                // +moviestar support\n                sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.movieStarOptions);\n                sm2.filePatterns.flash9 = new RegExp('\\\\.(mp3|' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\n                sm2.features.movieStar = true;\n            } else {\n                sm2.features.movieStar = false;\n            }\n            // regExp for flash canPlay(), etc.\n            sm2.filePattern = sm2.filePatterns[(fV !== 8 ? 'flash9' : 'flash8')];\n            // if applicable, use _debug versions of SWFs\n            sm2.movieURL = (fV === 8 ? 'soundmanager2.swf' : 'soundmanager2_flash9.swf').replace('.swf', isDebug);\n            sm2.features.peakData = sm2.features.waveformData = sm2.features.eqData = (fV > 8);\n        };\n        setPolling = function(bPolling, bHighPerformance) {\n            if(!flash) {\n                return false;\n            }\n            flash._setPolling(bPolling, bHighPerformance);\n        };\n        initDebug = function() {\n            // starts debug mode, creating output <div> for UAs without console object\n            // allow force of debug mode via URL\n            // <d>\n            if(sm2.debugURLParam.test(wl)) {\n                sm2.debugMode = true;\n            }\n            if(id(sm2.debugID)) {\n                return false;\n            }\n            var oD, oDebug, oTarget, oToggle, tmp;\n            if(sm2.debugMode && !id(sm2.debugID) && (!hasConsole || !sm2.useConsole || !sm2.consoleOnly)) {\n                oD = doc.createElement('div');\n                oD.id = sm2.debugID + '-toggle';\n                oToggle = {\n                    'position': 'fixed',\n                    'bottom': '0px',\n                    'right': '0px',\n                    'width': '1.2em',\n                    'height': '1.2em',\n                    'lineHeight': '1.2em',\n                    'margin': '2px',\n                    'textAlign': 'center',\n                    'border': '1px solid #999',\n                    'cursor': 'pointer',\n                    'background': '#fff',\n                    'color': '#333',\n                    'zIndex': 10001\n                };\n                oD.appendChild(doc.createTextNode('-'));\n                oD.onclick = toggleDebug;\n                oD.title = 'Toggle SM2 debug console';\n                if(ua.match(/msie 6/i)) {\n                    oD.style.position = 'absolute';\n                    oD.style.cursor = 'hand';\n                }\n                for(tmp in oToggle) {\n                    if(oToggle.hasOwnProperty(tmp)) {\n                        oD.style[tmp] = oToggle[tmp];\n                    }\n                }\n                oDebug = doc.createElement('div');\n                oDebug.id = sm2.debugID;\n                oDebug.style.display = (sm2.debugMode ? 'block' : 'none');\n                if(sm2.debugMode && !id(oD.id)) {\n                    try {\n                        oTarget = getDocument();\n                        oTarget.appendChild(oD);\n                    } catch(e2) {\n                        throw new Error(str('domError') + ' \\n' + e2.toString());\n                    }\n                    oTarget.appendChild(oDebug);\n                }\n            }\n            oTarget = null;\n            // </d>\n        };\n        idCheck = this.getSoundById;\n        // <d>\n        _wDS = function(o, errorLevel) {\n            return(!o ? '' : sm2._wD(str(o), errorLevel));\n        };\n        toggleDebug = function() {\n            var o = id(sm2.debugID),\n                oT = id(sm2.debugID + '-toggle');\n            if(!o) {\n                return false;\n            }\n            if(debugOpen) {\n                // minimize\n                oT.innerHTML = '+';\n                o.style.display = 'none';\n            } else {\n                oT.innerHTML = '-';\n                o.style.display = 'block';\n            }\n            debugOpen = !debugOpen;\n        };\n        debugTS = function(sEventType, bSuccess, sMessage) {\n            // troubleshooter debug hooks\n            if(window.sm2Debugger !== _undefined) {\n                try {\n                    sm2Debugger.handleEvent(sEventType, bSuccess, sMessage);\n                } catch(e) {\n                    // oh well\n                    return false;\n                }\n            }\n            return true;\n        };\n        // </d>\n        getSWFCSS = function() {\n            var css = [];\n            if(sm2.debugMode) {\n                css.push(swfCSS.sm2Debug);\n            }\n            if(sm2.debugFlash) {\n                css.push(swfCSS.flashDebug);\n            }\n            if(sm2.useHighPerformance) {\n                css.push(swfCSS.highPerf);\n            }\n            return css.join(' ');\n        };\n        flashBlockHandler = function() {\n            // *possible* flash block situation.\n            var name = str('fbHandler'),\n                p = sm2.getMoviePercent(),\n                css = swfCSS,\n                error = {\n                    type: 'FLASHBLOCK'\n                };\n            if(sm2.html5Only) {\n                // no flash, or unused\n                return false;\n            }\n            if(!sm2.ok()) {\n                if(needsFlash) {\n                    // make the movie more visible, so user can fix\n                    sm2.oMC.className = getSWFCSS() + ' ' + css.swfDefault + ' ' + (p === null ? css.swfTimedout : css.swfError);\n                    sm2._wD(name + ': ' + str('fbTimeout') + (p ? ' (' + str('fbLoaded') + ')' : ''));\n                }\n                sm2.didFlashBlock = true;\n                // fire onready(), complain lightly\n                processOnEvents({\n                    type: 'ontimeout',\n                    ignoreInit: true,\n                    error: error\n                });\n                catchError(error);\n            } else {\n                // SM2 loaded OK (or recovered)\n                // <d>\n                if(sm2.didFlashBlock) {\n                    sm2._wD(name + ': Unblocked');\n                }\n                // </d>\n                if(sm2.oMC) {\n                    sm2.oMC.className = [getSWFCSS(), css.swfDefault, css.swfLoaded + (sm2.didFlashBlock ? ' ' + css.swfUnblocked : '')].join(' ');\n                }\n            }\n        };\n        addOnEvent = function(sType, oMethod, oScope) {\n            if(on_queue[sType] === _undefined) {\n                on_queue[sType] = [];\n            }\n            on_queue[sType].push({\n                'method': oMethod,\n                'scope': (oScope || null),\n                'fired': false\n            });\n        };\n        processOnEvents = function(oOptions) {\n            // if unspecified, assume OK/error\n            if(!oOptions) {\n                oOptions = {\n                    type: (sm2.ok() ? 'onready' : 'ontimeout')\n                };\n            }\n            if(!didInit && oOptions && !oOptions.ignoreInit) {\n                // not ready yet.\n                return false;\n            }\n            if(oOptions.type === 'ontimeout' && (sm2.ok() || (disabled && !oOptions.ignoreInit))) {\n                // invalid case\n                return false;\n            }\n            var status = {\n                success: (oOptions && oOptions.ignoreInit ? sm2.ok() : !disabled)\n            },\n                // queue specified by type, or none\n                srcQueue = (oOptions && oOptions.type ? on_queue[oOptions.type] || [] : []),\n                queue = [],\n                i, j,\n                args = [status],\n                canRetry = (needsFlash && !sm2.ok());\n            if(oOptions.error) {\n                args[0].error = oOptions.error;\n            }\n            for(i = 0, j = srcQueue.length; i < j; i++) {\n                if(srcQueue[i].fired !== true) {\n                    queue.push(srcQueue[i]);\n                }\n            }\n            if(queue.length) {\n                // sm2._wD(sm + ': Firing ' + queue.length + ' ' + oOptions.type + '() item' + (queue.length === 1 ? '' : 's'));\n                for(i = 0, j = queue.length; i < j; i++) {\n                    if(queue[i].scope) {\n                        queue[i].method.apply(queue[i].scope, args);\n                    } else {\n                        queue[i].method.apply(this, args);\n                    }\n                    if(!canRetry) {\n                        // useFlashBlock and SWF timeout case doesn't count here.\n                        queue[i].fired = true;\n                    }\n                }\n            }\n            return true;\n        };\n        initUserOnload = function() {\n            window.setTimeout(function() {\n                if(sm2.useFlashBlock) {\n                    flashBlockHandler();\n                }\n                processOnEvents();\n                // call user-defined \"onload\", scoped to window\n                if(typeof sm2.onload === 'function') {\n                    _wDS('onload', 1);\n                    sm2.onload.apply(window);\n                    _wDS('onloadOK', 1);\n                }\n                if(sm2.waitForWindowLoad) {\n                    event.add(window, 'load', initUserOnload);\n                }\n            }, 1);\n        };\n        detectFlash = function() {\n            // hat tip: Flash Detect library (BSD, (C) 2007) by Carl \"DocYes\" S. Yestrau - http://featureblend.com/javascript-flash-detection-library.html / http://featureblend.com/license.txt\n            if(hasFlash !== _undefined) {\n                // this work has already been done.\n                return hasFlash;\n            }\n            var hasPlugin = false,\n                n = navigator,\n                nP = n.plugins,\n                obj, type, types, AX = window.ActiveXObject;\n            if(nP && nP.length) {\n                type = 'application/x-shockwave-flash';\n                types = n.mimeTypes;\n                if(types && types[type] && types[type].enabledPlugin && types[type].enabledPlugin.description) {\n                    hasPlugin = true;\n                }\n            } else if(AX !== _undefined && !ua.match(/MSAppHost/i)) {\n                // Windows 8 Store Apps (MSAppHost) are weird (compatibility?) and won't complain here, but will barf if Flash/ActiveX object is appended to the DOM.\n                try {\n                    obj = new AX('ShockwaveFlash.ShockwaveFlash');\n                } catch(e) {\n                    // oh well\n                    obj = null;\n                }\n                hasPlugin = ( !! obj);\n                // cleanup, because it is ActiveX after all\n                obj = null;\n            }\n            hasFlash = hasPlugin;\n            return hasPlugin;\n        };\n        featureCheck = function() {\n            var flashNeeded,\n                item,\n                formats = sm2.audioFormats,\n                // iPhone <= 3.1 has broken HTML5 audio(), but firmware 3.2 (original iPad) + iOS4 works.\n                isSpecial = (is_iDevice && !! (ua.match(/os (1|2|3_0|3_1)\\s/i)));\n            if(isSpecial) {\n                // has Audio(), but is broken; let it load links directly.\n                sm2.hasHTML5 = false;\n                // ignore flash case, however\n                sm2.html5Only = true;\n                // hide the SWF, if present\n                if(sm2.oMC) {\n                    sm2.oMC.style.display = 'none';\n                }\n            } else {\n                if(sm2.useHTML5Audio) {\n                    if(!sm2.html5 || !sm2.html5.canPlayType) {\n                        sm2._wD('SoundManager: No HTML5 Audio() support detected.');\n                        sm2.hasHTML5 = false;\n                    }\n                    // <d>\n                    if(isBadSafari) {\n                        sm2._wD(smc + 'Note: Buggy HTML5 Audio in Safari on this OS X release, see https://bugs.webkit.org/show_bug.cgi?id=32159 - ' + (!hasFlash ? ' would use flash fallback for MP3/MP4, but none detected.' : 'will use flash fallback for MP3/MP4, if available'), 1);\n                    }\n                    // </d>\n                }\n            }\n            if(sm2.useHTML5Audio && sm2.hasHTML5) {\n                // sort out whether flash is optional, required or can be ignored.\n                // innocent until proven guilty.\n                canIgnoreFlash = true;\n                for(item in formats) {\n                    if(formats.hasOwnProperty(item)) {\n                        if(formats[item].required) {\n                            if(!sm2.html5.canPlayType(formats[item].type)) {\n                                // 100% HTML5 mode is not possible.\n                                canIgnoreFlash = false;\n                                flashNeeded = true;\n                            } else if(sm2.preferFlash && (sm2.flash[item] || sm2.flash[formats[item].type])) {\n                                // flash may be required, or preferred for this format.\n                                flashNeeded = true;\n                            }\n                        }\n                    }\n                }\n            }\n            // sanity check...\n            if(sm2.ignoreFlash) {\n                flashNeeded = false;\n                canIgnoreFlash = true;\n            }\n            sm2.html5Only = (sm2.hasHTML5 && sm2.useHTML5Audio && !flashNeeded);\n            return(!sm2.html5Only);\n        };\n        parseURL = function(url) {\n            /**\n             * Internal: Finds and returns the first playable URL (or failing that, the first URL.)\n             * @param {string or array} url A single URL string, OR, an array of URL strings or {url:'/path/to/resource', type:'audio/mp3'} objects.\n             */\n            var i, j, urlResult = 0,\n                result;\n            if(url instanceof Array) {\n                // find the first good one\n                for(i = 0, j = url.length; i < j; i++) {\n                    if(url[i] instanceof Object) {\n                        // MIME check\n                        if(sm2.canPlayMIME(url[i].type)) {\n                            urlResult = i;\n                            break;\n                        }\n                    } else if(sm2.canPlayURL(url[i])) {\n                        // URL string check\n                        urlResult = i;\n                        break;\n                    }\n                }\n                // normalize to string\n                if(url[urlResult].url) {\n                    url[urlResult] = url[urlResult].url;\n                }\n                result = url[urlResult];\n            } else {\n                // single URL case\n                result = url;\n            }\n            return result;\n        };\n        startTimer = function(oSound) {\n            /**\n             * attach a timer to this sound, and start an interval if needed\n             */\n            if(!oSound._hasTimer) {\n                oSound._hasTimer = true;\n                if(!mobileHTML5 && sm2.html5PollingInterval) {\n                    if(h5IntervalTimer === null && h5TimerCount === 0) {\n                        h5IntervalTimer = setInterval(timerExecute, sm2.html5PollingInterval);\n                    }\n                    h5TimerCount++;\n                }\n            }\n        };\n        stopTimer = function(oSound) {\n            /**\n             * detach a timer\n             */\n            if(oSound._hasTimer) {\n                oSound._hasTimer = false;\n                if(!mobileHTML5 && sm2.html5PollingInterval) {\n                    // interval will stop itself at next execution.\n                    h5TimerCount--;\n                }\n            }\n        };\n        timerExecute = function() {\n            /**\n             * manual polling for HTML5 progress events, ie., whileplaying() (can achieve greater precision than conservative default HTML5 interval)\n             */\n            var i;\n            if(h5IntervalTimer !== null && !h5TimerCount) {\n                // no active timers, stop polling interval.\n                clearInterval(h5IntervalTimer);\n                h5IntervalTimer = null;\n                return false;\n            }\n            // check all HTML5 sounds with timers\n            for(i = sm2.soundIDs.length - 1; i >= 0; i--) {\n                if(sm2.sounds[sm2.soundIDs[i]].isHTML5 && sm2.sounds[sm2.soundIDs[i]]._hasTimer) {\n                    sm2.sounds[sm2.soundIDs[i]]._onTimer();\n                }\n            }\n        };\n        catchError = function(options) {\n            options = (options !== _undefined ? options : {});\n            if(typeof sm2.onerror === 'function') {\n                sm2.onerror.apply(window, [{\n                    type: (options.type !== _undefined ? options.type : null)\n                }]);\n            }\n            if(options.fatal !== _undefined && options.fatal) {\n                sm2.disable();\n            }\n        };\n        badSafariFix = function() {\n            // special case: \"bad\" Safari (OS X 10.3 - 10.7) must fall back to flash for MP3/MP4\n            if(!isBadSafari || !detectFlash()) {\n                // doesn't apply\n                return false;\n            }\n            var aF = sm2.audioFormats,\n                i, item;\n            for(item in aF) {\n                if(aF.hasOwnProperty(item)) {\n                    if(item === 'mp3' || item === 'mp4') {\n                        sm2._wD(sm + ': Using flash fallback for ' + item + ' format');\n                        sm2.html5[item] = false;\n                        // assign result to related formats, too\n                        if(aF[item] && aF[item].related) {\n                            for(i = aF[item].related.length - 1; i >= 0; i--) {\n                                sm2.html5[aF[item].related[i]] = false;\n                            }\n                        }\n                    }\n                }\n            }\n        };\n        /**\n         * Pseudo-private flash/ExternalInterface methods\n         * ----------------------------------------------\n         */\n        this._setSandboxType = function(sandboxType) {\n            // <d>\n            var sb = sm2.sandbox;\n            sb.type = sandboxType;\n            sb.description = sb.types[(sb.types[sandboxType] !== _undefined ? sandboxType : 'unknown')];\n            if(sb.type === 'localWithFile') {\n                sb.noRemote = true;\n                sb.noLocal = false;\n                _wDS('secNote', 2);\n            } else if(sb.type === 'localWithNetwork') {\n                sb.noRemote = false;\n                sb.noLocal = true;\n            } else if(sb.type === 'localTrusted') {\n                sb.noRemote = false;\n                sb.noLocal = false;\n            }\n            // </d>\n        };\n        this._externalInterfaceOK = function(swfVersion) {\n            // flash callback confirming flash loaded, EI working etc.\n            // swfVersion: SWF build string\n            if(sm2.swfLoaded) {\n                return false;\n            }\n            var e;\n            debugTS('swf', true);\n            debugTS('flashtojs', true);\n            sm2.swfLoaded = true;\n            tryInitOnFocus = false;\n            if(isBadSafari) {\n                badSafariFix();\n            }\n            // complain if JS + SWF build/version strings don't match, excluding +DEV builds\n            // <d>\n            if(!swfVersion || swfVersion.replace(/\\+dev/i, '') !== sm2.versionNumber.replace(/\\+dev/i, '')) {\n                e = sm + ': Fatal: JavaScript file build \"' + sm2.versionNumber + '\" does not match Flash SWF build \"' + swfVersion + '\" at ' + sm2.url + '. Ensure both are up-to-date.';\n                // escape flash -> JS stack so this error fires in window.\n                setTimeout(function versionMismatch() {\n                    throw new Error(e);\n                }, 0);\n                // exit, init will fail with timeout\n                return false;\n            }\n            // </d>\n            // IE needs a larger timeout\n            setTimeout(init, isIE ? 100 : 1);\n        };\n        /**\n         * Private initialization helpers\n         * ------------------------------\n         */\n        createMovie = function(smID, smURL) {\n            if(didAppend && appendSuccess) {\n                // ignore if already succeeded\n                return false;\n            }\n\n            function initMsg() {\n                // <d>\n                var options = [],\n                    title,\n                    msg = [],\n                    delimiter = ' + ';\n                title = 'SoundManager ' + sm2.version + (!sm2.html5Only && sm2.useHTML5Audio ? (sm2.hasHTML5 ? ' + HTML5 audio' : ', no HTML5 audio support') : '');\n                if(!sm2.html5Only) {\n                    if(sm2.preferFlash) {\n                        options.push('preferFlash');\n                    }\n                    if(sm2.useHighPerformance) {\n                        options.push('useHighPerformance');\n                    }\n                    if(sm2.flashPollingInterval) {\n                        options.push('flashPollingInterval (' + sm2.flashPollingInterval + 'ms)');\n                    }\n                    if(sm2.html5PollingInterval) {\n                        options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\n                    }\n                    if(sm2.wmode) {\n                        options.push('wmode (' + sm2.wmode + ')');\n                    }\n                    if(sm2.debugFlash) {\n                        options.push('debugFlash');\n                    }\n                    if(sm2.useFlashBlock) {\n                        options.push('flashBlock');\n                    }\n                } else {\n                    if(sm2.html5PollingInterval) {\n                        options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\n                    }\n                }\n                if(options.length) {\n                    msg = msg.concat([options.join(delimiter)]);\n                }\n                sm2._wD(title + (msg.length ? delimiter + msg.join(', ') : ''), 1);\n                showSupport();\n                // </d>\n            }\n            if(sm2.html5Only) {\n                // 100% HTML5 mode\n                setVersionInfo();\n                initMsg();\n                sm2.oMC = id(sm2.movieID);\n                init();\n                // prevent multiple init attempts\n                didAppend = true;\n                appendSuccess = true;\n                return false;\n            }\n            // flash path\n            var remoteURL = (smURL || sm2.url),\n                localURL = (sm2.altURL || remoteURL),\n                swfTitle = 'JS/Flash audio component (SoundManager 2)',\n                oTarget = getDocument(),\n                extraClass = getSWFCSS(),\n                isRTL = null,\n                html = doc.getElementsByTagName('html')[0],\n                oEmbed, oMovie, tmp, movieHTML, oEl, s, x, sClass;\n            isRTL = (html && html.dir && html.dir.match(/rtl/i));\n            smID = (smID === _undefined ? sm2.id : smID);\n\n            function param(name, value) {\n                return '<param name=\"' + name + '\" value=\"' + value + '\" />';\n            }\n            // safety check for legacy (change to Flash 9 URL)\n            setVersionInfo();\n            sm2.url = normalizeMovieURL(overHTTP ? remoteURL : localURL);\n            smURL = sm2.url;\n            sm2.wmode = (!sm2.wmode && sm2.useHighPerformance ? 'transparent' : sm2.wmode);\n            if(sm2.wmode !== null && (ua.match(/msie 8/i) || (!isIE && !sm2.useHighPerformance)) && navigator.platform.match(/win32|win64/i)) {\n                /**\n                 * extra-special case: movie doesn't load until scrolled into view when using wmode = anything but 'window' here\n                 * does not apply when using high performance (position:fixed means on-screen), OR infinite flash load timeout\n                 * wmode breaks IE 8 on Vista + Win7 too in some cases, as of January 2011 (?)\n                 */\n                messages.push(strings.spcWmode);\n                sm2.wmode = null;\n            }\n            oEmbed = {\n                'name': smID,\n                'id': smID,\n                'src': smURL,\n                'quality': 'high',\n                'allowScriptAccess': sm2.allowScriptAccess,\n                'bgcolor': sm2.bgColor,\n                'pluginspage': http + 'www.macromedia.com/go/getflashplayer',\n                'title': swfTitle,\n                'type': 'application/x-shockwave-flash',\n                'wmode': sm2.wmode,\n                // http://help.adobe.com/en_US/as3/mobile/WS4bebcd66a74275c36cfb8137124318eebc6-7ffd.html\n                'hasPriority': 'true'\n            };\n            if(sm2.debugFlash) {\n                oEmbed.FlashVars = 'debug=1';\n            }\n            if(!sm2.wmode) {\n                // don't write empty attribute\n                delete oEmbed.wmode;\n            }\n            if(isIE) {\n                // IE is \"special\".\n                oMovie = doc.createElement('div');\n                movieHTML = ['<object id=\"' + smID + '\" data=\"' + smURL + '\" type=\"' + oEmbed.type + '\" title=\"' + oEmbed.title + '\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"' + http + 'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\">',\n                    param('movie', smURL),\n                    param('AllowScriptAccess', sm2.allowScriptAccess),\n                    param('quality', oEmbed.quality), (sm2.wmode ? param('wmode', sm2.wmode) : ''),\n                    param('bgcolor', sm2.bgColor),\n                    param('hasPriority', 'true'), (sm2.debugFlash ? param('FlashVars', oEmbed.FlashVars) : ''), '</object>'\n                ].join('');\n            } else {\n                oMovie = doc.createElement('embed');\n                for(tmp in oEmbed) {\n                    if(oEmbed.hasOwnProperty(tmp)) {\n                        oMovie.setAttribute(tmp, oEmbed[tmp]);\n                    }\n                }\n            }\n            initDebug();\n            extraClass = getSWFCSS();\n            oTarget = getDocument();\n            if(oTarget) {\n                sm2.oMC = (id(sm2.movieID) || doc.createElement('div'));\n                if(!sm2.oMC.id) {\n                    sm2.oMC.id = sm2.movieID;\n                    sm2.oMC.className = swfCSS.swfDefault + ' ' + extraClass;\n                    s = null;\n                    oEl = null;\n                    if(!sm2.useFlashBlock) {\n                        if(sm2.useHighPerformance) {\n                            // on-screen at all times\n                            s = {\n                                'position': 'fixed',\n                                'width': '8px',\n                                'height': '8px',\n                                // >= 6px for flash to run fast, >= 8px to start up under Firefox/win32 in some cases. odd? yes.\n                                'bottom': '0px',\n                                'left': '0px',\n                                'overflow': 'hidden'\n                            };\n                        } else {\n                            // hide off-screen, lower priority\n                            s = {\n                                'position': 'absolute',\n                                'width': '6px',\n                                'height': '6px',\n                                'top': '-9999px',\n                                'left': '-9999px'\n                            };\n                            if(isRTL) {\n                                s.left = Math.abs(parseInt(s.left, 10)) + 'px';\n                            }\n                        }\n                    }\n                    if(isWebkit) {\n                        // soundcloud-reported render/crash fix, safari 5\n                        sm2.oMC.style.zIndex = 10000;\n                    }\n                    if(!sm2.debugFlash) {\n                        for(x in s) {\n                            if(s.hasOwnProperty(x)) {\n                                sm2.oMC.style[x] = s[x];\n                            }\n                        }\n                    }\n                    try {\n                        if(!isIE) {\n                            sm2.oMC.appendChild(oMovie);\n                        }\n                        oTarget.appendChild(sm2.oMC);\n                        if(isIE) {\n                            oEl = sm2.oMC.appendChild(doc.createElement('div'));\n                            oEl.className = swfCSS.swfBox;\n                            oEl.innerHTML = movieHTML;\n                        }\n                        appendSuccess = true;\n                    } catch(e) {\n                        throw new Error(str('domError') + ' \\n' + e.toString());\n                    }\n                } else {\n                    // SM2 container is already in the document (eg. flashblock use case)\n                    sClass = sm2.oMC.className;\n                    sm2.oMC.className = (sClass ? sClass + ' ' : swfCSS.swfDefault) + (extraClass ? ' ' + extraClass : '');\n                    sm2.oMC.appendChild(oMovie);\n                    if(isIE) {\n                        oEl = sm2.oMC.appendChild(doc.createElement('div'));\n                        oEl.className = swfCSS.swfBox;\n                        oEl.innerHTML = movieHTML;\n                    }\n                    appendSuccess = true;\n                }\n            }\n            didAppend = true;\n            initMsg();\n            // sm2._wD(sm + ': Trying to load ' + smURL + (!overHTTP && sm2.altURL ? ' (alternate URL)' : ''), 1);\n            return true;\n        };\n        initMovie = function() {\n            if(sm2.html5Only) {\n                createMovie();\n                return false;\n            }\n            // attempt to get, or create, movie (may already exist)\n            if(flash) {\n                return false;\n            }\n            if(!sm2.url) {\n                /**\n                 * Something isn't right - we've reached init, but the soundManager url property has not been set.\n                 * User has not called setup({url: ...}), or has not set soundManager.url (legacy use case) directly before init time.\n                 * Notify and exit. If user calls setup() with a url: property, init will be restarted as in the deferred loading case.\n                 */\n                _wDS('noURL');\n                return false;\n            }\n            // inline markup case\n            flash = sm2.getMovie(sm2.id);\n            if(!flash) {\n                if(!oRemoved) {\n                    // try to create\n                    createMovie(sm2.id, sm2.url);\n                } else {\n                    // try to re-append removed movie after reboot()\n                    if(!isIE) {\n                        sm2.oMC.appendChild(oRemoved);\n                    } else {\n                        sm2.oMC.innerHTML = oRemovedHTML;\n                    }\n                    oRemoved = null;\n                    didAppend = true;\n                }\n                flash = sm2.getMovie(sm2.id);\n            }\n            if(typeof sm2.oninitmovie === 'function') {\n                setTimeout(sm2.oninitmovie, 1);\n            }\n            // <d>\n            flushMessages();\n            // </d>\n            return true;\n        };\n        delayWaitForEI = function() {\n            setTimeout(waitForEI, 1000);\n        };\n        rebootIntoHTML5 = function() {\n            // special case: try for a reboot with preferFlash: false, if 100% HTML5 mode is possible and useFlashBlock is not enabled.\n            window.setTimeout(function() {\n                complain(smc + 'useFlashBlock is false, 100% HTML5 mode is possible. Rebooting with preferFlash: false...');\n                sm2.setup({\n                    preferFlash: false\n                }).reboot();\n                // if for some reason you want to detect this case, use an ontimeout() callback and look for html5Only and didFlashBlock == true.\n                sm2.didFlashBlock = true;\n                sm2.beginDelayedInit();\n            }, 1);\n        };\n        waitForEI = function() {\n            var p,\n                loadIncomplete = false;\n            if(!sm2.url) {\n                // No SWF url to load (noURL case) - exit for now. Will be retried when url is set.\n                return false;\n            }\n            if(waitingForEI) {\n                return false;\n            }\n            waitingForEI = true;\n            event.remove(window, 'load', delayWaitForEI);\n            if(hasFlash && tryInitOnFocus && !isFocused) {\n                // Safari won't load flash in background tabs, only when focused.\n                _wDS('waitFocus');\n                return false;\n            }\n            if(!didInit) {\n                p = sm2.getMoviePercent();\n                if(p > 0 && p < 100) {\n                    loadIncomplete = true;\n                }\n            }\n            setTimeout(function() {\n                p = sm2.getMoviePercent();\n                if(loadIncomplete) {\n                    // special case: if movie *partially* loaded, retry until it's 100% before assuming failure.\n                    waitingForEI = false;\n                    sm2._wD(str('waitSWF'));\n                    window.setTimeout(delayWaitForEI, 1);\n                    return false;\n                }\n                // <d>\n                if(!didInit) {\n                    sm2._wD(sm + ': No Flash response within expected time. Likely causes: ' + (p === 0 ? 'SWF load failed, ' : '') + 'Flash blocked or JS-Flash security error.' + (sm2.debugFlash ? ' ' + str('checkSWF') : ''), 2);\n                    if(!overHTTP && p) {\n                        _wDS('localFail', 2);\n                        if(!sm2.debugFlash) {\n                            _wDS('tryDebug', 2);\n                        }\n                    }\n                    if(p === 0) {\n                        // if 0 (not null), probably a 404.\n                        sm2._wD(str('swf404', sm2.url), 1);\n                    }\n                    debugTS('flashtojs', false, ': Timed out' + overHTTP ? ' (Check flash security or flash blockers)' : ' (No plugin/missing SWF?)');\n                }\n                // </d>\n                // give up / time-out, depending\n                if(!didInit && okToDisable) {\n                    if(p === null) {\n                        // SWF failed to report load progress. Possibly blocked.\n                        if(sm2.useFlashBlock || sm2.flashLoadTimeout === 0) {\n                            if(sm2.useFlashBlock) {\n                                flashBlockHandler();\n                            }\n                            _wDS('waitForever');\n                        } else {\n                            // no custom flash block handling, but SWF has timed out. Will recover if user unblocks / allows SWF load.\n                            if(!sm2.useFlashBlock && canIgnoreFlash) {\n                                rebootIntoHTML5();\n                            } else {\n                                _wDS('waitForever');\n                                // fire any regular registered ontimeout() listeners.\n                                processOnEvents({\n                                    type: 'ontimeout',\n                                    ignoreInit: true,\n                                    error: {\n                                        type: 'INIT_FLASHBLOCK'\n                                    }\n                                });\n                            }\n                        }\n                    } else {\n                        // SWF loaded? Shouldn't be a blocking issue, then.\n                        if(sm2.flashLoadTimeout === 0) {\n                            _wDS('waitForever');\n                        } else {\n                            if(!sm2.useFlashBlock && canIgnoreFlash) {\n                                rebootIntoHTML5();\n                            } else {\n                                failSafely(true);\n                            }\n                        }\n                    }\n                }\n            }, sm2.flashLoadTimeout);\n        };\n        handleFocus = function() {\n            function cleanup() {\n                event.remove(window, 'focus', handleFocus);\n            }\n            if(isFocused || !tryInitOnFocus) {\n                // already focused, or not special Safari background tab case\n                cleanup();\n                return true;\n            }\n            okToDisable = true;\n            isFocused = true;\n            _wDS('gotFocus');\n            // allow init to restart\n            waitingForEI = false;\n            // kick off ExternalInterface timeout, now that the SWF has started\n            delayWaitForEI();\n            cleanup();\n            return true;\n        };\n        flushMessages = function() {\n            // <d>\n            // SM2 pre-init debug messages\n            if(messages.length) {\n                sm2._wD('SoundManager 2: ' + messages.join(' '), 1);\n                messages = [];\n            }\n            // </d>\n        };\n        showSupport = function() {\n            // <d>\n            flushMessages();\n            var item, tests = [];\n            if(sm2.useHTML5Audio && sm2.hasHTML5) {\n                for(item in sm2.audioFormats) {\n                    if(sm2.audioFormats.hasOwnProperty(item)) {\n                        tests.push(item + ' = ' + sm2.html5[item] + (!sm2.html5[item] && needsFlash && sm2.flash[item] ? ' (using flash)' : (sm2.preferFlash && sm2.flash[item] && needsFlash ? ' (preferring flash)' : (!sm2.html5[item] ? ' (' + (sm2.audioFormats[item].required ? 'required, ' : '') + 'and no flash support)' : ''))));\n                    }\n                }\n                sm2._wD('SoundManager 2 HTML5 support: ' + tests.join(', '), 1);\n            }\n            // </d>\n        };\n        initComplete = function(bNoDisable) {\n            if(didInit) {\n                return false;\n            }\n            if(sm2.html5Only) {\n                // all good.\n                _wDS('sm2Loaded', 1);\n                didInit = true;\n                initUserOnload();\n                debugTS('onload', true);\n                return true;\n            }\n            var wasTimeout = (sm2.useFlashBlock && sm2.flashLoadTimeout && !sm2.getMoviePercent()),\n                result = true,\n                error;\n            if(!wasTimeout) {\n                didInit = true;\n            }\n            error = {\n                type: (!hasFlash && needsFlash ? 'NO_FLASH' : 'INIT_TIMEOUT')\n            };\n            sm2._wD('SoundManager 2 ' + (disabled ? 'failed to load' : 'loaded') + ' (' + (disabled ? 'Flash security/load error' : 'OK') + ') ' + String.fromCharCode(disabled ? 10006 : 10003), disabled ? 2 : 1);\n            if(disabled || bNoDisable) {\n                if(sm2.useFlashBlock && sm2.oMC) {\n                    sm2.oMC.className = getSWFCSS() + ' ' + (sm2.getMoviePercent() === null ? swfCSS.swfTimedout : swfCSS.swfError);\n                }\n                processOnEvents({\n                    type: 'ontimeout',\n                    error: error,\n                    ignoreInit: true\n                });\n                debugTS('onload', false);\n                catchError(error);\n                result = false;\n            } else {\n                debugTS('onload', true);\n            }\n            if(!disabled) {\n                if(sm2.waitForWindowLoad && !windowLoaded) {\n                    _wDS('waitOnload');\n                    event.add(window, 'load', initUserOnload);\n                } else {\n                    // <d>\n                    if(sm2.waitForWindowLoad && windowLoaded) {\n                        _wDS('docLoaded');\n                    }\n                    // </d>\n                    initUserOnload();\n                }\n            }\n            return result;\n        };\n        /**\n         * apply top-level setupOptions object as local properties, eg., this.setupOptions.flashVersion -> this.flashVersion (soundManager.flashVersion)\n         * this maintains backward compatibility, and allows properties to be defined separately for use by soundManager.setup().\n         */\n        setProperties = function() {\n            var i,\n                o = sm2.setupOptions;\n            for(i in o) {\n                if(o.hasOwnProperty(i)) {\n                    // assign local property if not already defined\n                    if(sm2[i] === _undefined) {\n                        sm2[i] = o[i];\n                    } else if(sm2[i] !== o[i]) {\n                        // legacy support: write manually-assigned property (eg., soundManager.url) back to setupOptions to keep things in sync\n                        sm2.setupOptions[i] = sm2[i];\n                    }\n                }\n            }\n        };\n        init = function() {\n            // called after onload()\n            if(didInit) {\n                _wDS('didInit');\n                return false;\n            }\n\n            function cleanup() {\n                event.remove(window, 'load', sm2.beginDelayedInit);\n            }\n            if(sm2.html5Only) {\n                if(!didInit) {\n                    // we don't need no steenking flash!\n                    cleanup();\n                    sm2.enabled = true;\n                    initComplete();\n                }\n                return true;\n            }\n            // flash path\n            initMovie();\n            try {\n                // attempt to talk to Flash\n                flash._externalInterfaceTest(false);\n                // apply user-specified polling interval, OR, if \"high performance\" set, faster vs. default polling\n                // (determines frequency of whileloading/whileplaying callbacks, effectively driving UI framerates)\n                setPolling(true, (sm2.flashPollingInterval || (sm2.useHighPerformance ? 10 : 50)));\n                if(!sm2.debugMode) {\n                    // stop the SWF from making debug output calls to JS\n                    flash._disableDebug();\n                }\n                sm2.enabled = true;\n                debugTS('jstoflash', true);\n                if(!sm2.html5Only) {\n                    // prevent browser from showing cached page state (or rather, restoring \"suspended\" page state) via back button, because flash may be dead\n                    // http://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\n                    event.add(window, 'unload', doNothing);\n                }\n            } catch(e) {\n                sm2._wD('js/flash exception: ' + e.toString());\n                debugTS('jstoflash', false);\n                catchError({\n                    type: 'JS_TO_FLASH_EXCEPTION',\n                    fatal: true\n                });\n                // don't disable, for reboot()\n                failSafely(true);\n                initComplete();\n                return false;\n            }\n            initComplete();\n            // disconnect events\n            cleanup();\n            return true;\n        };\n        domContentLoaded = function() {\n            if(didDCLoaded) {\n                return false;\n            }\n            didDCLoaded = true;\n            // assign top-level soundManager properties eg. soundManager.url\n            setProperties();\n            initDebug();\n            /**\n             * Temporary feature: allow force of HTML5 via URL params: sm2-usehtml5audio=0 or 1\n             * Ditto for sm2-preferFlash, too.\n             */\n            // <d>\n            (function() {\n                var a = 'sm2-usehtml5audio=',\n                    a2 = 'sm2-preferflash=',\n                    b = null,\n                    b2 = null,\n                    l = wl.toLowerCase();\n                if(l.indexOf(a) !== -1) {\n                    b = (l.charAt(l.indexOf(a) + a.length) === '1');\n                    if(hasConsole) {\n                        console.log((b ? 'Enabling ' : 'Disabling ') + 'useHTML5Audio via URL parameter');\n                    }\n                    sm2.setup({\n                        'useHTML5Audio': b\n                    });\n                }\n                if(l.indexOf(a2) !== -1) {\n                    b2 = (l.charAt(l.indexOf(a2) + a2.length) === '1');\n                    if(hasConsole) {\n                        console.log((b2 ? 'Enabling ' : 'Disabling ') + 'preferFlash via URL parameter');\n                    }\n                    sm2.setup({\n                        'preferFlash': b2\n                    });\n                }\n            }());\n            // </d>\n            if(!hasFlash && sm2.hasHTML5) {\n                sm2._wD('SoundManager 2: No Flash detected' + (!sm2.useHTML5Audio ? ', enabling HTML5.' : '. Trying HTML5-only mode.'), 1);\n                sm2.setup({\n                    'useHTML5Audio': true,\n                    // make sure we aren't preferring flash, either\n                    // TODO: preferFlash should not matter if flash is not installed. Currently, stuff breaks without the below tweak.\n                    'preferFlash': false\n                });\n            }\n            testHTML5();\n            if(!hasFlash && needsFlash) {\n                messages.push(strings.needFlash);\n                // TODO: Fatal here vs. timeout approach, etc.\n                // hack: fail sooner.\n                sm2.setup({\n                    'flashLoadTimeout': 1\n                });\n            }\n            if(doc.removeEventListener) {\n                doc.removeEventListener('DOMContentLoaded', domContentLoaded, false);\n            }\n            initMovie();\n            return true;\n        };\n        domContentLoadedIE = function() {\n            if(doc.readyState === 'complete') {\n                domContentLoaded();\n                doc.detachEvent('onreadystatechange', domContentLoadedIE);\n            }\n            return true;\n        };\n        winOnLoad = function() {\n            // catch edge case of initComplete() firing after window.load()\n            windowLoaded = true;\n            // catch case where DOMContentLoaded has been sent, but we're still in doc.readyState = 'interactive'\n            domContentLoaded();\n            event.remove(window, 'load', winOnLoad);\n        };\n        /**\n         * miscellaneous run-time, pre-init stuff\n         */\n        preInit = function() {\n            if(mobileHTML5) {\n                // prefer HTML5 for mobile + tablet-like devices, probably more reliable vs. flash at this point.\n                // <d>\n                if(!sm2.setupOptions.useHTML5Audio || sm2.setupOptions.preferFlash) {\n                    // notify that defaults are being changed.\n                    messages.push(strings.mobileUA);\n                }\n                // </d>\n                sm2.setupOptions.useHTML5Audio = true;\n                sm2.setupOptions.preferFlash = false;\n                if(is_iDevice || (isAndroid && !ua.match(/android\\s2\\.3/i))) {\n                    // iOS and Android devices tend to work better with a single audio instance, specifically for chained playback of sounds in sequence.\n                    // common use case: exiting sound onfinish() -> createSound() -> play()\n                    // <d>\n                    messages.push(strings.globalHTML5);\n                    // </d>\n                    if(is_iDevice) {\n                        sm2.ignoreFlash = true;\n                    }\n                    useGlobalHTML5Audio = true;\n                }\n            }\n        };\n        preInit();\n        // sniff up-front\n        detectFlash();\n        // focus and window load, init (primarily flash-driven)\n        event.add(window, 'focus', handleFocus);\n        event.add(window, 'load', delayWaitForEI);\n        event.add(window, 'load', winOnLoad);\n        if(doc.addEventListener) {\n            doc.addEventListener('DOMContentLoaded', domContentLoaded, false);\n        } else if(doc.attachEvent) {\n            doc.attachEvent('onreadystatechange', domContentLoadedIE);\n        } else {\n            // no add/attachevent support - safe to assume no JS -> Flash either\n            debugTS('onload', false);\n            catchError({\n                type: 'NO_DOM2_EVENTS',\n                fatal: true\n            });\n        }\n    } // SoundManager()\n    // SM2_DEFER details: http://www.schillmania.com/projects/soundmanager2/doc/getstarted/#lazy-loading\n    if(window.SM2_DEFER === undefined || !SM2_DEFER) {\n        soundManager = new SoundManager();\n    }\n    /**\n     * SoundManager public interfaces\n     * ------------------------------\n     */\n    if(typeof module === 'object' && module && typeof module.exports === 'object') {\n        /**\n         * commonJS module\n         * note: SM2 requires a window global due to Flash, which makes calls to window.soundManager.\n         * flash may not always be needed, but this is not known until async init and SM2 may even \"reboot\" into Flash mode.\n         */\n        window.soundManager = soundManager;\n        module.exports.SoundManager = SoundManager;\n        module.exports.soundManager = soundManager;\n    } else if(typeof define === 'function' && define.amd) {\n        // AMD - requireJS\n        define('SoundManager', [], function() {\n            return {\n                SoundManager: SoundManager,\n                soundManager: soundManager\n            };\n        });\n    } else {\n        // standard browser case\n        window.SoundManager = SoundManager; // constructor\n        window.soundManager = soundManager; // public API, flash callbacks etc.\n    }\n}(window));\n\nvar ngSoundManager = angular.module('angularSoundManager', [])\n  .config(['$logProvider', function($logProvider){\n    $logProvider.debugEnabled(false);\n  }]);\n\n\nngSoundManager.filter('humanTime', function () {\n        return function (input) {\n            function pad(d) {\n                return (d < 10) ? '0' + d.toString() : d.toString();\n            }\n\n            var min = (input / 1000 / 60) << 0,\n                sec = Math.round((input / 1000) % 60);\n\n            return pad(min) + ':' + pad(sec);\n        };\n    });\n\nngSoundManager.factory('angularPlayer', ['$rootScope', '$log',\n    function($rootScope, $log) {\n        \n        var currentTrack = null,\n            repeat = false,\n            autoPlay = true,\n            isPlaying = false,\n            volume = 90,\n            trackProgress = 0,\n            playlist = [];\n        \n        return {\n            /**\n             * Initialize soundmanager,\n             * requires soundmanager2 to be loaded first\n             */\n            init: function() {\n                if(typeof soundManager === 'undefined') {\n                    alert('Please include SoundManager2 Library!');\n                }\n                soundManager.setup({\n                    //url: '/path/to/swfs/',\n                    //flashVersion: 9,\n                    preferFlash: false, // prefer 100% HTML5 mode, where both supported\n                    debugMode: false, // enable debugging output ($log.debug() with HTML fallback)\n                    useHTML5Audio: true,\n                    onready: function() {\n                        //$log.debug('sound manager ready!');\n                    },\n                    ontimeout: function() {\n                        alert('SM2 failed to start. Flash missing, blocked or security error?');\n                        alert('The status is ' + status.success + ', the error type is ' + status.error.type);\n                    },\n                    defaultOptions: {\n                        // set global default volume for all sound objects\n                        autoLoad: false, // enable automatic loading (otherwise .load() will call with .play())\n                        autoPlay: false, // enable playing of file ASAP (much faster if \"stream\" is true)\n                        from: null, // position to start playback within a sound (msec), see demo\n                        loops: 1, // number of times to play the sound. Related: looping (API demo)\n                        multiShot: false, // let sounds \"restart\" or \"chorus\" when played multiple times..\n                        multiShotEvents: false, // allow events (onfinish()) to fire for each shot, if supported.\n                        onid3: null, // callback function for \"ID3 data is added/available\"\n                        onload: null, // callback function for \"load finished\"\n                        onstop: null, // callback for \"user stop\"\n                        onfailure: 'nextTrack', // callback function for when playing fails\n                        onpause: null, // callback for \"pause\"\n                        onplay: null, // callback for \"play\" start\n                        onresume: null, // callback for \"resume\" (pause toggle)\n                        position: null, // offset (milliseconds) to seek to within downloaded sound.\n                        pan: 0, // \"pan\" settings, left-to-right, -100 to 100\n                        stream: true, // allows playing before entire file has loaded (recommended)\n                        to: null, // position to end playback within a sound (msec), see demo\n                        type: 'audio/mp3', // MIME-like hint for canPlay() tests, eg. 'audio/mp3'\n                        usePolicyFile: false, // enable crossdomain.xml request for remote domains (for ID3/waveform access)\n                        volume: volume, // self-explanatory. 0-100, the latter being the max.\n                        whileloading: function() {\n                            //soundManager._writeDebug('sound '+this.id+' loading, '+this.bytesLoaded+' of '+this.bytesTotal);\n                            var trackLoaded = ((this.bytesLoaded/this.bytesTotal)*100);\n                            $rootScope.$broadcast('track:loaded', trackLoaded);\n                        },\n                        whileplaying: function() {\n                            //soundManager._writeDebug('sound '+this.id+' playing, '+this.position+' of '+this.duration);\n                            //broadcast current playing track id\n                            currentTrack = this.id;\n                            //$rootScope.$broadcast('track:id', this.id);\n                            //broadcast current playing track progress\n                            trackProgress = ((this.position / this.duration) * 100);\n                            $rootScope.$broadcast('track:progress', trackProgress);\n                            //broadcast track position\n                            $rootScope.$broadcast('currentTrack:position', this.position);\n                            //broadcast track duration\n                            $rootScope.$broadcast('currentTrack:duration', this.duration);\n                        },\n                        onfinish: function() {\n                            soundManager._writeDebug(this.id + ' finished playing');\n                            if(autoPlay === true) {\n                                //play next track if autoplay is on\n                                //get your angular app\n                                var elem = angular.element(document.querySelector('[ng-app]'));\n                                //get the injector.\n                                var injector = elem.injector();\n                                //get the service.\n                                var angularPlayer = injector.get('angularPlayer');\n                                angularPlayer.nextTrack();\n                                $rootScope.$broadcast('track:id', currentTrack);\n                            }\n                        }\n                    }\n                });\n                soundManager.onready(function() {\n                    $log.debug('song manager ready!');\n                    // Ready to use; soundManager.createSound() etc. can now be called.\n                    var isSupported = soundManager.ok();\n                    $log.debug('is supported: ' + isSupported);\n                    $rootScope.$broadcast('angularPlayer:ready', true);\n                });\n            },\n            /**\n             * To check if value is in array\n             */\n            isInArray: function(array, value) {\n                for(var i = 0; i < array.length; i++) {\n                    if(array[i].id === value) {\n                        return i;\n                    }\n                }\n                return false;\n            },\n            /**\n             * getIndexByValue used by this factory\n             */\n            getIndexByValue: function(array, value) {\n                for(var i = 0; i < array.length; i++) {\n                    if(array[i] === value) {\n                        return i;\n                    }\n                }\n                return false;\n            },\n            /**\n             * asyncLoop used by this factory\n             */\n            asyncLoop: function(o) {\n                var i = -1;\n                var loop = function() {\n                    i++;\n                    if(i == o.length) {\n                        o.callback();\n                        return;\n                    }\n                    o.functionToLoop(loop, i);\n                };\n                loop(); //init\n            },\n            setCurrentTrack: function(key) {\n                currentTrack = key;\n            },\n            getCurrentTrack: function() {\n                return currentTrack;\n            },\n            currentTrackData: function() {\n                var trackId = this.getCurrentTrack();\n                var currentKey = this.isInArray(playlist, trackId);\n                return playlist[currentKey];\n            },\n            getPlaylist: function(key) {\n                if(typeof key === 'undefined') {\n                    return playlist;\n                } else {\n                    return playlist[key];\n                }\n            },\n            addToPlaylist: function(track) {\n                playlist.push(track);\n                //broadcast playlist\n                $rootScope.$broadcast('player:playlist', playlist);\n            },\n            isTrackValid: function (track) {\n                if (typeof track == 'undefined') {\n                    $log.debug('invalid track data');\n                    return false;\n                }\n\n                if (track.url.indexOf(\"soundcloud\") > -1) {\n                    //if soundcloud url\n                    if(typeof track.url == 'undefined') {\n                        $log.debug('invalid soundcloud track url');\n                        return false;\n                    }\n                } else {\n                    if(soundManager.canPlayURL(track.url) !== true) {\n                        $log.debug('invalid song url');\n                        return false;\n                    }\n                }\n            },\n            addTrack: function(track) {\n                //check if track itself is valid and if its url is playable\n                if (!this.isTrackValid) {\n                    return null;\n                }\n\n                //check if song already does not exists then add to playlist\n                var inArrayKey = this.isInArray(this.getPlaylist(), track.id);\n                if(inArrayKey === false) {\n                    //$log.debug('song does not exists in playlist');\n                    //add to sound manager\n                    soundManager.createSound({\n                        id: track.id,\n                        url: track.url\n                    });\n                    //add to playlist\n                    this.addToPlaylist(track);\n                }\n                return track.id;\n            },\n            removeSong: function(song, index) {\n                //if this song is playing stop it\n                if(song === currentTrack) {\n                    this.stop();\n                }\n                //unload from soundManager\n                soundManager.destroySound(song);\n                //remove from playlist\n                playlist.splice(index, 1);\n                //once all done then broadcast\n                $rootScope.$broadcast('player:playlist', playlist);\n            },\n            initPlayTrack: function(trackId, isResume) {\n                if(isResume !== true) {\n                    //stop and unload currently playing track\n                    this.stop();\n                    //set new track as current track\n                    this.setCurrentTrack(trackId);\n                }\n                //play it\n                soundManager.play(trackId);\n                $rootScope.$broadcast('track:id', trackId);\n                //set as playing\n                isPlaying = true;\n                $rootScope.$broadcast('music:isPlaying', isPlaying);\n            },\n            play: function() {\n                var trackToPlay = null;\n                //check if no track loaded, else play loaded track\n                if(this.getCurrentTrack() === null) {\n                    if(soundManager.soundIDs.length === 0) {\n                        $log.debug('playlist is empty!');\n                        return;\n                    }\n                    trackToPlay = soundManager.soundIDs[0];\n                    this.initPlayTrack(trackToPlay);\n                } else {\n                    trackToPlay = this.getCurrentTrack();\n                    this.initPlayTrack(trackToPlay, true);\n                }\n            },\n            pause: function() {\n                soundManager.pause(this.getCurrentTrack());\n                //set as not playing\n                isPlaying = false;\n                $rootScope.$broadcast('music:isPlaying', isPlaying);\n            },\n            stop: function() {\n                //first pause it\n                this.pause();\n                this.resetProgress();\n                $rootScope.$broadcast('track:progress', trackProgress);\n                $rootScope.$broadcast('currentTrack:position', 0);\n                $rootScope.$broadcast('currentTrack:duration', 0);\n                soundManager.stopAll();\n                soundManager.unload(this.getCurrentTrack());\n            },\n            playTrack: function(trackId) {\n                this.initPlayTrack(trackId);\n            },\n            nextTrack: function() {\n                if(this.getCurrentTrack() === null) {\n                    $log.debug(\"Please click on Play before this action\");\n                    return null;\n                }\n                var currentTrackKey = this.getIndexByValue(soundManager.soundIDs, this.getCurrentTrack());\n                var nextTrackKey = +currentTrackKey + 1;\n                var nextTrack = soundManager.soundIDs[nextTrackKey];\n                if(typeof nextTrack !== 'undefined') {\n                    this.playTrack(nextTrack);\n                } else {\n                    //if no next track found\n                    if(repeat === true) {\n                        //start first track if repeat is on\n                        this.playTrack(soundManager.soundIDs[0]);\n                    } else {\n                        //breadcase not playing anything\n                        isPlaying = false;\n                        $rootScope.$broadcast('music:isPlaying', isPlaying);\n                    }\n                }\n            },\n            prevTrack: function() {\n                if(this.getCurrentTrack() === null) {\n                    $log.debug(\"Please click on Play before this action\");\n                    return null;\n                }\n                var currentTrackKey = this.getIndexByValue(soundManager.soundIDs, this.getCurrentTrack());\n                var prevTrackKey = +currentTrackKey - 1;\n                var prevTrack = soundManager.soundIDs[prevTrackKey];\n                if(typeof prevTrack !== 'undefined') {\n                    this.playTrack(prevTrack);\n                } else {\n                    $log.debug('no prev track found!');\n                }\n            },\n            mute: function() {\n                if(soundManager.muted === true) {\n                    soundManager.unmute();\n                } else {\n                    soundManager.mute();\n                }\n                $rootScope.$broadcast('music:mute', soundManager.muted);\n            },\n            getMuteStatus: function() {\n                return soundManager.muted;\n            },\n            repeatToggle: function() {\n                if(repeat === true) {\n                    repeat = false;\n                } else {\n                    repeat = true;\n                }\n                $rootScope.$broadcast('music:repeat', repeat);\n            },\n            getRepeatStatus: function() {\n                return repeat;\n            },\n            getVolume: function() {\n                return volume;\n            },\n            adjustVolume: function(increase) {\n                var changeVolume = function(volume) {\n                    for(var i = 0; i < soundManager.soundIDs.length; i++) {\n                        var mySound = soundManager.getSoundById(soundManager.soundIDs[i]);\n                        mySound.setVolume(volume);\n                    }\n                    $rootScope.$broadcast('music:volume', volume);\n                };\n                if(increase === true) {\n                    if(volume < 100) {\n                        volume = volume + 10;\n                        changeVolume(volume);\n                    }\n                } else {\n                    if(volume > 0) {\n                        volume = volume - 10;\n                        changeVolume(volume);\n                    }\n                }\n            },\n            adjustVolumeSlider: function(value) {\n                var changeVolume = function(volume) {\n                    for(var i = 0; i < soundManager.soundIDs.length; i++) {\n                        var mySound = soundManager.getSoundById(soundManager.soundIDs[i]);\n                        mySound.setVolume(volume);\n                    }\n                    $rootScope.$broadcast('music:volume', volume);\n                };\n                changeVolume(value);\n            },\n            clearPlaylist: function(callback) {\n                $log.debug('clear playlist');\n                this.resetProgress();\n                //unload and destroy soundmanager sounds\n                var smIdsLength = soundManager.soundIDs.length;\n                this.asyncLoop({\n                    length: smIdsLength,\n                    functionToLoop: function(loop, i) {\n                        setTimeout(function() {\n                            //custom code\n                            soundManager.destroySound(soundManager.soundIDs[0]);\n                            //custom code\n                            loop();\n                        }, 100);\n                    },\n                    callback: function() {\n                        //callback custom code\n                        $log.debug('All done!');\n                        //clear playlist\n                        playlist = [];\n                        $rootScope.$broadcast('player:playlist', playlist);\n                        callback(true);\n                        //callback custom code\n                    }\n                });\n            },\n            resetProgress: function() {\n                trackProgress = 0;\n            },\n            isPlayingStatus: function() {\n                return isPlaying;\n            }\n        };\n    }\n]);\n\n\nngSoundManager.directive('soundManager', ['$filter', 'angularPlayer',\n    function($filter, angularPlayer) {\n        return {\n            restrict: \"E\",\n            link: function(scope, element, attrs) {\n                //init and load sound manager 2\n                angularPlayer.init();\n                scope.$on('track:progress', function(event, data) {\n                    scope.$apply(function() {\n                        scope.progress = data;\n                    });\n                });\n                scope.$on('track:id', function(event, data) {\n                    scope.$apply(function() {\n                        scope.currentPlaying = angularPlayer.currentTrackData();\n                    });\n                });\n                scope.$on('currentTrack:position', function(event, data) {\n                    scope.$apply(function() {\n                        scope.currentPostion = $filter('humanTime')(data);\n                    });\n                });\n                scope.$on('currentTrack:duration', function(event, data) {\n                    scope.$apply(function() {\n                        scope.currentDuration = $filter('humanTime')(data);\n                    });\n                });\n                scope.isPlaying = false;\n                scope.$on('music:isPlaying', function(event, data) {\n                    scope.$apply(function() {\n                        scope.isPlaying = data;\n                    });\n                });\n                scope.playlist = angularPlayer.getPlaylist(); //on load\n                scope.$on('player:playlist', function(event, data) {\n                    scope.$apply(function() {\n                        scope.playlist = data;\n                    });\n                });\n            }\n        };\n    }\n]);\n\nngSoundManager.directive('musicPlayer', ['angularPlayer', '$log',\n    function(angularPlayer, $log) {\n        return {\n            restrict: \"EA\",\n            scope: {\n                song: \"=addSong\"\n            },\n            link: function(scope, element, attrs) {\n                var addToPlaylist = function() {\n                    var trackId = angularPlayer.addTrack(scope.song);\n                    console.log(scope.song);\n                    //if request to play the track\n                    if(attrs.musicPlayer === 'play') {\n                        angularPlayer.playTrack(trackId);\n                    }\n                };\n                element.bind('click', function() {\n                    $log.debug('adding song to playlist');\n                    addToPlaylist();\n                });\n            }\n        };\n    }\n]);\n\n\nngSoundManager.directive('playFromPlaylist', ['angularPlayer', function (angularPlayer) {\n        return {\n            restrict: \"EA\",\n            scope: {\n                song: \"=playFromPlaylist\"\n            },\n            link: function (scope, element, attrs) {\n                element.bind('click', function (event) {\n                    angularPlayer.playTrack(scope.song.id);\n                });\n            }\n        };\n    }]);\n\nngSoundManager.directive('removeFromPlaylist', ['angularPlayer',\n    function(angularPlayer) {\n        return {\n            restrict: \"EA\",\n            scope: {\n                song: \"=removeFromPlaylist\"\n            },\n            link: function(scope, element, attrs) {\n                element.bind('click', function(event) {\n                    angularPlayer.removeSong(scope.song.id, attrs.index);\n                });\n            }\n        };\n    }\n]);\n\nngSoundManager.directive('seekTrack', ['angularPlayer', '$log', function (angularPlayer, $log) {\n        return {\n            restrict: \"EA\",\n            link: function (scope, element, attrs) {\n\n                element.bind('click', function (event) {\n                    if (angularPlayer.getCurrentTrack() === null) {\n                        $log.debug('no track loaded');\n                        return;\n                    }\n\n                    var sound = soundManager.getSoundById(angularPlayer.getCurrentTrack());\n\n                    var getXOffset = function (event) {\n                      var x = 0, element = event.target;\n                      while (element && !isNaN(element.offsetLeft) && !isNaN(element.offsetTop)) {\n                        x += element.offsetLeft - element.scrollLeft;\n                        element = element.offsetParent;\n                      }\n                      return event.clientX - x;\n                    };\n\n                    var x = event.offsetX || getXOffset(event),\n                        width = element[0].clientWidth,\n                        duration = sound.durationEstimate;\n\n                    sound.setPosition((x / width) * duration);\n                });\n\n            }\n        };\n    }]);\n\n\nngSoundManager.directive('playMusic', ['angularPlayer', function (angularPlayer) {\n        return {\n            restrict: \"EA\",\n            link: function (scope, element, attrs) {\n\n                element.bind('click', function (event) {\n                    angularPlayer.play();\n                });\n\n            }\n        };\n    }]);\n\nngSoundManager.directive('pauseMusic', ['angularPlayer', function (angularPlayer) {\n        return {\n            restrict: \"EA\",\n            link: function (scope, element, attrs) {\n                element.bind('click', function (event) {\n                    angularPlayer.pause();\n                });\n            }\n        };\n    }]);\n\nngSoundManager.directive('stopMusic', ['angularPlayer', function (angularPlayer) {\n        return {\n            restrict: \"EA\",\n            link: function (scope, element, attrs) {\n                element.bind('click', function (event) {\n                    angularPlayer.stop();\n                });\n            }\n        };\n    }]);\n\nngSoundManager.directive('nextTrack', ['angularPlayer', function (angularPlayer) {\n        return {\n            restrict: \"EA\",\n            link: function (scope, element, attrs) {\n\n                element.bind('click', function (event) {\n                    angularPlayer.nextTrack();\n                });\n\n            }\n        };\n    }]);\n\nngSoundManager.directive('prevTrack', ['angularPlayer', function (angularPlayer) {\n        return {\n            restrict: \"EA\",\n            link: function (scope, element, attrs) {\n\n                element.bind('click', function (event) {\n                    angularPlayer.prevTrack();\n                });\n\n            }\n        };\n    }]);\n\nngSoundManager.directive('muteMusic', ['angularPlayer', function (angularPlayer) {\n        return {\n            restrict: \"EA\",\n            link: function (scope, element, attrs) {\n\n                element.bind('click', function (event) {\n                    angularPlayer.mute();\n                });\n\n                scope.mute = angularPlayer.getMuteStatus();\n                scope.$on('music:mute', function (event, data) {\n                    scope.$apply(function () {\n                        scope.mute = data;\n                    });\n                });\n\n            }\n        };\n    }]);\n\nngSoundManager.directive('repeatMusic', ['angularPlayer', function (angularPlayer) {\n        return {\n            restrict: \"EA\",\n            link: function (scope, element, attrs) {\n\n                element.bind('click', function (event) {\n                    angularPlayer.repeatToggle();\n                });\n\n                scope.repeat = angularPlayer.getRepeatStatus();\n                scope.$on('music:repeat', function (event, data) {\n                    scope.$apply(function () {\n                        scope.repeat = data;\n                    });\n                });\n            }\n        };\n    }]);\n\nngSoundManager.directive('musicVolume', ['angularPlayer',\n    function(angularPlayer) {\n        return {\n            restrict: \"EA\",\n            link: function(scope, element, attrs) {\n                element.bind('click', function(event) {\n                    if(attrs.type === 'increase') {\n                        angularPlayer.adjustVolume(true);\n                    } else {\n                        angularPlayer.adjustVolume(false);\n                    }\n                });\n                scope.volume = angularPlayer.getVolume();\n                scope.$on('music:volume', function(event, data) {\n                    scope.$apply(function() {\n                        scope.volume = data;\n                    });\n                });\n            }\n        };\n    }\n]);\n\nngSoundManager.directive('clearPlaylist', ['angularPlayer', '$log',\n    function(angularPlayer, $log) {\n        return {\n            restrict: \"EA\",\n            link: function(scope, element, attrs) {\n                element.bind('click', function(event) {\n                    //first stop any playing music\n                    angularPlayer.stop();\n                    angularPlayer.setCurrentTrack(null);\n                    angularPlayer.clearPlaylist(function(data) {\n                      $log.debug('all clear!');\n                    });\n                });\n            }\n        };\n    }\n]);\n\n\nngSoundManager.directive('playAll', ['angularPlayer', '$log',\n    function(angularPlayer, $log) {\n        return {\n            restrict: \"EA\",\n            scope: {\n                songs: '=playAll'\n            },\n            link: function(scope, element, attrs) {\n                element.bind('click', function(event) {\n                    //first clear the playlist\n                    angularPlayer.clearPlaylist(function(data) {\n                        $log.debug('cleared, ok now add to playlist');\n                        //add songs to playlist\n                        for(var i = 0; i < scope.songs.length; i++) {\n                            angularPlayer.addTrack(scope.songs[i]);\n                        }\n                        \n                        if (attrs.play != 'false') {\n                            //play first song\n                            angularPlayer.play();\n                        }\n                    });\n                });\n            }\n        };\n    }\n]);\n\n\nngSoundManager.directive('volumeBar', ['angularPlayer',\n    function(angularPlayer) {\n        return {\n            restrict: \"EA\",\n            link: function(scope, element, attrs) {\n                element.bind('click', function(event) {\n                    var getXOffset = function(event) {\n                        var x = 0,\n                            element = event.target;\n                        while(element && !isNaN(element.offsetLeft) && !isNaN(element.offsetTop)) {\n                            x += element.offsetLeft - element.scrollLeft;\n                            element = element.offsetParent;\n                        }\n                        return event.clientX - x;\n                    };\n                    var x = event.offsetX || getXOffset(event),\n                        width = element[0].clientWidth,\n                        duration = 100;\n                    var volume = (x / width) * duration;\n                    angularPlayer.adjustVolumeSlider(volume);\n                });\n                scope.volume = angularPlayer.getVolume();\n                scope.$on('music:volume', function(event, data) {\n                    scope.$apply(function() {\n                        scope.volume = data;\n                    });\n                });\n            }\n        };\n    }\n]);\n\nngSoundManager.directive('playPauseToggle', ['angularPlayer',\n    function(angularPlayer) {\n        return {\n            restrict: \"EA\",\n            link: function(scope, element, attrs) {\n                scope.$on('music:isPlaying', function(event, data) {\n                    //update html\n                    if (data) {\n                        if(typeof attrs.pause != 'undefined') {\n                            element.html(attrs.pause);\n                        } else {\n                            element.html('Pause');\n                        }\n                    } else {\n                        if(typeof attrs.play != 'undefined') {\n                            element.html(attrs.play);\n                        } else {\n                            element.html('Play');\n                        }\n                    }\n                });\n                \n                element.bind('click', function(event) {\n                    if(angularPlayer.isPlayingStatus()) {\n                        //if playing then pause\n                        angularPlayer.pause();\n                    } else {\n                        //else play if not playing\n                        angularPlayer.play();\n                        \n                    }\n                });\n            }\n        };\n    }\n]);\n\n(function(){\n\t'use strict';\n\n\tangular\n\t\t.module('app')\n\t\t.config(routerConfig)\n\n\tfunction routerConfig($stateProvider, $urlRouterProvider){\n\t\t$stateProvider\n\t\t\t.state('main', {\n\t\t\t\turl: '/',\n\t\t\t\ttemplateUrl: 'app/main/main.html',\n\t\t\t\tcontroller: 'mainController',\n\t\t\t\tcontrollerAs: 'vm'\n\t\t\t})\n\n\t\t// $urlRouterProvider.otherwise('/');\n\t}\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('mainController', ['$log', mainController]);\n\n    function mainController($log){\n    \tvar vm = this;\n\n    }\n\n})();\n(function() {\n\t'use strict';\n\n\tangular\n\t\t.module('app')\n\t\t.run(runBlock)\n\t\t.config(['$locationProvider', html5Config])\n\n\t/** @ngInject */\n\tfunction runBlock($log) {\n\t\t$log.debug('runBlock end');\n\t}\n\n\tfunction html5Config($locationProvider) {\n\t\t$locationProvider.html5Mode(true);\n\t}\n\n})();\n\nangular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/player/player.html\",\"<section id=player class=blur><header class=song-information><div><h3 ng-bind=\\\"(currentPlaying.title) ? currentPlaying.title : \\'No Song Playing\\'\\\"></h3><div ng-bind=\\\"(currentPlaying.artist) ? currentPlaying.artist : \\'--\\'\\\"></div></div><div><button class=\\\"icon sm\\\" ng-include=\\\"\\'content/images/icon-menu.svg\\'\\\" ng-click=vm.toggleMenu() ng-class=\\\"{\\'icon-white\\': !vm.isMenuActive, \\'icon-blue\\': vm.isMenuActive}\\\"></button><ul class=context-menu ng-class=\\\"{\\'active\\': vm.isMenuActive}\\\"><li><a ng-class=\\\"{\\'active\\': vm.isPlaylistActive}\\\" ng-click=\\\"vm.toggleView(\\'isPlaylistActive\\')\\\">Playlist</a></li><li><a ng-class=\\\"{\\'active\\': vm.isArtActive}\\\" ng-click=\\\"vm.toggleView(\\'isArtActive\\')\\\">Album</a></li><li><a ng-class=\\\"{\\'active\\': vm.isVisualActive}\\\" ng-click=\\\"vm.toggleView(\\'isVisualActive\\')\\\">Visual</a></li></ul></div></header><section class=player><sound-manager></sound-manager><div class=\\\"player-content content-playlist\\\" ng-show=vm.isPlaylistActive ng-class=\\\"{\\'not-visible\\': vm.isMenuActive}\\\"><ol class=playlist><li ng-repeat=\\\"song in vm.songs\\\" ng-class=\\\"{\\'current-song\\': currentPlaying.title == song.title }\\\"><div class=\\\"icon sm icon-blue\\\" ng-include=\\\"\\'/content/images/icon-volume.svg\\'\\\" ng-if=\\\"currentPlaying.title == song.title\\\"></div><a music-player=play add-song=song><div class=song-name>{{ song.title }}</div><div class=song-duration>1:00:04</div></a></li></ol></div><div class=\\\"player-content content-art\\\" ng-show=vm.isArtActive ng-class=\\\"{\\'not-visible\\': vm.isMenuActive}\\\"><div class=art><img ng-src=\\\"{{ currentPlaying.art }}\\\"></div></div><div class=\\\"player-content content-visual\\\" ng-show=vm.isVisualActive ng-class=\\\"{\\'not-visible\\': vm.isMenuActive}\\\"><canvas id=visual></canvas></div><section><div class=primary-actions><button prev-track class=\\\"icon md icon-white\\\" ng-include=\\\"\\'content/images/icon-previous.svg\\'\\\"></button><div class=play><button play-music class=\\\"icon lg icon-white\\\" ng-include=\\\"\\'content/images/icon-play.svg\\'\\\" ng-if=!isPlaying></button> <button pause-music class=\\\"icon lg icon-white\\\" ng-include=\\\"\\'content/images/icon-pause.svg\\'\\\" ng-if=isPlaying></button></div><button next-track class=\\\"icon md icon-white\\\" ng-include=\\\"\\'content/images/icon-next.svg\\'\\\"></button></div><div class=seeker seek-track><div class=seek-base><div class=seek-load ng-style=\\\"{width : ( progress + \\'%\\' ) }\\\"></div></div><div><div ng-bind=\\\"(currentPostion) ? currentPostion : \\'0:00\\'\\\"></div><div ng-bind=\\\"(currentDuration) ? currentDuration : \\'0:00\\'\\\"></div></div></div><div class=secondary-actions><button class=\\\"icon sm icon-white\\\" ng-include=\\\"\\'content/images/icon-favorite.svg\\'\\\"></button> <button class=\\\"icon sm icon-white\\\" ng-include=\\\"\\'content/images/icon-musical-note.svg\\'\\\"></button> <button repeat-music class=\\\"icon sm\\\" ng-include=\\\"\\'content/images/icon-repeat.svg\\'\\\" ng-class=\\\"{\\'icon-white\\' : !repeat, \\'icon-blue\\': repeat }\\\"></button><!-- <button class=\\\"icon sm icon-white\\\" ng-include=\\\"\\'content/images/icon-shuffle.svg\\'\\\"></button> --> <button mute-music class=\\\"icon sm\\\" ng-include=\\\"\\'content/images/icon-mute.svg\\'\\\" ng-class=\\\"{\\'icon-white\\' : !mute, \\'icon-blue\\': mute }\\\"></button></div></section></section><button style=\\\"display: none\\\" play-all=vm.songs data-play=false player-init-playlist></button></section>\");\n$templateCache.put(\"app/player/player.songArt.html\",\"<div class=art></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=main-container><div ui-view><h1>MEZCOBAR</h1><div class=\\\"btn-group btn-group-center btn-group-bottom\\\"><!-- <button class=\\\"btn-go\\\" ui-sref=\\\"player\\\">Events</button> --> <button class=btn-go ui-sref=player>Bookings</button> <button class=btn-go ui-sref=player>Sessions</button></div></div></div>\");}]);"],"sourceRoot":"/source/"}